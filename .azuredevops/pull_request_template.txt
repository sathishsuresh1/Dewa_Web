### Title: [Feature Name or Work Item ID]
*Provide a brief and meaningful title for the feature being merged.*

---

## **Description**

- **What does this PR do?**
  Summarize the feature or changes introduced in this pull request.
  - Example: "Implements user login and registration functionality."
  - Example: "Refactors the API to support pagination for large datasets."

- **Why is this important?**
  Explain the purpose or benefit of this feature in relation to the development branch.
  - Example: "This enables new users to register and existing users to log in, crucial for the upcoming product launch."
  - Example: "Pagination helps improve performance when handling large amounts of data."

---

## **Related Work Items / Issue Links**

- Link to relevant work items, user stories, or bugs.
  - Example: `AB#1234` or `[JIRA-456]`
  - Example: "Closes #789 - Bug related to session handling."

---

## **Type of Change**

- [ ] New feature (non-breaking change that adds functionality)
- [ ] Bug fix (non-breaking change that fixes an issue)
- [ ] Refactor (code changes that do not add new features but improve readability/performance)
- [ ] Performance improvement
- [ ] Documentation update
- [ ] Test cases added/modified

---

## **Checklist**

**Development:**
- [ ] Code follows the project's coding guidelines (e.g., naming conventions, SOLID principles).
- [ ] No hardcoded credentials, API keys, or sensitive information.
- [ ] All unit tests and integration tests pass.
- [ ] The code does not introduce technical debt and is optimized for performance.
- [ ] Code includes comments for complex logic.
- [ ] Feature tested across multiple environments (local, staging).

**Security:**
- [ ] Input is validated to prevent security vulnerabilities (e.g., SQL Injection, XSS).
- [ ] Proper authentication and authorization mechanisms are implemented.
- [ ] Sensitive data (such as passwords or tokens) is stored and transmitted securely.

**Documentation:**
- [ ] Relevant documentation has been updated (API documentation, README, etc.).
- [ ] New environment variables, configurations, or permissions are documented.

---

## **Testing Details**

- Describe the tests performed to ensure the functionality works as expected.
  - Example: "Manually tested the login and registration flows."
  - Example: "Ran the existing test suite to verify backward compatibility."

- [ ] Unit tests added
- [ ] Integration tests updated/added
- [ ] Feature tested on local environment
- [ ] Feature tested on staging environment

---

## **Screenshots (if applicable)**

- Include any relevant screenshots or GIFs that show the new feature in action.
  - Example: "Before and after screenshots of the user registration page."
  - Example: "GIF of the API response time improvements."

---

## **Potential Impact on Development Branch**

- Highlight any potential side effects or issues that might arise from merging this feature.
  - Example: "Changes to session management may impact existing login sessions."
  - Example: "Refactor of API endpoints may require updates to the frontend application."

---

## **Deployment Notes**

- [ ] There are no migrations or database schema changes.
- [ ] Any new environment variables or configurations are added to the development environment.
- [ ] Verify that the feature has been tested in the development environment after merging.

---

## **Steps to Test This PR**

- Provide detailed steps to test the feature after merging into the development branch.
  - Example:
    1. Pull the `development` branch after the merge.
    2. Run the application locally.
    3. Navigate to the user login page.
    4. Test user registration, login, and password reset flows.

---

## **Reviewers**

- Mention team members responsible for code review.
  - Example: @backend-team @frontend-team

---

## **PR Status**
- [ ] Ready for review
- [ ] WIP (Work in progress)

