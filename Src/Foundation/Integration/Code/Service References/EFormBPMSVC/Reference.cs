//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DEWAXP.Foundation.Integration.EFormBPMSVC {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", ConfigurationName="EFormBPMSVC.EworkSoap")]
    public interface EworkSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LoginAsGuest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginAsGuest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LoginAsGuest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsGuestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LoginInEForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LoginInEForm(string Username, string UPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LoginInEForm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginInEFormAsync(string Username, string UPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Secure_LoginInEForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Secure_LoginInEForm(string Username, string MD5_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Secure_LoginInEForm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Secure_LoginInEFormAsync(string Username, string MD5_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/SubmitNewForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SubmitNewForm(string XML_FormValues, string SessionID, string MapName, string ActionName, string FormName, int MapVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/SubmitNewForm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SubmitNewFormAsync(string XML_FormValues, string SessionID, string MapName, string ActionName, string FormName, int MapVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Process_Action", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Process_Action(string SessionID, string ActionName, string FolderId, string XML_FormValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Process_Action", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Process_ActionAsync(string SessionID, string ActionName, string FolderId, string XML_FormValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Read_FormValues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Read_FormValues(string SessionID, string FolderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Read_FormValues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Read_FormValuesAsync(string SessionID, string FolderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Check_Session", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Check_Session(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Check_Session", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Check_SessionAsync(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/GetToDoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetToDoList(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/GetToDoList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetToDoListAsync(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Check_UserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Check_UserID(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Check_UserID", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Check_UserIDAsync(string UserID);
        
        // CODEGEN: Parameter 'FileBytesArray' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Upload_Attachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse Upload_Attachment(DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Upload_Attachment", ReplyAction="*")]
        System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse> Upload_AttachmentAsync(DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Delete_Attachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Delete_Attachment(string SessionID, string efolderId, string FileName, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Delete_Attachment", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Delete_AttachmentAsync(string SessionID, string efolderId, string FileName, string username, string password);
        
        // CODEGEN: Parameter 'Download_AttachmentResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Download_Attachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse Download_Attachment(DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Download_Attachment", ReplyAction="*")]
        System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse> Download_AttachmentAsync(DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Get_Map_Version", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        short Get_Map_Version(string MapName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Get_Map_Version", ReplyAction="*")]
        System.Threading.Tasks.Task<short> Get_Map_VersionAsync(string MapName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Get_User_Roles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Get_User_Roles(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Get_User_Roles", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Get_User_RolesAsync(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LogOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool LogOut(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/LogOut", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> LogOutAsync(string SessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Archive_eForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Archive_eForm(string XML_FormValues, string FolderID, string DMS_Path, string DMS_Type, string DMS_Attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Archive_eForm", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Archive_eFormAsync(string XML_FormValues, string FolderID, string DMS_Path, string DMS_Type, string DMS_Attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Query_Ework_DB(string sql, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DBAsync(string sql, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update_V2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Query_Ework_DB_Update_V2(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update_V2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_Update_V2Async(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update_V3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Query_Ework_DB_Update_V3(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update_V3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_Update_V3Async(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Query_Ework_DB_Update(string a, string b, string c, string d, string e, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Query_Ework_DB_Update", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_UpdateAsync(string a, string b, string c, string d, string e, string FID, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_DMS_Integration_Table", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Update_DMS_Integration_Table(string efolderid, string dmsid, string filename, double filesize, string description, bool isvirtualdoc, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_DMS_Integration_Table", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Update_DMS_Integration_TableAsync(string efolderid, string dmsid, string filename, double filesize, string description, bool isvirtualdoc, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Remove_From_DMS_Integration_Table", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Remove_From_DMS_Integration_Table(string dmsid, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Remove_From_DMS_Integration_Table", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Remove_From_DMS_Integration_TableAsync(string dmsid, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_Payment_Step1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Update_Payment_Step1(string efolderid, string transid, double amount, string PaymentChannel, string paymentstatus, System.DateTime trdate, string eservice_name, string eservice_forwardurl, string spcode, string servcode, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_Payment_Step1", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> Update_Payment_Step1Async(string efolderid, string transid, double amount, string PaymentChannel, string paymentstatus, System.DateTime trdate, string eservice_name, string eservice_forwardurl, string spcode, string servcode, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_Payment_Step2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Update_Payment_Step2(string transid, string degTrn, string paymentmethod, string degmessage, string degmessagecode, string paymentstatus, System.DateTime trenddate, int updatedByDEGWs, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Update_Payment_Step2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Update_Payment_Step2Async(string transid, string degTrn, string paymentmethod, string degmessage, string degmessagecode, string paymentstatus, System.DateTime trenddate, int updatedByDEGWs, string DB_Username, string DB_Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Test_WebService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Test_WebService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/Test_WebService", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Test_WebServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/GetWebserviceVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetWebserviceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ework_WebService/Service1/GetWebserviceVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetWebserviceVersionAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_Attachment", WrapperNamespace="http://tempuri.org/Ework_WebService/Service1", IsWrapped=true)]
    public partial class Upload_AttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=0)]
        public string SessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=1)]
        public string efolderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=2)]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileBytesArray;
        
        public Upload_AttachmentRequest() {
        }
        
        public Upload_AttachmentRequest(string SessionID, string efolderId, string FileName, byte[] FileBytesArray) {
            this.SessionID = SessionID;
            this.efolderId = efolderId;
            this.FileName = FileName;
            this.FileBytesArray = FileBytesArray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload_AttachmentResponse", WrapperNamespace="http://tempuri.org/Ework_WebService/Service1", IsWrapped=true)]
    public partial class Upload_AttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=0)]
        public bool Upload_AttachmentResult;
        
        public Upload_AttachmentResponse() {
        }
        
        public Upload_AttachmentResponse(bool Upload_AttachmentResult) {
            this.Upload_AttachmentResult = Upload_AttachmentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Download_Attachment", WrapperNamespace="http://tempuri.org/Ework_WebService/Service1", IsWrapped=true)]
    public partial class Download_AttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=0)]
        public string SessionID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=1)]
        public string efolderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=2)]
        public string FileName;
        
        public Download_AttachmentRequest() {
        }
        
        public Download_AttachmentRequest(string SessionID, string efolderId, string FileName) {
            this.SessionID = SessionID;
            this.efolderId = efolderId;
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Download_AttachmentResponse", WrapperNamespace="http://tempuri.org/Ework_WebService/Service1", IsWrapped=true)]
    public partial class Download_AttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/Ework_WebService/Service1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Download_AttachmentResult;
        
        public Download_AttachmentResponse() {
        }
        
        public Download_AttachmentResponse(byte[] Download_AttachmentResult) {
            this.Download_AttachmentResult = Download_AttachmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EworkSoapChannel : DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EworkSoapClient : System.ServiceModel.ClientBase<DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap>, DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap {
        
        public EworkSoapClient() {
        }
        
        public EworkSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EworkSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EworkSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EworkSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string LoginAsGuest() {
            return base.Channel.LoginAsGuest();
        }
        
        public System.Threading.Tasks.Task<string> LoginAsGuestAsync() {
            return base.Channel.LoginAsGuestAsync();
        }
        
        public string LoginInEForm(string Username, string UPassword) {
            return base.Channel.LoginInEForm(Username, UPassword);
        }
        
        public System.Threading.Tasks.Task<string> LoginInEFormAsync(string Username, string UPassword) {
            return base.Channel.LoginInEFormAsync(Username, UPassword);
        }
        
        public string Secure_LoginInEForm(string Username, string MD5_Password) {
            return base.Channel.Secure_LoginInEForm(Username, MD5_Password);
        }
        
        public System.Threading.Tasks.Task<string> Secure_LoginInEFormAsync(string Username, string MD5_Password) {
            return base.Channel.Secure_LoginInEFormAsync(Username, MD5_Password);
        }
        
        public string SubmitNewForm(string XML_FormValues, string SessionID, string MapName, string ActionName, string FormName, int MapVersion) {
            return base.Channel.SubmitNewForm(XML_FormValues, SessionID, MapName, ActionName, FormName, MapVersion);
        }
        
        public System.Threading.Tasks.Task<string> SubmitNewFormAsync(string XML_FormValues, string SessionID, string MapName, string ActionName, string FormName, int MapVersion) {
            return base.Channel.SubmitNewFormAsync(XML_FormValues, SessionID, MapName, ActionName, FormName, MapVersion);
        }
        
        public bool Process_Action(string SessionID, string ActionName, string FolderId, string XML_FormValues) {
            return base.Channel.Process_Action(SessionID, ActionName, FolderId, XML_FormValues);
        }
        
        public System.Threading.Tasks.Task<bool> Process_ActionAsync(string SessionID, string ActionName, string FolderId, string XML_FormValues) {
            return base.Channel.Process_ActionAsync(SessionID, ActionName, FolderId, XML_FormValues);
        }
        
        public string Read_FormValues(string SessionID, string FolderID) {
            return base.Channel.Read_FormValues(SessionID, FolderID);
        }
        
        public System.Threading.Tasks.Task<string> Read_FormValuesAsync(string SessionID, string FolderID) {
            return base.Channel.Read_FormValuesAsync(SessionID, FolderID);
        }
        
        public bool Check_Session(string SessionID) {
            return base.Channel.Check_Session(SessionID);
        }
        
        public System.Threading.Tasks.Task<bool> Check_SessionAsync(string SessionID) {
            return base.Channel.Check_SessionAsync(SessionID);
        }
        
        public string GetToDoList(string SessionID) {
            return base.Channel.GetToDoList(SessionID);
        }
        
        public System.Threading.Tasks.Task<string> GetToDoListAsync(string SessionID) {
            return base.Channel.GetToDoListAsync(SessionID);
        }
        
        public bool Check_UserID(string UserID) {
            return base.Channel.Check_UserID(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> Check_UserIDAsync(string UserID) {
            return base.Channel.Check_UserIDAsync(UserID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap.Upload_Attachment(DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest request) {
            return base.Channel.Upload_Attachment(request);
        }
        
        public bool Upload_Attachment(string SessionID, string efolderId, string FileName, byte[] FileBytesArray) {
            DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest inValue = new DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest();
            inValue.SessionID = SessionID;
            inValue.efolderId = efolderId;
            inValue.FileName = FileName;
            inValue.FileBytesArray = FileBytesArray;
            DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse retVal = ((DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap)(this)).Upload_Attachment(inValue);
            return retVal.Upload_AttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse> DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap.Upload_AttachmentAsync(DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest request) {
            return base.Channel.Upload_AttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentResponse> Upload_AttachmentAsync(string SessionID, string efolderId, string FileName, byte[] FileBytesArray) {
            DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest inValue = new DEWAXP.Foundation.Integration.EFormBPMSVC.Upload_AttachmentRequest();
            inValue.SessionID = SessionID;
            inValue.efolderId = efolderId;
            inValue.FileName = FileName;
            inValue.FileBytesArray = FileBytesArray;
            return ((DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap)(this)).Upload_AttachmentAsync(inValue);
        }
        
        public bool Delete_Attachment(string SessionID, string efolderId, string FileName, string username, string password) {
            return base.Channel.Delete_Attachment(SessionID, efolderId, FileName, username, password);
        }
        
        public System.Threading.Tasks.Task<bool> Delete_AttachmentAsync(string SessionID, string efolderId, string FileName, string username, string password) {
            return base.Channel.Delete_AttachmentAsync(SessionID, efolderId, FileName, username, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap.Download_Attachment(DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest request) {
            return base.Channel.Download_Attachment(request);
        }
        
        public byte[] Download_Attachment(string SessionID, string efolderId, string FileName) {
            DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest inValue = new DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest();
            inValue.SessionID = SessionID;
            inValue.efolderId = efolderId;
            inValue.FileName = FileName;
            DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse retVal = ((DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap)(this)).Download_Attachment(inValue);
            return retVal.Download_AttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse> DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap.Download_AttachmentAsync(DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest request) {
            return base.Channel.Download_AttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentResponse> Download_AttachmentAsync(string SessionID, string efolderId, string FileName) {
            DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest inValue = new DEWAXP.Foundation.Integration.EFormBPMSVC.Download_AttachmentRequest();
            inValue.SessionID = SessionID;
            inValue.efolderId = efolderId;
            inValue.FileName = FileName;
            return ((DEWAXP.Foundation.Integration.EFormBPMSVC.EworkSoap)(this)).Download_AttachmentAsync(inValue);
        }
        
        public short Get_Map_Version(string MapName) {
            return base.Channel.Get_Map_Version(MapName);
        }
        
        public System.Threading.Tasks.Task<short> Get_Map_VersionAsync(string MapName) {
            return base.Channel.Get_Map_VersionAsync(MapName);
        }
        
        public string Get_User_Roles(string SessionID) {
            return base.Channel.Get_User_Roles(SessionID);
        }
        
        public System.Threading.Tasks.Task<string> Get_User_RolesAsync(string SessionID) {
            return base.Channel.Get_User_RolesAsync(SessionID);
        }
        
        public bool LogOut(string SessionID) {
            return base.Channel.LogOut(SessionID);
        }
        
        public System.Threading.Tasks.Task<bool> LogOutAsync(string SessionID) {
            return base.Channel.LogOutAsync(SessionID);
        }
        
        public string Archive_eForm(string XML_FormValues, string FolderID, string DMS_Path, string DMS_Type, string DMS_Attributes) {
            return base.Channel.Archive_eForm(XML_FormValues, FolderID, DMS_Path, DMS_Type, DMS_Attributes);
        }
        
        public System.Threading.Tasks.Task<string> Archive_eFormAsync(string XML_FormValues, string FolderID, string DMS_Path, string DMS_Type, string DMS_Attributes) {
            return base.Channel.Archive_eFormAsync(XML_FormValues, FolderID, DMS_Path, DMS_Type, DMS_Attributes);
        }
        
        public System.Data.DataSet Query_Ework_DB(string sql, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB(sql, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DBAsync(string sql, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DBAsync(sql, DB_Username, DB_Password);
        }
        
        public System.Data.DataSet Query_Ework_DB_Update_V2(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_Update_V2(XML_FormValues, MapName, FID, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_Update_V2Async(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_Update_V2Async(XML_FormValues, MapName, FID, DB_Username, DB_Password);
        }
        
        public System.Data.DataSet Query_Ework_DB_Update_V3(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_Update_V3(XML_FormValues, MapName, FID, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_Update_V3Async(string XML_FormValues, string MapName, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_Update_V3Async(XML_FormValues, MapName, FID, DB_Username, DB_Password);
        }
        
        public System.Data.DataSet Query_Ework_DB_Update(string a, string b, string c, string d, string e, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_Update(a, b, c, d, e, FID, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Query_Ework_DB_UpdateAsync(string a, string b, string c, string d, string e, string FID, string DB_Username, string DB_Password) {
            return base.Channel.Query_Ework_DB_UpdateAsync(a, b, c, d, e, FID, DB_Username, DB_Password);
        }
        
        public bool Update_DMS_Integration_Table(string efolderid, string dmsid, string filename, double filesize, string description, bool isvirtualdoc, string DB_Username, string DB_Password) {
            return base.Channel.Update_DMS_Integration_Table(efolderid, dmsid, filename, filesize, description, isvirtualdoc, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<bool> Update_DMS_Integration_TableAsync(string efolderid, string dmsid, string filename, double filesize, string description, bool isvirtualdoc, string DB_Username, string DB_Password) {
            return base.Channel.Update_DMS_Integration_TableAsync(efolderid, dmsid, filename, filesize, description, isvirtualdoc, DB_Username, DB_Password);
        }
        
        public bool Remove_From_DMS_Integration_Table(string dmsid, string DB_Username, string DB_Password) {
            return base.Channel.Remove_From_DMS_Integration_Table(dmsid, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<bool> Remove_From_DMS_Integration_TableAsync(string dmsid, string DB_Username, string DB_Password) {
            return base.Channel.Remove_From_DMS_Integration_TableAsync(dmsid, DB_Username, DB_Password);
        }
        
        public bool Update_Payment_Step1(string efolderid, string transid, double amount, string PaymentChannel, string paymentstatus, System.DateTime trdate, string eservice_name, string eservice_forwardurl, string spcode, string servcode, string DB_Username, string DB_Password) {
            return base.Channel.Update_Payment_Step1(efolderid, transid, amount, PaymentChannel, paymentstatus, trdate, eservice_name, eservice_forwardurl, spcode, servcode, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<bool> Update_Payment_Step1Async(string efolderid, string transid, double amount, string PaymentChannel, string paymentstatus, System.DateTime trdate, string eservice_name, string eservice_forwardurl, string spcode, string servcode, string DB_Username, string DB_Password) {
            return base.Channel.Update_Payment_Step1Async(efolderid, transid, amount, PaymentChannel, paymentstatus, trdate, eservice_name, eservice_forwardurl, spcode, servcode, DB_Username, DB_Password);
        }
        
        public string Update_Payment_Step2(string transid, string degTrn, string paymentmethod, string degmessage, string degmessagecode, string paymentstatus, System.DateTime trenddate, int updatedByDEGWs, string DB_Username, string DB_Password) {
            return base.Channel.Update_Payment_Step2(transid, degTrn, paymentmethod, degmessage, degmessagecode, paymentstatus, trenddate, updatedByDEGWs, DB_Username, DB_Password);
        }
        
        public System.Threading.Tasks.Task<string> Update_Payment_Step2Async(string transid, string degTrn, string paymentmethod, string degmessage, string degmessagecode, string paymentstatus, System.DateTime trenddate, int updatedByDEGWs, string DB_Username, string DB_Password) {
            return base.Channel.Update_Payment_Step2Async(transid, degTrn, paymentmethod, degmessage, degmessagecode, paymentstatus, trenddate, updatedByDEGWs, DB_Username, DB_Password);
        }
        
        public string Test_WebService() {
            return base.Channel.Test_WebService();
        }
        
        public System.Threading.Tasks.Task<string> Test_WebServiceAsync() {
            return base.Channel.Test_WebServiceAsync();
        }
        
        public string GetWebserviceVersion() {
            return base.Channel.GetWebserviceVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetWebserviceVersionAsync() {
            return base.Channel.GetWebserviceVersionAsync();
        }
    }
}
