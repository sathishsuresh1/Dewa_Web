@using System.Collections.Specialized
@using Glass.Mapper.Sc
@using Glass.Mapper.Sc.Web.Mvc
@using Sitecore.Globalization
@using Sitecore.Links
@using Sitecore.Resources.Media
@using DEWAXP.Feature.CommonComponents.Models.Renderings
@model List<HeroSlidewithCTA>
@{


}

@if (Model != null && Model.Count > 0)
{
    <div class="m1-hero" data-component="m1-hero">
        <div class="m1-hero__container">
            <div class="m1-hero__carousel">
                @foreach (var Slideitem in Model)
                {
                    if (Slideitem != null)
                    {
                        string _CTA1Type = Slideitem.CTA1Type != null && !String.IsNullOrEmpty(Slideitem.CTA1Type.DataValue) ? Slideitem.CTA1Type.DataValue : "";
                        string _CTA2Type = Slideitem.CTA2Type != null && !String.IsNullOrEmpty(Slideitem.CTA2Type.DataValue) ? Slideitem.CTA2Type.DataValue : "";
                        <div class="m1-hero__carousel-slide" style="background-image: url('@(Slideitem.Image != null && !string.IsNullOrWhiteSpace(Slideitem.Image.Src) ? Slideitem.Image.Src : "")');">
                            <div class="m1-hero__carousel-slide-inner">
                                @*<div class="m1-hero__carousel-slide-imagepanel">
                                    @Html.Glass().RenderImage(Slideitem, x => x.Image, new { @class = "m1-hero__carousel-slide-image" })
                                </div>*@
                                <div class="m1-hero__carousel-slide-panel">
                                    <div class="m1-hero__carousel-slide-panel--inner">
                                        @if (!string.IsNullOrWhiteSpace(Slideitem.Header))
                                        {
                                            <div class="m1-hero__carousel-slide-panel-title">
                                                @Html.Glass().Editable(Slideitem, x => x.Header)
                                            </div>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(Slideitem.Description))
                                        {
                                            <div class="m1-hero__carousel-slide-panel-subtitle">
                                                @Html.Glass().Editable(Slideitem, x => x.Description)
                                            </div>
                                        }
                                        @*<div class="m1-hero__carousel-slide-panel-text">
                                            @Html.Glass().Editable(Slideitem, x => x.Description)
                                        </div>*@
                                        @if (Slideitem.CTA1Link != null && !string.IsNullOrWhiteSpace(Slideitem.CTA1Link.Url))
                                        {
                                            using (Html.Glass().BeginRenderLink(Slideitem, x => x.CTA1Link, new { @class = _CTA1Type }))
                                            {
                                                @Html.Glass().Editable(Slideitem, x => x.CTA1Text)
                                            }
                                        }
                                        @if (Slideitem.CTA2Link != null && !string.IsNullOrWhiteSpace(Slideitem.CTA2Link.Url))
                                        {
                                            using (Html.Glass().BeginRenderLink(Slideitem, x => x.CTA2Link, new { @class = _CTA2Type }))
                                            {
                                                @Html.Glass().Editable(Slideitem, x => x.CTA2Text)
                                            }
                                        }

                                    </div>
                                </div>


                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="m1-hero__carousel-nav">
            <div class="m1-hero__carousel-nav-outer">
                <span class="m1-hero__carousel-button--prev slick-arrow" style=""></span>
                <div class="m1-hero__carousel-nav-inner-btn" style="width: 134px;">
                    <div role="button" class="m1-hero__carousel-button-play-pause  m1-hero__carousel-button--pause" style="display: block;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="21" height="21" viewBox="0 0 21 21">
                            <circle cx="10.5" cy="10.5" r="9" fill="none" stroke="white" stroke-width="2" />
                        </svg>
                    </div>
                </div>
                <span class="m1-hero__carousel-button--next slick-arrow" style=""></span>
            </div>
        </div>
        <div class="m1-hero__carousel-mouse">
        </div>
    </div>
}

