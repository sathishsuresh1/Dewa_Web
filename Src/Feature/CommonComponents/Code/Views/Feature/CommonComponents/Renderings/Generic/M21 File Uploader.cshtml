@using Sitecore.Globalization
@using Sitecore.Mvc
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.CommonComponents.Models.Renderings.FileUploader
@{
	var required = Html.Sitecore().CurrentRendering.Parameters["m21_uploader_file_required"] ?? "true";
	var placeholderImage = Html.Sitecore().CurrentRendering.Parameters["m21_uploader_load_spinner"] == "true" ? "/images/ajax-loader_50x50.gif" : Model.ImageDataSource;
	var allowPdfDocuments = Html.Sitecore().CurrentRendering.Parameters["m21_pdf_uploader"] ?? "false";
}

<div class="form-field form-field--upload">
    <div class="form-field__input-wrapper">
        <div class="form-field__preview-wrapper">
            @if (allowPdfDocuments.ToLower() == "true")
            {
                <img src="/images/preview_pdf@2x.png" data-src="/images/preview_pdf@2x.png" data-success="/images/upload_success@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="@Model.UploadName">}
            else
            {
                <img data-src="@Model.ImageDataSource" src="@placeholderImage" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="@Model.UploadName">}
        </div>
        <div class="form-field__uploader-details">
            <label for="form-field-@Model.UploadName" class="form-field__label">
                <strong class="form-field__label-description inline-block">@Model.UploadDescription</strong>
                @if ("true".Equals(required))
                {
                    <span class="form-field__label-required aria-only">@Translate.Text("generic required label")</span>
                }
                else
                {
                    <span class="form-field__label-optional">(@Translate.Text("optional"))</span>
                }
            </label>
            <div>
                <label>
                    <input class="form-field__input form-field__input--upload"
                           id="form-field-@Model.UploadName"
                           name="@Model.UploadName"
                           type="file"
                           aria-describedby="description-for-@Model.UploadName"
                           aria-required="@required"
                           data-parsley-error-message="@Translate.Text("upload file validation message")"
                           data-parsley-errors-container="#errors-for-@Model.UploadName"
                           data-uploader-field="@Model.UploadName"
                           data-accepts='@AttachmentValidation.acceptedFileTypesClientSide'
                           data-size="@AttachmentValidation.maximumFileSize"
                           accept="@HttpUtility.UrlDecode(Html.Sitecore().CurrentRendering.Parameters["m21_allowed_files"])" />
                    <span class="button button--primary button--next button--small focus-enabled">@Model.UploadButtonText</span>
                </label>
            </div>
            <p class="form-field__input--upload-format-error-message" data-uploader-format-error="error-message">@Translate.Text("invalid file type validation message")</p>
            <p class="form-field__input--upload-size-error-message" data-uploader-size-error="error-message">@Translate.Text("file too large validation message")</p>
            <p class="form-field__input--upload-filename" data-uploader-filename="@Model.UploadName"></p>
			
			<p>
				<button class="button button--text button--remove hidden" data-uploader-remove="@Model.UploadName">@Model.RemoveButtonText</button>
			</p>
		</div>
	</div>
	<div id="description-for-@Model.UploadName" class="form-field__messages">
		<div id="errors-for-@Model.UploadName"></div>
		<div class="form-field__description">
			@Html.Sitecore().Field("Notes")
		</div>
	</div>
	<script>
		docReady(function () {
			if ('@required' === "true") {
				//jQuery(".form-field__input--upload").attr("required", true);
                jQuery("#form-field-@Model.UploadName").attr("required", true);
			}
		})
	</script>
</div>
