@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.ListBoxViewModel
<div class="form-field form-field--select form-field--select-single">
    <label for="@Html.IdFor(m => Model.Value)" class="form-field__label @Model.LabelCssClassSettings.CssClass">@Html.DisplayTextFor(t => Model.Title) @{if (!Model.Required)
            {<span class="form-field__label-optional">(optional)</span>} }</label>
    <span class="form-field__input-wrapper form-field__input-wrapper--select">
        <input type="hidden" name="@Html.NameFor(m => Model.Value)" />

        <select id="@Html.IdFor(m => Model.Value)" name="@Html.NameFor(m => Model.Value)" @if (Model.MultipleSelection) { <text> multiple</text>} size="@Model.Rows" class="form-field__input form-field__input--select form-field__input--select2 form-field__input--select-full @Model.CssClassSettings.CssClass" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => m.Value)>
            @foreach (var item in Model.Items)
            {
                <option value="@item.Value" selected="@item.Selected">@item.Text</option>
            }
        </select>
    </span>
    <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
        @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")        
    </div>
</div>