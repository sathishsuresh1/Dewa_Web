@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.CheckBoxListViewModel
<div class="form-field form-field--toggles">
    <fieldset class="fieldset">
        <legend class="form-field__label @Model.LabelCssClassSettings.CssClass">
            @Html.DisplayTextFor(t => Model.Title) @{if (!Model.Required){<span class="form-field__label-optional">(optional)</span>} }
        </legend>

        @*<label class="@Model.LabelCssClassSettings.CssClass">@Html.DisplayTextFor(t => Model.Title)</label>*@
        <input type="hidden" name="@Html.NameFor(m => Model.Value)" />
        @foreach (var item in Model.Items)
        {
            <div class="form-field__checkbox">
                <label>
                    <input type="checkbox" class="form-field__input form-field__input--checkbox @Model.CssClassSettings.CssClass" name="@Html.NameFor(m => Model.Value)" @if (item.Selected) { <text> checked</text>} value="@item.Value" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.Value) />
                    <span class="form-field__fakecheckbox focus-enabled">
                        @item.Text
                    </span>
                </label>
            </div>
        }
    <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
        @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")
    </div>
    </fieldset>
</div>
