@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.StringInputViewModel
<div class="form-field form-field--text">
    <label for="@Html.IdFor(m => Model.Value)" class="form-field__label">@Html.DisplayTextFor(t => Model.Title) @{if (!Model.Required) {<span class="form-field__label-optional">(optional)</span>} }</label>
    <span class="form-field__input-wrapper @Model.LabelCssClassSettings.CssClass">
        <input id="@Html.IdFor(m => Model.Value)" name="@Html.NameFor(m => Model.Value)" class="form-field__input form-field__input--text @Model.CssClassSettings.CssClass" type="text" value="@Model.Value" @if (Model.MaxLength > 0) { <text> maxlength="@Model.MaxLength" </text> } placeholder="@Model.PlaceholderText" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => m.Value) />
    </span>
    <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
        @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")
        <p class="form-field__description"></p>
    </div>
</div>