@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.CheckBoxViewModel
<div class="form-field form-field--toggles">
    <fieldset class="fieldset">
       
        <div class="form-field__checkbox  ">
            <label class="@Model.LabelCssClassSettings.CssClass">
                <input type="checkbox" id="@Html.IdFor(m => Model.Value)" name="@Html.NameFor(m => Model.Value)" class="form-field__input form-field__input--checkbox @Model.CssClassSettings.CssClass" @if (Model.Value) { <text> checked="checked" </text> } value="true" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.Value) />
                <span class="form-field__fakecheckbox focus-enabled">
                    @Html.DisplayTextFor(t => Model.Title)</span>
                                <input type="hidden" name="@Html.NameFor(m => Model.Value)" value="false" />
</label>
        </div>
        <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
            @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")
        </div>
    </fieldset>
</div>