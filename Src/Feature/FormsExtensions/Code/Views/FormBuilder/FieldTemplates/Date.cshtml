@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.DateViewModel
<div id="datepicker-container-@Html.IdFor(m => Model.Value)" class="form-field form-field--text">

    <label for="@Html.IdFor(m => Model.Value)" class="form-field__label @Model.LabelCssClassSettings.CssClass">@Html.DisplayTextFor(t => Model.Title)</label>
    <span class="form-field__input-wrapper form-field__input-wrapper--datepicker" >
        <input type="text" data-el="datepicker" data-picker-options='{}' id="@Html.IdFor(m => Model.Value)" @if (Model.Min.HasValue) { <text> min="@Model.Min.Value.ToString(Model.DateFormat)" </text> } @if (Model.Max.HasValue) { <text> max="@Model.Max.Value.ToString(Model.DateFormat)" </text> } @if (Model.Value.HasValue) { <text> value="@Model.Value.Value.ToString(Model.DateFormat)" </text> } name="@Html.NameFor(m => Model.Value)" class="form-field__input form-field__input--text form-field__input--datepicker @Model.CssClassSettings.CssClass" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.Value) />
        </span>
    <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
        @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")
    </div>
</div>