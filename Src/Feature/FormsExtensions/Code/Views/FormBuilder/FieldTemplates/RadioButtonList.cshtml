@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.ListViewModel
<div class="form-field">
    <fieldset class="fieldset">
        <legend class="form-field__label @Model.LabelCssClassSettings.CssClass"> @Html.DisplayTextFor(t => Model.Title) @{if (!Model.Required)
                    {<span class="form-field__label-optional">(optional)</span>} }</legend>
        @*<label class="@Model.LabelCssClassSettings.CssClass">@Html.DisplayTextFor(t => Model.Title)</label>*@
        @foreach (var item in Model.Items)
        {
            <p class="form-field__radio ">
                <label class="@Model.CssClassSettings.CssClass">
                    <input class="form-field__input form-field__input--radio" type="radio" name="@Html.NameFor(m => Model.Value)" @if (item.Selected) { <text> checked</text>} value="@item.Value" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => m.Value) />
                    <span class="form-field__fakeradio focus-enabled">@item.Text</span>
                </label>
            </p>
        }
        <div id="description-for-@Html.IdFor(m => Model.Value)" class="form-field__messages">
            @Html.ValidationMessageFor(m => Model.Value, "", new { @class = "parsley-errors-list" }, "span")
        </div>
    </fieldset>
</div>