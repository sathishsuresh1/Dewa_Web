@using DEWAXP.Feature.WebsiteSurvey.Models.Survey
@using Glass.Mapper.Sc.Web.Mvc
@using Sitecore.Globalization
@using Sitecore.Mvc.Configuration
@using System.Collections.Generic;
@using DEWAXP.Foundation.Content
@using System.Linq;
@using Sitecore.Mvc
@model WebsiteSurveyQuestionAnswers

<style>
    .surveysection .ticks-inner-subtext {
        position: absolute;
        width: 100px;
        right: -50px;
        top: 70px;
        font-size: 0.8em;
        color: #3d3d3d;
    }
</style>
<div class="grid j122-calls-inquiries">
    <script type="text/javascript">
        function createCookie(cookieName, cookieValue, daysToExpire) {
            var date = new Date();
            date.setTime(date.getTime() + (daysToExpire * 24 * 60 * 60 * 1000));
            document.cookie = cookieName + "=" + cookieValue + "; expires=" + date.toGMTString() + "; path=/";
        }
        function deleteCookie() {
            document.cookie = "dewa_74=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
        }
        function accessCookie(cookieName) {
            var name = cookieName + "=1";
            var allCookieArray = document.cookie.split(';');
            for (var i = 0; i < allCookieArray.length; i++) {
                var temp = allCookieArray[i].trim();
                if (temp.indexOf(name) == 0)
                    return temp.substring(name.length, temp.length);
            }
            return "";
        }
        function checkCookie() {
            var isCookie = accessCookie("dewa_74");
            num = "30";
            if (isCookie != null) {
                deleteCookie();
                createCookie("dewa_74", "1", num);
            }
        }
    </script>
    @if (!ViewData.ModelState.IsValid)
    {
        <div style="margin-top:60px;">
            @{
                ModelState ms;
                var direction = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "rtl" : "ltr";
            }

            @if (!ViewData.ModelState.IsValid && ViewData.ModelState.TryGetValue(ViewData.TemplateInfo.HtmlFieldPrefix, out ms))
            {
                <div class="grid__row">
                    <div class="grid__column grid__column--12">
                        <div class="m40v2-status-message m40v2-status-message--error icon icon-caution" data-component="m40v2--status-message">
                            <div class="m40v2-status-message__title">@Sitecore.Globalization.Translate.Text(DictionaryKeys.Global.SubmissionError)</div>
                            <div class="m40v2-status-message__text" dir="@direction">@Html.ValidationSummary(true)</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else if (ViewBag.success != null && !string.IsNullOrWhiteSpace((string)ViewBag.success))
    {
        <script type="text/javascript">
            checkCookie();
        </script>
        <div style="margin-top:60px;">
            <div class="grid__row">
                <div class="grid__column grid__column--12 grid__column--content">
                    <div class="m40v2-status-message m40v2-status-message--success icon icon-new-success-message" data-component="m40v2-status-message">
                        @*<div class="m40v2-status-message__title icon--success">@Translate.Text("Submission Successful")</div>*@
                        <div class="m40v2-status-message__title">
                            @((string)ViewBag.success)<br>
                        </div>
                        <div class="m40v2-status-message__text">
                            @Translate.Text("websitesurvey.successnote")
                        </div>
                    </div>
                </div>
            </div>
            <div class="grid__row">
                <div class="grid__column grid__column--12 grid__column--content grid__column--centered">
                    <a href="/" class="button button--primary"> @Translate.Text("websitesurvey.backtowebsite")</a>
                </div>
            </div>
        </div>
    }
    else
    {
        if (Model != null && Model.SurveyType != null && Model.SurveyType.SurveySteps != null)
        {
            var qCounter = 0;
            <div class="grid">
                <div class="grid__row mb0">
                    <div class="grid__column grid__column--12">
                        <!-- m26-page-title-start -->
                        <div class="m26-page-title title_message">
                            <div class="m26-page-title__links">
                            </div>
                            <h2 class="text__page-title" style="font-weight: 300;">@Model.SurveyType.SurveyTypeTitle</h2>
                            <h2 class="text__page-title">@Model.SurveyType.Bottomtext</h2>
                        </div>
                        <!-- m26-page-title-end -->
                    </div>
                </div>
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form websurvey", @id = "websitesurveyform", @data_form = "true", @data_parsley_focus = "none", @data_submit_validate = "enabled" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.datasource)

                    <div class="grid__row">
                        <div class="grid__column grid__column--12 grid__column--form grid__column--centered">
                            @Html.Sitecore().Placeholder("j18/m38-step-tracker")
                        </div>
                    </div>
                    var questionNo = 1;
                    var uniqueId = 0;
                    foreach (SurveyStep step in Model.SurveyType.SurveySteps)
                    {
                        var cnt = 0;
                        <div class="grid__row surveysection" id="survey_@step.Value">
                            <legend class="legend legendText hidden" id="legend-@(Guid.NewGuid().ToString("D"))">@step.Text</legend>
                            @foreach (QuestionGroup questionGroup in step.QuestionGroupList)
                            {
                                var queGrpCounter = 0;
                                if (questionGroup.Text != "")
                                {
                                    <legend class="legend mb24 @(cnt.Equals(0) ? string.Empty : "mt56")"><strong>@questionGroup.Text</strong></legend>
                                }
                                foreach (Question question in questionGroup.QuestionList)
                                {
                                    if (question != null && question.QuestionType != null && !string.IsNullOrWhiteSpace(question.QuestionType.Value) && question.AnswerList != null && question.AnswerList.Count() > 0)
                                    {
                                        if (question.QuestionType.Value.Equals("1"))
                                        {

                                            <div class="form-field  @(qCounter.Equals(0) ? "main-field" : "hidden") @(qCounter.Equals(1) ? "1" : string.Empty) @(qCounter.Equals(2) ? "2" : string.Empty)">
                                                <fieldset class="fieldset form-section">
                                                    <legend class="form-field__label form-field--text">
                                                        @question.QuestionDetails
                                                        @Html.Hidden("surveyInputs[" + qCounter + "].QuestionId", qCounter + 1)
                                                    </legend>
                                                    @foreach (var option in question.AnswerList)
                                                    {
                                                        <p class="form-field__radio">
                                                            <label for="form-field-radio_@(uniqueId)">
                                                                <span class="aria-only">@option.Value</span>
                                                                <input class="form-field__input form-field__input--radio"
                                                                       data-radio="q@(qCounter)a@(uniqueId)"
                                                                       id="form-field-radio_@(uniqueId)"
                                                                       @*aria-label="form-field-radio_@(uniqueId)"*@
                                                                       name="surveyInputs[@(qCounter)].OptionId"
                                                                       type="radio"
                                                                       required=""
                                                                       data-parsley-errors-container="#description-for-@(qCounter)"
                                                                       data-parsley-multiple="surveyInputs[@(qCounter)].OptionId"
                                                                       data-parsley-required-message="@Translate.Text("websitesurvey.requiredtext")"
                                                                       value="@option.Value">
                                                                <span class="form-field__fakeradio focus-enabled">
                                                                    @if (option.TextBox)
                                                                    {
                                                                        <input class="form-field__input form-field__input--text 7"
                                                                               id="form-field-text_@(uniqueId)"
                                                                               @*aria-label="form-field-text_@(uniqueId)"*@
                                                                               name="surveyInputs[@(qCounter)].RemarksText"
                                                                               type="text"
                                                                               aria-label="form-field-text_@(uniqueId)"
                                                                               data-parsley-errors-container="#description-for-@(qCounter)"
                                                                               data-parsley-multiple="surveyInputs[@(qCounter)].RemarksText"
                                                                               placeholder="@option.Text"
                                                                               data-parsley-required-message="@Translate.Text("websitesurvey.requiredtext")"
                                                                               value="">
                                                                    }
                                                                    else
                                                                    {
                                                                        @option.Text
                                                                    }
                                                                </span>
                                                            </label>
                                                        </p>
                                                        uniqueId++;
                                                    }

                                                    <div id="description-for-@(qCounter)" class="form-field__messages">
                                                    </div>
                                                </fieldset>
                                            </div>
                                        }
                                        if (question.QuestionType.Value.Equals("2") || question.QuestionType.Value.Equals("3"))
                                        {
                                            var answerlist = question.AnswerList.ToList();
                                            bool positiveslider = true;
                                            if (question.QuestionType.Value.Equals("3"))
                                            {
                                                positiveslider = false;
                                            }
                                            if (positiveslider)
                                            {
                                                answerlist.Insert(0, new Answer { Value = (Int32.Parse(question.AnswerList.ToList().Min(y => y.Value)) - 1).ToString() });
                                            }
                                            else
                                            {
                                                answerlist.Insert(0, new Answer { Value = (Int32.Parse(question.AnswerList.ToList().Max(y => y.Value)) - 1).ToString() });
                                            }

                                            <div class="form-field form-field--text @(queGrpCounter.Equals(0) ? string.Empty: "mt56")" data-ranger-block="@(qCounter + 1)">
                                                <label for="form_rangeslider_@(qCounter)" class="form-field__label">
                                                    @*@questionNo.*@ @question.QuestionDetails<span class="form-field__label-required aria-only">(required)</span>
                                                    @Html.Hidden("surveyInputs[" + qCounter + "].QuestionId", qCounter + 1)
                                                </label>
                                                <div class="form-field__messages hidden mb24">
                                                    <ul class="parsley-errors-list filled"><li class="parsley-required">@Translate.Text("websitesurvey.requiredtext")</li></ul>
                                                </div>
                                                <div class="m76-range-slider mt24" data-component="m76-range-slider">
                                                    <div class="range-container">
                                                        <div class="range-container-bg">
                                                            <input id="form_rangeslider_@(qCounter)"
                                                                   name="surveyInputs[@(qCounter)].OptionId"
                                                                   data-range-slider=""
                                                                   class="range blue slider"
                                                                   type="range"
                                                                   data-snap='@(positiveslider?Enumerable.Range(Int32.Parse(answerlist.Min(y=>y.Value)), answerlist.Count()).Select(x => x.ToString()).Aggregate((i, j) => i + "," + j):Enumerable.Range(Int32.Parse(answerlist.Max(y=>y.Value)), answerlist.Count()).Select(x => x.ToString()).Aggregate((i, j) => i + "," + j))'
                                                                   min="@(answerlist.Min(y=>Int32.Parse(y.Value)).ToString())"
                                                                   value="@(answerlist.Min(y=>Int32.Parse(y.Value)).ToString())"
                                                                   max="@(answerlist.Max(y=>Int32.Parse(y.Value)).ToString())"
                                                                   step="1" list="ticks">
                                                        </div>
                                                    </div>
                                                    <div class="ticks-container" data-range-ticks="">
                                                        <div class="sliderticks">
                                                            @{
                                                                int answercount = 1;
                                                            }
                                                            @foreach (var option in answerlist)
                                                            {
                                                                <span data-option="@option.Value" class="ticks @(answercount.Equals(1) ? "ticks-active" : string.Empty)">
                                                                    <span class="@(answercount.Equals(1) ? string.Empty : "ticks-inner-text")">@Html.Raw(option.Text)</span>
                                                                    <span class="rangeslider_click"></span>
                                                                </span>
                                                                { answercount++; }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        if (question.QuestionType.Value.Equals("4"))
                                        {
                                            <div class="form-field">
                                                <fieldset class="fieldset form-section" style="margin-top: 64px;">
                                                    <legend class="form-field__label form-field--text mt56">
                                                        @*@questionNo.*@ @question.QuestionDetails
                                                        @Html.Hidden("surveyInputs.SurveyData[" + qCounter + "].QuestionId", qCounter + 1)
                                                    </legend>
                                                    @foreach (var option in question.AnswerList)
                                                    {
                                                        <label for="form-field-text_@(qCounter)" class="form-field__label">
                                                            <span class="form-field__label-required aria-only">(required)</span>
                                                        </label>
                                                        <span class="form-field__input-wrapper">
                                                            <textarea class="form-field__input form-field__input--text form-field__input--textarea"
                                                                      maxlength="500"
                                                                      data-textarea="@(qCounter)"
                                                                      id="form-field-text_@(qCounter)"
                                                                      name="SuggestionText"
                                                                      type="textarea"
                                                                      placeholder="@option.Text"
                                                                      aria-describedby="description-for-@(qCounter)"
                                                                      data-parsley-errors-container="#description-for-@(qCounter)"
                                                                      data-parsley-required-message="@Translate.Text("websitesurvey.requiredtext")"></textarea>
                                                        </span>
                                                    }
                                                    <div id="description-for-@(qCounter)" class="form-field__messages">
                                                        @*<p class="form-field__charcount">Max <span data-charcount="@(qCounter)">0</span>/500 Characters</p>*@
                                                        <p class="form-field__charcount"> @Html.Raw(string.Format(@Translate.Text("websitesurvey.Max"), qCounter)) </p>
                                                    </div>
                                                </fieldset>
                                            </div>
                                        }
                                        {
                                            qCounter++;
                                        }
                                    }
                                    queGrpCounter++;
                                    questionNo++;
                                }
                                cnt++;
                            }
                        </div>
                    }
                    <div class="grid__row">
                        <div class="grid__column grid__column--12 grid__column--centered form-navigation form-field__button">
                            <a role="button" data-m51-next="" aria-label="Next" class="survey-btn button button--primary previous">@Translate.Text("websitesurvey.previous")</a>
                            <a role="button" data-m51-next="" aria-label="Next" class="survey-btn button button--primary next">@Translate.Text("websitesurvey.Next")</a>
                            <button type="submit" class="button button--primary button--submit" data-submission-text="@Translate.Text("Submitting")...">@Translate.Text("websitesurvey.submit")</button>
                        </div>
                    </div>
                    @*<div class="form-navigation form-field__button mt48">
                            <button type="button" class="button button--tertiary previous">@Translate.Text("Previous")</button>
                            <button type="button" class="button button--primary button--next next">@Translate.Text("Next") </button>
                            <button type="submit" class="button button--primary button--next" data-submission-text="@Translate.Text("Submitting")...">@Translate.Text("Continue")</button>
                        </div>*@
                }
            </div>
            <script src="~/Scripts/External/nml/form-submit-validate.js"></script>
            <script>

                docReady(function () {
                    jQuery('.main-field').find('.form-field__input--radio').each(function () {
                        jQuery(this).off('click.radio').on('click.radio', function () {
                            var val = jQuery(this).val();
                            jQuery('.form-field.hidden').each(function () {
                                if (jQuery(this).hasClass(val)) {
                                    jQuery(this).fadeIn();
                                } else {
                                    jQuery(this).fadeOut();
                                }
                            });
                            jQuery('.form-field__fakeradio .form-field__input.form-field__input--text').each(function () {
                                jQuery('#description-for-0').find('.parsley-errors-list').removeClass('filled');
                                jQuery('#description-for-0').find('.parsley-errors-list').html('');
                                if (jQuery(this).hasClass(val)) {
                                    jQuery(this).attr('required', true);
                                    jQuery(this).attr('disabled', false);
                                    jQuery(this).removeClass('disabled');
                                } else {
                                    jQuery(this).attr('required', false);
                                    jQuery(this).trigger('focusout');
                                    jQuery(this).val('');
                                    jQuery(this).attr('disabled', true);
                                    jQuery(this).addClass('disabled');
                                }
                            })
                        });
                    });

                    var total = '@Model.SurveyType.SurveySteps.ToList().Count';
                    var current = 1;
                    var txt = jQuery("#survey_1").find('.legendText').text();
                    steptracker(total, current, txt);
                    var $sections = jQuery('.surveysection');
                    function steptracker(total, current, txt) {
                        $('.m38-step-tracker').attr('data-total-steps', total);
                        $('.m38-step-tracker').attr('data-current-step', current);
                        $('.m38-step-tracker__progressbar').attr('aria-valuetext', txt);
                        $('.m38-step-tracker').attr('data-hasInfo', "true");
                        jQuery(window).trigger('reinit_m38');
                    }
                    function curIndex() {
                        // Return the current index by looking at which section has the class 'current'
                        return $sections.index($sections.filter('.current'));
                    }
                    function navigateTo(index) {
                        var txt = $sections
                            .hide()
                            .eq(index).find('.legendText').text();
                        steptracker(total, index + 1, txt);

                        // Mark the current section with the class 'current'
                        $sections
                            .removeClass('current')
                            .eq(index)
                            .addClass('current');
                        $sections
                            .hide()
                            .eq(index)
                            .show();


                        // Show only the navigation buttons that make sense for the current section:
                        jQuery('.form-navigation .previous').toggle(index > 0);
                        var atTheEnd = index >= $sections.length - 1;
                        jQuery('.form-navigation .next').toggle(!atTheEnd);
                        jQuery('.form-navigation [type=submit]').toggle(atTheEnd);
                        jQuery('html,body').animate({ scrollTop: 0 }, 1000);
                        if (atTheEnd) {

                        }

                    }
                    // Previous button is easy, just go back
                    jQuery('.form-navigation .previous').click(function (e) {
                        e.preventDefault();

                        navigateTo(curIndex() - 1);
                    });

                    // Next button goes forward if current block valida5tes

                    jQuery('.next, .button--submit').off('click.check').on('click.check', function (event) {
                        var counter = 0;
                        jQuery('.current').find('input.range').each(function () {
                            var $msg = jQuery(this).closest('.form-field').find('.form-field__messages'),
                                _this = this;
                            //if ((jQuery(this).val().toString() == "-6" && jQuery(this).attr('max').toString() != '10') || (jQuery(this).val().toString() == "-1") && jQuery(this).attr('max').toString() == '10') {
                            if (jQuery(this).val().toString() == jQuery(this).attr('min').toString()) {
                                $msg.show();
                                if (counter == 0) {
                                    $('html,body').animate({
                                        scrollTop: $(_this).offset().top - 125
                                    }, 250);
                                };
                                counter++
                            } else {
                                $msg.hide();
                            }
                        });
                        if (counter == 0 && !jQuery(this).hasClass('button--submit')) {
                            require(['parsley'], function () {
                                jQuery('#websitesurveyform').parsley().whenValidate({
                                    group: 'block-' + curIndex()
                                }).done(function () {
                                    navigateTo(curIndex() + 1);
                                });
                            });
                        }
                        else if (counter != 0 && jQuery(this).hasClass('button--submit')) {
                            event.preventDefault();
                        }

                    });
                    jQuery('.button--submit').off('click.submit').on('click.submit', function () {
                        require(['parsley'], function () {
                            if (!jQuery('#websitesurveyform').parsley().validate()) {
                                event.preventDefault();
                            };
                        });
                    });

                    jQuery('input.range').each(function () {
                        var _this = this,
                            $msg = jQuery(this).closest('.form-field').find('.form-field__messages'),
                            $ticks = jQuery(this).closest('.form-field').find('.ticks');


                        jQuery(this).off('change.val').on('change.val', function () {
                            var slider = this
                            setTimeout(function () {
                                //if ((jQuery(slider).val().toString() == "-6" && jQuery(slider).attr('max').toString() != '10') || (jQuery(slider).val().toString() == "-1") && jQuery(slider).attr('max').toString() == '10') {
                                if (jQuery(slider).val().toString() == jQuery(slider).attr('min').toString()) {
                                $msg.show();
                                } else {
                                    $msg.hide();
                                }
                            }, 50)
                        });
                        $ticks.off('click.val').on('click.val', function () {
                            jQuery(_this).trigger('change');
                        });
                    });
                    // Prepare sections by setting the `data-parsley-group` attribute to 'block-0', 'block-1', etc.
                    $sections.each(function (index, section) {
                        jQuery(section).find(':input').attr('data-parsley-group', 'block-' + index);
                    });
                    setTimeout(function () { navigateTo(0); }, 200);
                });

            </script>
        }
    }

</div>

