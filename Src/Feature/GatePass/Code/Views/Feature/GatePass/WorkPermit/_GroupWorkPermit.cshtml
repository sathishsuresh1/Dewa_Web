@using DEWAXP.Foundation.Helpers
@using Glass.Mapper.Sc.Fields
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Mvc.Presentation
@using Sitecore.Globalization
@using DEWAXP.Foundation.Helpers.Extensions
@using DEWAXP.Feature.GatePass.Models.ePass
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.GatePass.Models.WorkPermit.WorkPermitPass


@{
    var lang = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "ar" : "en";
    var nowmax = DateHelper.DubaiNow().AddMonths(-1).AddDays(30);
    var FromToTime = EpassHelper.WPGetFromToTime();
    DateTime nowoneyear;
    var _visaExpiry = "";

    if (!string.IsNullOrWhiteSpace(Model.VisaExpiry))
    {
        _visaExpiry = Model.VisaExpiry.Replace("يناير", "January").Replace("فبراير", "February").Replace("مارس", "March").Replace("أبريل", "April").Replace("مايو", "May").Replace("يونيو", "June").Replace("يوليو", "July").Replace("أغسطس", "August").Replace("سبتمبر", "September").Replace("أكتوبر", "October").Replace("نوفمبر", "November").Replace("ديسمبر", "December");
    }
    if (!string.IsNullOrWhiteSpace(_visaExpiry) && Convert.ToDateTime(_visaExpiry).Ticks < DateHelper.DubaiNow().AddYears(1).Ticks)
    {
        nowoneyear = Convert.ToDateTime(_visaExpiry).AddMonths(-1);
    }
    else
    {
        nowoneyear = DateHelper.DubaiNow().AddMonths(-1).AddMonths(7);
    }
}

<style type="text/css">
    .my-error-msg {
        font-size: 1.0em;
        font-weight: 600;
        text-align: center;
    }
</style>
<div class="form hidden multiple mt24">
    <div class="j113-epass--permPass__form-page2">
        <a href="/upload/sample_workpermit_file_@(lang).xls" class="button button--text button--next" aria-describedby="download-">@Translate.Text("Epass.Downloadfile")</a>
        <div class="form-field form-field--upload">
            <div class="form-field__input-wrapper">
                <div class="form-field__preview-wrapper">
                    <img src="/images/preview_pdf@2x.png" data-src="/images/preview_pdf@2x.png" data-success="/images/upload_success@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="applicantinfo">
                </div>
                <div class="form-field__uploader-details">
                    <label for="form-field-applicantinfo" class="form-field__label">
                        @Translate.Text("Epass.Applicantcsv")
                        <span class="form-field__label-required aria-only">
                            @Translate.Text("Epass.Required")
                        </span>
                    </label>
                    <div>
                        <label>
                            <input class="form-field__input form-field__input--upload"
                                   id="form-field-applicantinfo"
                                   name="GroupPass_Applicants" type="file"
                                   aria-describedby="description-for-applicantinfo"
                                   data-parsley-errors-container="#description-for-applicantinfo"
                                   required="" data-parsley-required-message="@Translate.Text("Epass.Uploadmultipassfile")"
                                   data-uploader-field="applicantinfo"
                                   accept=".xls"
                                   data-accepts='"xls"'
                                   data-size="2048000"
                                   data-parsley-trigger="focusout"
                                   data-parsley-id="48">
                            <span class="button button--primary  button--small focus-enabled" data-uploader-button="upload-choose">
                                @Translate.Text("Epass.Choose")
                            </span>
                        </label>
                    </div>
                    <p class="form-field__input--upload-format-error-message" data-uploader-format-error="error-message">
                        @Translate.Text("Epass.Uploadformat")
                    </p>
                    <p class="form-field__input--upload-size-error-message" data-uploader-size-error="error-message">
                        @Translate.Text("Epass.Uploadfilesize")
                    </p>
                    <p class="form-field__input--upload-filename" data-uploader-filename="applicantinfo"></p>
                    <p>
                        <button class="button button--text button--remove hidden" data-uploader-remove="applicantinfo">
                            @Translate.Text("Epass.Remove")
                        </button>
                    </p>
                </div>
            </div>
            <div id="description-for-applicantinfo" class="form-field__messages">
                <p class="form-field__description">@Translate.Text("Epass.Notecsv")</p>
                <p class="form-field__error red my-error-msg">
                    @Html.ValidationMessageFor(x => x.GroupPass_Applicants)
                    @if (!MvcHtmlString.IsNullOrEmpty(Html.ValidationMessageFor(x => x.GroupPass_Applicants)))
                    {
                        if (Model.errorlist != null && Model.errorDuplicatelist != null)
                        {
                        
                           <div class="m37-expander" data-component="m37-expander">
                                <button data-toggle="true" aria-haspopup="true" aria-expanded="false" class="m37-expander__trigger">
                                    @Translate.Text("Epass.Errorlist")
                                </button>
                                <div data-content="true" class="m37-expander__content">
                                    <div class="m42-keyvalue">
                                       Excel Sheet has no Records.
                                    </div>
                                </div>
                            </div>
                    
                        }

                        if (Model.errorlist != null)
                        {
                            <div class="m37-expander" data-component="m37-expander">
                                <button data-toggle="true" aria-haspopup="true" aria-expanded="false" class="m37-expander__trigger">
                                    @Translate.Text("Epass.Errorlist")
                                </button>
                                <div data-content="true" class="m37-expander__content">
                                    <div class="m42-keyvalue">
                                        <dl>
                                            @foreach (var error in Model.errorlist)
                                            {
                                                <dt class="m42-keyvalue__key m42-keyvalue__key--secondary">
                                                    @Translate.Text("Epass.Linenumber") : @error.LineNumber
                                                </dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary">@error.ExceptionInfo.Message.After("InvalidOperationException with the message:")</dd>

                                            }
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        }
                        if (Model.errorDuplicatelist != null)
                        {
                            <div class="m37-expander" data-component="m37-expander">
                                <button data-toggle="true" aria-haspopup="true" aria-expanded="false" class="m37-expander__trigger">
                                    @Translate.Text("Epass.Errorlist")
                                </button>
                                <div data-content="true" class="m37-expander__content">
                                    <div class="m42-keyvalue">
                                        <dl>
                                            @foreach (var error in Model.errorDuplicatelist)
                                            {
                                                <dt class="m42-keyvalue__key m42-keyvalue__key--secondary">
                                                    @Translate.Text("Epass.IndName") : @error.Name
                                                </dt>
                                                @*<dt class="m42-keyvalue__key m42-keyvalue__key--secondary">Emirates ID : @error.EmiratesID</dt>
                                                    <dt class="m42-keyvalue__key m42-keyvalue__key--secondary">Passport Number : @error.PassportNumber</dt>
                                                    <dt class="m42-keyvalue__key m42-keyvalue__key--secondary">Visa Number : @error.VisaNumber</dt>*@
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary">@error.Errormessage</dd>
                                            }
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </p>
            </div>
        </div>

        <div class="form-field form-field--select form-field--select-single">
            <label for="SubContractorID" class="form-field__label">
                @Translate.Text("Epass.Subcontractor")
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--select j113-epass--select_wrapper">
                <span class="form-field__input-wrapper form-field__input-wrapper--select">
                    @Html.DropDownListFor(x => x.GroupSubcontractorID, new SelectList(Model.SubcontractorList, "work_permit_pass_number", "sub_contractor_name"), Translate.Text("None"), new
               {
                   @class = "form-field__input form-field__input--select form-field__input--select-full",
                   @aria_describedby = "description-for-SubContractorID",
                   @data_parsley_id = "18",
                   @id = "form-field-SubContractorID"
               })
                </span>
            </span>
            <a href="@LinkHelper.GetItemUrl(SitecoreItemIdentifiers.WP_ADDSUBCONTRACTOR)"
               class="j113-epass--add_item"><span>+</span>@Translate.Text("Epass.Add")</a>
            <div id="description-for-SubContractorID" class="form-field__messages">
            </div>
        </div>

        <div id="datepicker-container-GroupPassIssueDate" class="form-field form-field--text  ">
            <label for="form-field-GroupPassIssueDate" class="form-field__label">
                @Translate.Text("Epass.Passissuedate")
                <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                <input value="@Model.GroupPassIssue"
                       class="form-field__input form-field__input--text   form-field__input--datepicker     picker__input form-field__binding"
                       id="form-field-GroupPassIssueDate"
                       name="GroupPassIssue"
                       type="text"
                       placeholder="@Translate.Text("Epass.SelectPassissuedate")"
                       aria-describedby="description-for-GroupPassIssueDate"
                       data-parsley-errors-container="#description-for-GroupPassIssueDate"
                       required=""
                       data-parsley-required-message="@Translate.Text("Epass.SelectPassissuedate")"
                       data-el="datepicker-future"
                       data-parsley-trigger="focusout"
                       data-parsley-id="46"
                       readonly=""
                       data-bindingID="passbinding"
                       aria-haspopup="true"
                       aria-expanded="false"
                       aria-readonly="false"
                       data-picker-options='{&quot;selectMonths&quot;: true , &quot;selectYears&quot;: 36 , &quot;format&quot;: &quot;yyyy/mm/dd&quot; , &quot;max&quot;: [@nowoneyear.Year,@nowoneyear.Month,@nowoneyear.Day] }' />
            </span>
            <div id="description-for-GroupPassIssueDate" class="form-field__messages">
            </div>
        </div>

        <div id="datepicker-container-GroupPassExpiryDate" class="form-field form-field--text  ">
            <label for="form-field-GroupPassExpiryDate" class="form-field__label">
                @Translate.Text("Epass.Passexpirydate")
                <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                <input value="@Model.GroupPassExpiry"
                       class="form-field__input form-field__input--text   form-field__input--datepicker     picker__input form-field__binding"
                       id="form-field-GroupPassExpiryDate"
                       name="GroupPassExpiry"
                       type="text"
                       placeholder="@Translate.Text("Epass.SelectPassexpirydate")"
                       aria-describedby="description-for-GroupPassExpiryDate"
                       data-parsley-errors-container="#description-for-GroupPassExpiryDate"
                       required=""
                       data-parsley-required-message="@Translate.Text("Epass.SelectPassexpirydate")"
                       data-el="datepicker-future"
                       data-parsley-trigger="focusout"
                       data-parsley-id="46"
                       readonly=""
                       data-bindingID="passbinding"
                       aria-haspopup="true"
                       aria-expanded="false"
                       aria-readonly="false"
                       data-picker-options='{&quot;selectMonths&quot;: true , &quot;selectYears&quot;: 36 , &quot;format&quot;: &quot;yyyy/mm/dd&quot; ,&quot;max&quot;: [@nowoneyear.Year,@nowoneyear.Month,@nowoneyear.Day] }' />
            </span>
            <div id="description-for-GroupPassExpiryDate" class="form-field__messages">
            </div>
        </div>
        <div class="form-field form-field--select form-field--select-single">
            <label for="form-field-GroupFromTime" class="form-field__label">
                @Translate.Text("Epass.Fromtime")
                <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--select">
                <select class="form-field__input form-field__input--select form-field__input--select-full" id="form-field-GroupFromTime"
                        name="GroupFromTime" aria-describedby="description-for-GroupFromTime" data-parsley-errors-container="#description-for-GroupFromTime"
                        required data-parsley-required-message="@Translate.Text("Epass.Chooseanoption")">
                    <option value="" selected>@Translate.Text("Epass.Chooseanoption")</option>
                    @{
                        foreach (var item in FromToTime)
                        {
                            <option value="@item.Value" @(!string.IsNullOrWhiteSpace(Model.GroupFromTime) && Model.GroupFromTime.Equals(item.Value) ? "selected" : string.Empty)>@item.Text</option>
                        }

                    }

                </select>
            </span>
        </div>
        <div class="form-field form-field--select form-field--select-single">
            <label for="form-field-GroupToTime" class="form-field__label">
                @Translate.Text("Epass.Totime")
                <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--select">
                <select class="form-field__input form-field__input--select form-field__input--select-full" id="form-field-GroupToTime" name="GroupToTime" aria-describedby="description-for-GroupToTime"
                        data-parsley-errors-container="#description-for-GroupToTime" required data-parsley-required-message="@Translate.Text("Epass.Chooseanoption")">
                    <option value="" selected>@Translate.Text("Epass.Chooseanoption")</option>
                    @{
                        foreach (var item in FromToTime)
                        {
                            <option value="@item.Value" @(!string.IsNullOrWhiteSpace(Model.GroupToTime) && Model.GroupToTime.Equals(item.Value) ? "selected" : string.Empty)>@item.Text</option>
                        }
                    }
                </select>
            </span>
        </div>

        <div class="form-field form-field--select form-field--select-single">
            <label for="form-field-Grouplocations" class="form-field__label">
                @Translate.Text("Epass.Location")
            </label>
            <span class="form-field__input-wrapper form-field__input-wrapper--select form-field__input-wrapper--select2">
                <select class="form-field__input form-field__input--select form-field__input--select-full form-field__input--select2"
                        id="form-field-Grouplocations"
                        name="GroupSelectedLocation"
                        multiple="multiple"
                        required=""
                        aria-describedby="description-for-Grouplocations"
                        data-parsley-errors-container="#description-for-Grouplocations"
                        data-placeholder="@Translate.Text("Epass.SelectLocation")"
                        data-parsley-required-message="@Translate.Text("Epass.SelectLocation")">
                    @{
                        foreach (var item in Model.LocationList)
                        {
                            <option value="@item.Value" @(Model.GroupSelectedLocation != null && Model.GroupSelectedLocation.Contains(item.Value) ? "selected" : string.Empty)>@item.Text</option>
                        }
                    }
                </select>
            </span>
            <div id="description-for-Grouplocations" class="form-field__messages">
                @Html.ValidationMessageFor(x => x.GroupSelectedLocation)
            </div>
        </div>


        <div class="form-field form-field--text  ">
            <label for="form-field-GroupProjectcoordinatorname" class="form-field__label">
                @Translate.Text("wp.ProjectCoordinatorName")
                <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
            </label>
            <span class="form-field__input-wrapper">
                <input maxlength="50"
                       data-parsley-maxlength="50"
                       value="@Model.GroupProjectcoordinatorname"
                       data-parsley-pattern="/^[^0-9/:,\()]*$/"
                       class="form-field__input form-field__input--text"
                       id="form-field-GroupProjectcoordinatorname"
                       type="text"
                       name="GroupProjectcoordinatorname"
                       placeholder="@Translate.Text("wp.ProjectCoordinatorName")"
                       aria-describedby="description-for-GroupProjectcoordinatorname"
                       data-parsley-errors-container="#description-for-GroupProjectcoordinatorname"
                       required=""
                       data-parsley-required-message="@Translate.Text("wp.ProjectCoordinatorNamevalid")"
                       data-parsley-trigger="focusout"
                       data-parsley-id="30">
            </span>
            <div id="description-for-GroupProjectcoordinatorname" class="form-field__messages">
            </div>
        </div>

        <div class="form-field form-field--text ">
            <label for="form-field-GroupProjectCoordinatorEmailaddress" class="form-field__label">
                @Translate.Text("wp.ProjectCoordinatorEmail")
            </label>
            <label class="form-field__input-wrapper">
                @Html.TextBoxFor(x => x.GroupProjectCoordinatorEmailaddress,
                new
                {
                @class = "form-field-EmailAddress form-field__input form-field__input--text",
                @id = "form-field-GroupProjectCoordinatorEmailaddress",
                @placeholder = Translate.Text("wp.ProjectCoordinatorEmail"),
                @data_parsley_error_message = Translate.Text("wp.ProjectCoordinatorEmailvalid"),
                @data_parsley_errors_container = "#description-for-GroupProjectCoordinatorEmailaddress",
                @aria_describedby = "description-for-GroupProjectCoordinatorEmailaddress",
                @data_parsley_id = "14",
                @step = "any",
                @type = "email",
                @maxlength = "50",
                @required = "",
                @data_parsley_trigger = "focusout",
                @data_parsley_maxlength = "50"
                })

            </label>
            <div id="description-for-GroupProjectCoordinatorEmailaddress" class="form-field__messages">
                @Html.ValidationMessageFor(x => x.GroupProjectCoordinatorEmailaddress, "", new { @class = "parsley-errors-list" })
            </div>
        </div>

        <div class="form-field form-field--text ">
            <label for="form-field-GroupProjectCoordinatorMobile" class="form-field__label">
                @Translate.Text("wp.ProjectCoordinatorMobileNumber")
                @*<span class="form-field__label-required">(@Translate.Text("Epass.Optional"))</span>*@
            </label>

            <label class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--mobile-number">
                @Html.TextBoxFor(x => x.GroupProjectCoordinatorMobile,
                new
                {
                @type = "tel",
                @class = "form-field__input form-field__input--text form-field__input--prefixed",
                @name = "GroupProjectCoordinatorMobile",
                @id = "form-field-GroupProjectCoordinatorMobile",
                @placeholder = Translate.Text("Enter UAE mobile number"),
                @data_parsley_error_message = Translate.Text("Please enter a valid UAE mobile number"),
                @data_parsley_errors_container = "#description-for-GroupProjectCoordinatorMobile",
                @aria_describedby = "description-for-GroupProjectCoordinatorMobile",
                @data_parsley_id = "14",
                @data_parsley_type = "digits",
                @required = "",
                @data_parsley_mobilenumber = "",
                @step = "any"
                })

            </label>
            <div id="description-for-GroupProjectCoordinatorMobile" class="form-field__messages">
                @Html.ValidationMessageFor(x => x.GroupProjectCoordinatorMobile, "", new { @class = "parsley-errors-list" })
            </div>
        </div>

        <div class="form-field form-field--text form-field--textarea">
            <label for="form-field-GroupPurposeofVisit" class="form-field__label">
                @Translate.Text("wp.Purpose of the visit")
                <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
            </label>
            <span class="form-field__input-wrapper">
                <textarea class="form-field__input form-field__input--text form-field__input--textarea"
                          maxlength="100"
                          data-textarea="GroupPurposeofVisit"
                          id="form-field-GroupPurposeofVisit"
                          name="GroupPurposeofVisit"
                          type="textarea"
                          aria-describedby="description-for-GroupPurposeofVisit"
                          data-parsley-errors-container="#description-for-GroupPurposeofVisit"
                          required=""
                          data-parsley-required-message="@Translate.Text("Epass.EnterPurposeofVisit")">@Model.GroupPurposeofVisit</textarea>
            </span>
            <div id="description-for-GroupPurposeofVisit" class="form-field__messages">
                <p class="form-field__charcount">@Translate.Text("Max") <span data-charcount="GroupPurposeofVisit">0</span>/100 @Translate.Text("Characters")</p>
            </div>
        </div>

        <div class="form-field form-field--toggles inline-terms mt24" id="TermsConditions1">
            <div class="form-field__checkbox  last">
                <label>
                    <input class="form-field__input form-field__input--checkbox"
                           id="form-field-checkbox_1_1_terms1"
                           aria-label="form-field-checkbox_1_1_terms"
                           name="AgreedToTerms"
                           type="checkbox"
                           value="true"
                           aria-describedby="description-for-accept-terms1"
                           required=""
                           data-parsley-error-message="@Translate.Text("Error Terms Agreement")"
                           data-parsley-errors-container="#description-for-accept-terms1"
                           data-parsley-multiple="form-field-checkbox_1_1_terms1"
                           data-parsley-id="23">
                    <span class="form-field__fakecheckbox focus-enabled tnc_cbox">&nbsp;</span>
                </label>
            </div>
            <fieldset class="fieldset m39-modal__tnc">
                <legend class="legend-color">.</legend>
                <span class="text">@Translate.Text("updateiban.Iagree")</span>
                @Html.Sitecore().Placeholder("termsandcondition")
            </fieldset>
            <div id="description-for-accept-terms1" class="form-field__messages"></div>
            <input type="hidden" name="AgreedToTerms" value="false" />
        </div>

        <div class="form-field__button">
            <button class="button button--primary button--next j113-epass--permPass__form-page--next2" type="submit" data-submission-text="@Translate.Text("Epass.Updating")...">@Translate.Text("Epass.Continue")</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    docReady(function () {
        const myParam = @Model.PageNo;//urlParams.get('page');
        setTimeout(function () {
            if (x == "3") {
                $("#form-field-radio_multiplePP").click();
            }
        }, 250);
        Date.prototype.addMos = function (months) {
            var date = new Date(this.valueOf());
            date.setMonth(date.getMonth() + months);
            return date;
        };
        require(['picker'], function () {
            var today = new Date()

            var from_$input1 = jQuery('#form-field-GroupPassIssueDate').pickadate(),
                from_picker1 = from_$input1.pickadate('picker')

            var to_$input1 = jQuery('#form-field-GroupPassExpiryDate').pickadate(),
                to_picker1 = to_$input1.pickadate('picker')


            // Check if there’s a “from” or “to” date to start with.
            if (typeof from_picker1 !== "undefined" && from_picker1.get('value')) {
                to_picker1.set('min', from_picker1.get('select').obj.addDays(0))
            }

            // When something is selected, update the “from” and “to” limits.
            if (typeof from_picker1 !== "undefined") {
                from_picker1.on('set', function (event) {
                    if (event.select) {
                        if (typeof to_picker1 !== "undefined" && to_picker1.get('select') !== null) {
                            if (from_picker1.get('select').obj > to_picker1.get('select').obj.addDays(0)) {
                                to_picker1.clear();
                            };
                        }
                        to_picker1.set('min', from_picker1.get('select').obj.addDays(0));
                        to_picker1.set('max', from_picker1.get('select').obj.addMos(6));
                        
                    } else if ('clear' in event) {
                        to_picker1.set('min', today.addDays(0))
                        to_picker1.set('max', today.addMos(6))
                    }
                });
            };
            if (typeof to_picker1 !== "undefined") {
                to_picker1.on('set', function (event) {
                    if (event.select) {
                        //from_picker1.set('max', to_picker1.get('select').obj.addDays(15))
                        if (typeof from_picker1 !== "undefined" && from_picker1.get('select') !== null) {
                            if (to_picker1.get('select').obj < from_picker1.get('select').obj.addDays(0)) {
                                from_picker1.clear();
                            };
                        }
                    } else if ('clear' in event) {
                        //from_picker1.set('max', false)
                    }
                });
            }
        });
    });
</script>
