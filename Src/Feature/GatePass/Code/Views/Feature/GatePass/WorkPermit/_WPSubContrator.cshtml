@using DEWAXP.Foundation.Helpers
@using Glass.Mapper.Sc.Fields
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Globalization
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.GatePass.Models.ePass.ePassSubContractor

@{
    var Nationalities = Model.CountryList;
    bool editflag = !string.IsNullOrWhiteSpace(Model.SubcontractorID) ? true : false;
}

<div class="j113-epass" data-journey="j113-epass">
    <div class="j113-epass">
        <div class="m66-preloader j113-epass--loader hidden">
            <div class="grid">
                <div class="grid__row">
                    <div class="grid__column grid__column--12">
                        <h2 class="text__section-subtitle">@Translate.Text("Epass.Pleasewait")</h2>
                        <div class="loader"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="grid">

        @*@Html.Sitecore().Placeholder("epass-page-title")*@
        <div class="grid__row">
            <div class="grid__column grid__column--12" id="main-skip">
                <div class="m26-page-title title_message">
                    <div class="m26-page-title__links">
                        <p class="m26-page-title__backlink">
                            <a class="button button--text button--back"
                               href="@(editflag ? LinkHelper.GetItemUrl(SitecoreItemIdentifiers.WP_SUBCONTRACTORLIST) : LinkHelper.GetItemUrl(SitecoreItemIdentifiers.WORKPERMIT_PAGE))">@Translate.Text("Back")</a>
                        </p>
                    </div>
                    <h2 class="text__page-title">@(editflag ? Translate.Text("Edit Subcontractor") : Translate.Text("Add New Subcontractor"))</h2>
                </div>
            </div>
        </div>
        <div class="grid__row">
            <div class="grid__column grid__column--12 grid__column--form">
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form", @data_form = "true", @enctype = "multipart/form-data", @data_submit_validate = "enabled" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Partial("~/Views/Feature/CommonComponents/Shared/_SubmissionError.cshtml")
                    @Html.HiddenFor(m => m.SubcontractorID)

                    <div class="form-field form-field--text  ">
                        <label for="form-field-tradelicensenumber" class="form-field__label">
                            @Translate.Text("Epass.Tradelicense")
                            <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                        </label>
                        <span class="form-field__input-wrapper @(editflag?"form-field__input-wrapper--readonly":"")">
                            <input class="form-field__input form-field__input--text @(editflag?"form-field__input--readonly":"")"
                                   id="form-field-tradelicensenumber"
                                   name="Trade_License_Number"
                                   type="number"
                                   required=""
                                   placeholder="@Translate.Text("Epass.Entertradelicense")"
                                   aria-describedby="description-for-tradelicensenumber"
                                   data-parsley-errors-container="#description-for-tradelicensenumber"
                                   data-parsley-required-message="@Translate.Text("Epass.Entertradelicense")"
                                   @((!string.IsNullOrWhiteSpace(Model.Trade_License_Number)) ? " disabled" : "")
                                   value="@Model.Trade_License_Number" />
                        </span>
                        <div id="description-for-tradelicensenumber" class="form-field__messages">
                        </div>
                    </div>
                    <div class="form-field form-field--select form-field--select-single">
                        <label for="form-field-tradelicensecountry" class="form-field__label">
                            @Translate.Text("Epass.Country")
                            <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                        </label>
                        @if ((editflag && string.IsNullOrWhiteSpace(Model.Country)) || !editflag)
                        {
                            <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                <select class="form-field__input form-field__input--select form-field__input--select-full form-field__input--select2"
                                        id="form-field-tradelicensecountry"
                                        name="Country"
                                        aria-describedby="description-for-tradelicensecountry"
                                        data-parsley-errors-container="#description-for-tradelicensecountry"
                                        required
                                        data-parsley-required-message="@Translate.Text("Epass.Selectcountry")">
                                    <option value="" selected>
                                        @Translate.Text("Epass.Selectcountry")
                                    </option>
                                    @{foreach (var item in Nationalities)
                                        {
                                            <option value="@item.Value"> @item.Text </option>
                                        }
                                    }
                                </select>
                            </span>
                        }
                        else
                        {
                            <span>
                                @Model.Country
                            </span>
                        }

                        <div id="description-for-tradelicensecountry" class="form-field__messages">
                        </div>
                    </div>
                    <div class="form-field form-field--text  ">
                        <label for="form-field-subcontractorname" class="form-field__label">
                            @Translate.Text("Epass.SubcontractorName")
                            <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                        </label>
                        <span class="form-field__input-wrapper @(editflag?"form-field__input-wrapper--readonly":"")">
                            <input class="form-field__input form-field__input--text @(editflag?"form-field__input--readonly":"")"
                                   id="form-field-subcontractorname"
                                   name="Name"
                                   type="text"
                                   placeholder="@Translate.Text("Epass.EnterSubcontractorname")"
                                   aria-describedby="description-for-subcontractorname"
                                   data-parsley-errors-container="#description-for-subcontractorname"
                                   required
                                   data-parsley-required-message="@Translate.Text("Epass.EnterSubcontractorname")"
                                   @((!string.IsNullOrWhiteSpace(Model.Name)) ? " disabled" : "")
                                   value="@Model.Name" />
                        </span>
                        <div id="description-for-subcontractorname" class="form-field__messages">
                        </div>
                    </div>
                    <div id="datepicker-container-tradelicenseissuedate" class="form-field form-field--text  ">
                        <label for="form-field-tradelicenseissuedate" class="form-field__label">
                            @Translate.Text("Epass.Tradeissuedate")
                            <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                        </label>
                        <span class="form-field__input-wrapper
                             form-field__input-wrapper--datepicker">

                            <input class="form-field__input form-field__input--text  form-field__input--datepicker     picker__input form-field__binding"
                                   id="form-field-tradelicenseissuedate"
                                   name="Trade_License_Issue_Date"
                                   type="text"
                                   value="@Model.Trade_License_Issue_Date"
                                   placeholder="@Translate.Text("Epass.DateOfissuance")"
                                   aria-describedby="description-for-tradelicenseissuedate"
                                   data-parsley-errors-container="#description-for-tradelicenseissuedate"
                                   data-parsley-required-message="@Translate.Text("Epass.Requiredfield")"
                                   data-el="datepicker"
                                   data-parsley-trigger="focusout"
                                   data-parsley-id="46"
                                   aria-haspopup="true"
                                   aria-expanded="false"
                                   aria-readonly="false"
                                   data-picker-options="{&quot;selectYears&quot;: 50 , &quot;selectMonths&quot;: true }" />
                        </span>
                        <div id="description-for-tradelicenseissuedate" class="form-field__messages">
                        </div>
                    </div>


                    <div id="datepicker-container-tradelicenseenddate" class="form-field form-field--text  ">
                        <label for="form-field-tradelicenseenddate" class="form-field__label">
                            @Translate.Text("Epass.Tradeexpirydate")
                            <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                        </label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--datepicker picker__input form-field__binding">
                            <input class="form-field__input form-field__input--text form-field__input--datepicker"
                                   id="form-field-tradelicenseenddate"
                                   name="Trade_License_Expiry_Date"
                                   type="text"
                                   value="@Model.Trade_License_Expiry_Date"
                                   placeholder="@Translate.Text("Epass.DateOfexpiry")"
                                   aria-describedby="description-for-tradelicenseenddate"
                                   data-parsley-errors-container="#description-for-tradelicenseenddate"
                                   data-parsley-required-message="@Translate.Text("Epass.Requiredfield")"
                                   data-el="datepicker-future"
                                   data-parsley-trigger="focusout"
                                   data-parsley-id="46"
                                   aria-haspopup="true"
                                   aria-expanded="false"
                                   aria-readonly="false"
                                   data-picker-options="{&quot;selectYears&quot;: 50 , &quot;selectMonths&quot;: true }" />
                        </span>
                        <div id="description-for-tradelicenseenddate" class="form-field__messages">
                        </div>
                    </div>
                    <div class="form-field form-field--upload" id="TradelicenseDocdiv">
                        <div class="form-field__input-wrapper">
                            <div class="form-field__preview-wrapper">
                                <img src="/images/preview_pdf@2x.png" data-src="/images/preview_pdf@2x.png" data-success="/images/upload_success@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="tradelicensedoc">
                            </div>
                            <div class="form-field__uploader-details">
                                <label for="form-field-tradelicensedoc" class="form-field__label">
                                    @Translate.Text("wp.Trade License Document")
                                    <span class="form-field__label-required aria-only">@Translate.Text("Epass.Required")</span>
                                </label>
                                <div>
                                    <label>
                                        <input class="form-field__input form-field__input--upload"
                                               id="form-field-tradelicensedoc"
                                               name="TradelicenseDoc"
                                               type="file"
                                               aria-describedby="description-for-tradelicensedoc"
                                               data-parsley-errors-container="#description-for-tradelicensedoc"
                                               required=""
                                               data-parsley-required-message="@Translate.Text("Epass.Uploadtradelicensedoc")"
                                               data-uploader-field="tradelicensedoc"
                                               accept="application/pdf,image/x-png,image/jpg,,image/jpeg,image/bmp"
                                               data-accepts='"jpg", "bmp","png","jpeg","pdf"'
                                               data-size="2048000"
                                               data-parsley-trigger="focusout"
                                               data-parsley-id="48">
                                        <span class="button button--primary button--small focus-enabled"
                                              data-uploader-button="upload-choose">@Translate.Text("Epass.Choose")</span>

                                        </label>
                                    </div>
                                    <p class="form-field__input--upload-format-error-message" data-uploader-format-error="error-message">@Translate.Text("Epass.Uploadformat")</p>
                                    <p class="form-field__input--upload-size-error-message" data-uploader-size-error="error-message">@Translate.Text("Epass.Uploadfilesize")</p>
                                    <p class="form-field__input--upload-filename" data-uploader-filename="tradelicensedoc"></p>

                                    <p>
                                        <button class="button button--text button--remove hidden" data-uploader-remove="tradelicensedoc">@Translate.Text("Epass.Remove")</button>
                                    </p>
                                </div>
                            </div>
                            <div id="description-for-tradelicensedoc" class="form-field__messages">
                                <p class="form-field__description">@Translate.Text("wp.Indoc")</p>
                                <p class="form-field__error red">
                                    @Html.ValidationMessageFor(x => x.TradelicenseDoc)
                                </p>
                            </div>
                        </div>

                        <div class="form-field__button">
                            <button type="submit" class="button button--primary button--fullwidth-mobile button--next" data-submission-text="@Translate.Text("Submitting")...">
                                @(editflag ? Translate.Text("Edit Subcontractor") : Translate.Text("Epass.Addsubcontractor"))
                            </button>
                        </div>
                    }
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/External/nml/form-submit-validate.js"></script>
<script>
    var $TradelicenseDocdiv = jQuery("#TradelicenseDocdiv");
    var $tradelicensenumber = jQuery("#form-field-tradelicensenumber");
    var $subcontractorname = jQuery("#form-field-subcontractorname");
    var $tradelicenseissuedate = jQuery("#form-field-tradelicenseissuedate");
    var $tradelicenseenddate = jQuery("#form-field-tradelicenseenddate");
    docReady(function () {
        if ('@Model.CountryKey' == 'AE') {
            setTimeout(function () {
                checkTradeLicenseValidation();
            }, 250);
        }
        jQuery(".select2-search__field").attr("placeholder", "@Translate.Text("Epass.Search")");
        setTimeout(function () { jQuery("#select2-form-field-tradelicensecountry-container").attr("style", "padding:5px 12px 8px;") }, 250);
        jQuery("#form-field-tradelicensecountry").on("change", function () { checkTradeLicenseValidation(); });
        $tradelicensenumber.on('focusout', function () {
            checkTradeLicenseValidation();
        });
       require(['picker'], function () {
            var from_$input = jQuery('#form-field-tradelicenseissuedate').pickadate(),
                from_picker = from_$input.pickadate('picker')

            var to_$input = jQuery('#form-field-tradelicenseenddate').pickadate(),
                to_picker = to_$input.pickadate('picker')


            // Check if there’s a “from” or “to” date to start with.
            if (from_picker.get('value')) {
                to_picker.set('min', from_picker.get('select'))
            }
            if (to_picker.get('value')) {
                from_picker.set('max', to_picker.get('select'))
            }

            // When something is selected, update the “from” and “to” limits.
            from_picker.on('set', function (event) {
                if (event.select) {
                    to_picker.set('min', from_picker.get('select'))
                } else if ('clear' in event) {
                    to_picker.set('min', false)
                }
            })
            to_picker.on('set', function (event) {
                if (event.select) {
                    from_picker.set('max', to_picker.get('select'))
                } else if ('clear' in event) {
                    from_picker.set('max', false)
                }
            });
        });
    });
    function checkTradeLicenseValidation() {
        var selVal = jQuery("#form-field-tradelicensecountry option:selected").val();
        if (selVal === "AE" || ('@Model.CountryKey' == 'AE')) {
            if (jQuery($tradelicensenumber).parsley().isValid()) {
                if ($tradelicensenumber.val() != "" && $tradelicensenumber.val() != undefined) {
                    var response = TradeLicenseDetails($tradelicensenumber.val(), epassbeforesendfunc, epasscompletefunc, successfunc, errorfunc);
                }
            }
        }
        else {
            errorfunc();
        }
    }
    TradeLicenseDetails = function (tid, beforesendfunc, completefunc, successfunc, errorfunc) {
        var url = "/api/TradeLicenseDetails/";
        jQuery.ajax({
            type: 'GET',
            url: url,
            beforeSend: beforesendfunc,
            data: {
                tid: tid
            },
            complete: completefunc,
            dataType: 'json',
            method: 'GET',
            async: true,
            success: function (response) {
                successfunc(response);
            }, error: function (response) {
                errorfunc();
            }
        });
    }
    function epassbeforesendfunc() {
        jQuery('#Errormessage').html('');
        jQuery('.j113-epass--loader').show();
        jQuery('.j113-epass--loader').css('top', $(window).scrollTop());
        $('body').removeClass('unscrollable').addClass('unscrollable');
    }
    function epasscompletefunc() {
        jQuery('.j113-epass--loader').hide();
        $('body').removeClass('unscrollable');
    }
    function successfunc(response) {
        if (response != null && response.result != null && response.result.tradeexistflag != null) {
            $TradelicenseDocdiv.hide();

            $tradelicenseissuedate.val(response.result.formattradelicenseenddate);
            $tradelicenseissuedate.addClass('disabled');
            require(['picker'], function () {
                jQuery("#form-field-tradelicenseissuedate").pickadate().pickadate('picker').stop();
                $tradelicenseissuedate.prop('readonly', true);
            });
            $tradelicenseenddate.val(response.result.formattradelicensestartdate);
            $tradelicenseenddate.addClass('disabled');
            require(['picker'], function () {
                jQuery("#form-field-tradelicenseenddate").pickadate().pickadate('picker').stop();
                $tradelicenseenddate.prop('readonly', true);
            });
        }
        else {
            errorfunc();
        }
    }
    function errorfunc() {
        //$subcontractorname.val("");
       // $subcontractorname.removeAttr('readonly');
        $tradelicenseissuedate.val("");
        $tradelicenseissuedate.removeClass('disabled');
        revivePicker('form-field-tradelicenseissuedate');
        $tradelicenseenddate.val("");
        $tradelicenseenddate.removeClass('disabled');
        revivePicker('form-field-tradelicenseenddate');
        $TradelicenseDocdiv.show();
    }
    function revivePicker(id) {
        require(['picker'], function () {
            if (true) {

                dpOptions = jQuery('#' + id).data('picker-options');
                dpLabelId = '#' + jQuery('#' + id).parents('.form-field').attr('id');

                if (typeof dpOptions === 'string') {
                    dpOptions = JSON.parse(dpOptions);
                } else if (typeof dpOptions !== 'object') {
                    dpOptions = {};
                }

                jQuery('#' + id).pickadate(
                    $.extend(
                        true, {
                            container: dpLabelId,
                            min: new Date()
                        },
                        dpOptions,
                        defaultOpts
                    )
                );

                // if dp is has a ref dataset update based on this
                if (jQuery('#' + id).data('ref')) {
                    jQuery('#' + id).on('change', _this.setConstraints);
                }


                // IE9clicker (1of2) - as IE9 doesn't have events on pseudoselectors (clicking on calendar icon does not trigger picker)
                // and as it would be too much work before delivery to update markup of all date fields... go js ugly solution
                jQuery('#' + id).after('<span data-clicker="' + dpLabelId + '" class="form-field__datepicker-icon-clicker"></span>');

            } else {

                jQuery('#' + id).attr('type', 'date');

                // if dp is has a ref dataset update based on this
                if (jQuery('#' + id).data('ref')) {
                    jQuery('#' + id).on('change', _this.setConstraintsMobile);
                }
            }
            jQuery('#' + id).prop('readonly', false);
        })

    }
</script>