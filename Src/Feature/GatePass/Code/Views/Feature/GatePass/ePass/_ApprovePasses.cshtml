@using DEWAXP.Foundation.Helpers
@using Glass.Mapper.Sc.Fields
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Globalization
@using DEWAXP.Feature.GatePass.Models.ePass
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.GatePass.Models.ePass.SecurityApproveRejectPassViewModel

@{
    /**/

    var nowmax = DateHelper.DubaiNow().AddMonths(-1).AddDays(15);
    var FromToTime = EpassHelper.GetFromToTime();
    DateTime nowoneyear;
    if (Model.visaExpiryDate != null && Model.visaExpiryDate.Value.Ticks < DateHelper.DubaiNow().AddYears(1).Ticks)
    {
        nowoneyear = Model.visaExpiryDate.Value.AddMonths(-1);
    }
    else
    {
        nowoneyear = DateHelper.DubaiNow().AddMonths(-1).AddYears(1);
    }

}
<div class="j113-epass">
    <div class="m66-preloader j113-epass--loader hidden">
        <div class="grid">
            <div class="grid__row">
                <div class="grid__column grid__column--12">
                    <h2 class="text__section-subtitle">
                        @Translate.Text("Epass.Pleasewait")
                    </h2>
                    <div class="loader"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.Role == "SupplierSecurity")
{
    <div class="m39-modal j113-epass_modal--confirm" data-component="m39-modal" id="approve_modal_true">
        <button data-trigger="true" class="m39-modal__trigger" type="button" id="_8gguopjrg_trigger" aria-controls="_8gguopjrg_content"></button>
        <div data-content="true" class="m39-modal__container" role="dialog" aria-expanded="false" id="_hznj48fu1_content" aria-labelledby="_hznj48fu1_trigger">
            <div class="m39-modal__dialog" id="SecurityApproverForm">
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form static-form", @id = "form-pendingrequest", data_form = "true", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="m39-modal__header">
                        <div class="m39-modal__title">
                            @Translate.Text("Epass.Pass")
                            - @Model.PassNumber
                        </div>
                    </div>
                    <div class="m39-modal__content" style="top: 31px;">
                        <div class="grid__row approvecontent">
                            @Translate.Text("Epass.Wanttoapprovepass")
                        </div>
                        <div class="grid__row">
                            <a class="button m39-m12-no" href="#">
                                @Translate.Text("Epass.No")
                            </a>
                            <a data-eid="" data-id="" id="m39-m12-yesApprove" class="button button--primary m39-m12-yesApprove" href="#">
                                @Translate.Text("Epass.Yes")
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
else if (ViewBag.Role == "SupplierAdmin")
{
    <div id="my_idmodal">
        <div class="m39-modal m39-modal--new" data-component="m39-modal" id="approve_modal_true" data-labels='{"approve":"Approve"}'>
            <button data-trigger="true" class="m39-modal__trigger" type="button" id="_8gguopjrg_trigger" aria-controls="_8gguopjrg_content"></button>
            <div data-content="true" class="m39-modal__container" role="dialog" aria-expanded="true" id="_8gguopjrg_content" aria-labelledby="_8gguopjrg_trigger">
                <div class="m39-modal__dialog" id="ApproverForm">

                    @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form static-form", @id = "form-pendingrequest", data_form = "true", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="m39-modal__header">
                            <div class="m39-modal__title">
                                @Translate.Text("Epass.IndPassNo")
                                : @Model.PassNumber
                            </div>
                            <a data-close="true" id="btnclose" class="m39-modal__button--close">
                                @Translate.Text("Epass.Close")
                            </a>
                        </div>
                        <div class="m39-modal__content">
                            <div class="grid__row mb0">
                                <div class="grid__column grid__column--12 mb24">
                                    <div id="description-for-success" class="form-field__messages clear_both red">
                                    </div>
                                </div>
                                <div class="grid__column grid__column--6 mb24">
                                    @if (Model.IsOneDayPass)
                                    {
                                        <div id="datepicker-container-j0o6zzw11" class="form-field form-field--text">
                                            <label for="form-field-DateOfVisit" class="form-field__label">
                                                @Translate.Text("Epass.DateOfVisit")
                                            </label>
                                            <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                                                <input class="form-field__input form-field__input--text form-field__input--datepicker picker__input form-field__binding"
                                                       id="form-field-DateOfVisit"
                                                       value="@Model.PassIssueDate"
                                                       name="PassIssueDate"
                                                       type="text"
                                                       placeholder="@Translate.Text("Epass.DateOfVisit")"
                                                       data-el="datepicker-future"
                                                       aria-describedby="description-for-DateOfVisit"
                                                       data-parsley-errors-container="#description-for-DateOfVisit"
                                                       data-parsley-error-message="@Translate.Text("Epass.Entercorrectdate")"
                                                       required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")"
                                                       data-parsley-trigger="focusout"
                                                       data-scroll="false"
                                                       data-picker-options='{&quot;selectMonths&quot;: true , &quot;selectYears&quot;: 36 , &quot;format&quot;: &quot;yyyy/mm/dd&quot; , &quot;max&quot;: [@nowoneyear.Year,@nowoneyear.Month,@nowoneyear.Day] }' />

                                            </span>
                                            <div id="description-for-DateOfVisit" class="form-field__messages">
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div id="datepicker-container-j0o6zzw1u" class="form-field form-field--text">
                                            <label for="form-field-PassIssueDate" class="form-field__label">
                                                @Translate.Text("Epass.Passissuedate")
                                            </label>
                                            <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                                                @*<input class="form-field__input form-field__input--text form-field__input--datepicker" id="form-field-j0o6zzw1u" name="text-date" type="text" placeholder="Some placeholder text" aria-describedby="description-for-j0o6zzw1u" data-parsley-errors-container="#description-for-j0o6zzw1u" data-el="datepicker" required data-parsley-required-message="This field is required" data-scroll="false" data-picker-options='{}' />*@
                                                <input class="form-field__input form-field__input--text form-field__input--datepicker picker__input form-field__binding"
                                                       id="form-field-PassIssueDate"
                                                       value="@Model.PassIssueDate??DateTime.Now"
                                                       name="PassIssueDate"
                                                       type="text"
                                                       placeholder="@Translate.Text("Epass.Passissuedate")"
                                                       data-el="datepicker-future"
                                                       aria-describedby="description-for-PassIssueDate"
                                                       data-parsley-errors-container="#description-for-PassIssueDate"
                                                       data-parsley-error-message="@Translate.Text("Epass.Entercorrectdate")"
                                                       required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")"
                                                       data-parsley-trigger="focusout"
                                                       data-scroll="false"
                                                       data-picker-options='{&quot;selectMonths&quot;: true , &quot;selectYears&quot;: 36 , &quot;format&quot;: &quot;yyyy/mm/dd&quot; , &quot;max&quot;: [@nowoneyear.Year,@nowoneyear.Month,@nowoneyear.Day] }' />

                                            </span>
                                            <div id="description-for-PassIssueDate" class="form-field__messages">
                                            </div>
                                        </div>
                                    }
                                    <div class="form-field form-field--select form-field--select-single">
                                        <label for="form-field-FromTime" class="form-field__label">
                                            @Translate.Text("Epass.Fromtime")
                                        </label>
                                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                            <select class="form-field__input form-field__input--select form-field__input--select-full" id="form-field-FromTime" name="FromTime" aria-describedby="description-for-FromTime" data-parsley-errors-container="#description-for-FromTime" required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")">
                                                <option value="" selected>
                                                    @Translate.Text("Epass.Chooseanoption")
                                                </option>
                                                @{
                                                    foreach (var item in FromToTime)
                                                    {
                                                        if (Model.FromTime != null && Model.FromTime == item.Value)
                                                        {
                                                            <option value="@item.Value" selected>@item.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    }
                                                }

                                            </select>
                                        </span>
                                        <div id="description-for-4720ynlnn" class="form-field__messages">
                                        </div>
                                    </div>
                                    <div class="form-field form-field--select form-field--select-single">
                                        <label for="form-field-locations" class="form-field__label">
                                            @Translate.Text("Epass.Location")
                                        </label>
                                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                            <select class="form-field__input form-field__input--select form-field__input--select-full form-field__input--select2" id="form-field-locations" name="SelectedLocation" multiple="multiple" aria-describedby="description-for-ma7826si2" data-parsley-errors-container="#description-for-ma7826si2" placeholder="@Translate.Text("Epass.Sendto")" required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")">
                                                @{
                                                    foreach (var item in Model.OfficeLocations)
                                                    {
                                                        <option value="@item.Value" @(Model.SelectedLocation != null && Model.SelectedLocation.Contains(item.Value) ? "selected" : string.Empty)>@item.Text</option>

                                                    }
                                                }
                                            </select>
                                        </span>
                                        <div id="description-for-ma7826si2" class="form-field__messages">
                                        </div>
                                    </div>
                                </div>

                                <div class="grid__column grid__column--6">

                                    <div id="datepicker-container-j0o6zzw11" class="form-field form-field--text">
                                        @if (!Model.IsOneDayPass)
                                        {
                                            <label for="form-field-PassExpiryDate" class="form-field__label">
                                                @Translate.Text("Epass.Passexpirydate")
                                                <span class="form-field__label-required aria-only">
                                                    @Translate.Text("Epass.Required")
                                                </span>
                                            </label>
                                            <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                                                <input class="form-field__input form-field__input--text form-field__input--datepicker picker__input form-field__binding"
                                                       id="form-field-PassExpiryDate"
                                                       name="PassExpiryDate"
                                                       type="text"
                                                       value="@Model.PassExpiryDate"
                                                       placeholder="@Translate.Text("Epass.Passexpirydate")"
                                                       aria-describedby="description-for-PassExpiryDate"
                                                       data-parsley-errors-container="#description-for-PassExpiryDate"
                                                       data-el="datepicker"
                                                       data-parsley-error-message="@Translate.Text("Epass.Entercorrectdate")"
                                                       required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")"
                                                       data-parsley-trigger="focusout"
                                                       data-scroll="false"
                                                       data-picker-options='{&quot;selectMonths&quot;: true , &quot;selectYears&quot;: 36 , &quot;format&quot;: &quot;yyyy/mm/dd&quot; , &quot;min&quot;: [@nowmax.Year,@nowmax.Month,@(nowmax.Day)],&quot;max&quot;: [@nowoneyear.Year,@nowoneyear.Month,@nowoneyear.Day] }' />
                                            </span>
                                            <div id="description-for-PassExpiryDate" class="form-field__messages">
                                            </div>
                                        }
                                        else
                                        {
                                            <div style="margin-top: 74px;"></div>
                                        }
                                    </div>

                                    <div class="form-field form-field--select form-field--select-single">
                                        <label for="form-field-ToTime" class="form-field__label">
                                            @Translate.Text("Epass.Totime")
                                        </label>
                                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                            <select class="form-field__input form-field__input--select form-field__input--select-full" id="form-field-ToTime" name="ToTime" aria-describedby="description-for-ToTime" data-parsley-errors-container="#description-for-ToTime" required data-parsley-required-message="@Translate.Text("Epass.Requiredfield")">
                                                <option value="" selected>
                                                    @Translate.Text("Epass.Chooseanoption")
                                                </option>
                                                @{
                                                    foreach (var item in FromToTime)
                                                    {
                                                        if (Model.ToTime != null && Model.ToTime == item.Value)
                                                        {
                                                            <option value="@item.Value" selected>@item.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </span>

                                    </div>
                                </div>


                            </div>
                        </div>
                        <div class="m39-modal__footer">
                            <button class="button button--primary" id="btnConfirmApprove" data-accountupdate="true" type="button" data-modal-confirm="true">@Translate.Text("Epass.Confirm")</button>
                        </div>
                    }

                </div>
            </div>
            <div class="m39-modal__overlay"> </div>
        </div>
    </div>
}
<script>
    docReady(function () {
        require(['pickerdate'], function () {
            $('#form-pendingrequest').find('.form-field:not(.form-field--upload)').find('input').each(function () {
                if ($(this).hasClass('form-field__input--datepicker') && ($(this).val().length > 0)) {
                    jQuery(this).pickadate('picker').set('select', new Date($(this).val()));
                }
            })
        });

        Date.prototype.addDays = function (days) {
            var date = new Date(this.valueOf());

            date.setDate(date.getDate() + days);

            return date;
        };

        require(['picker'], function () {
            var from_$input = jQuery('#form-field-PassIssueDate').pickadate(),
                from_picker = from_$input.pickadate('picker')

            var to_$input = jQuery('#form-field-PassExpiryDate').pickadate(),
                to_picker = to_$input.pickadate('picker')


            // Check if there’s a “from” or “to” date to start with.
            if (typeof from_picker !== "undefined" && from_picker.get('value')) {
                to_picker.set('min', from_picker.get('select').obj.addDays(30))
            }

            // When something is selected, update the “from” and “to” limits.
            if (typeof from_picker !== "undefined") {
                from_picker.on('set', function (event) {
                    if (event.select) {
                        if (typeof to_picker !== "undefined" && to_picker.get('select') !== null) {
                            if (from_picker.get('select').obj > to_picker.get('select').obj.addDays(-30)) {
                                to_picker.clear();
                            };
                        }
                        to_picker.set('min', from_picker.get('select').obj.addDays(30));
                    } else if ('clear' in event) {
                        to_picker.set('min', false)
                    }
                });
            };
            if (typeof to_picker !== "undefined") {
                to_picker.on('set', function (event) {
                    if (event.select) {
                        //from_picker.set('max', to_picker.get('select').obj.addDays(30))
                        if (typeof from_picker !== "undefined" && from_picker.get('select') !== null) {
                            if (to_picker.get('select').obj < from_picker.get('select').obj.addDays(30)) {
                                from_picker.clear();
                            };
                        }
                    } else if ('clear' in event) {
                        //from_picker.set('max', false)
                    }
                });
            }
        });

    });
</script>


