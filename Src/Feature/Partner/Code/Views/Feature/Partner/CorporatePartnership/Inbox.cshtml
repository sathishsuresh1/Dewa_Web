@using DEWAXP.Foundation.Helpers
@using Glass.Mapper.Sc.Fields
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Globalization
@using Sitecorex = Sitecore
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.Partner.Models.CorporatePartnership.InboxViewModel

<!--Inbox.cshtml-->
<div class="grid">
    @Html.Sitecore().Placeholder("placeholder-back")
    <div class="grid__row">
        <div class="m66-preloader j1-CP--loader hidden">
            <div class="grid">
                <div class="grid__row">
                    <div class="grid__column grid__column--12">
                        <h2 class="text__section-subtitle">@Translate.Text("J100.Pleasewait")</h2>
                        <div class="loader"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="grid__column grid__column--12">

            <div class="m65-inbox-list" data-component="m65-inbox-list">
                <div class="m65-inbox-list--heading_wrapper">
                    <span class="m65-inbox-list--title">@Translate.Text("cpportal.Messaging")</span>
                </div>

                <!-- m15-filter start -->
                <div class="m15-filter" data-component="m15-filter">
                    <form id="messagefilter" action="#" method="POST" form-skipvalidation="true">
                        @Html.AntiForgeryToken()
                        <div class="m15-filter--input_wrapper">
                            <input placeholder="@Translate.Text("cpportal.searchkeyword")" class="m15-filter--input" id="messagefilterkeyword" type="text" name="">
                            <button type="submit" class="m15-filter--input_button icon-search" id="messagefilterbutton"></button>
                        </div>

                        <div class="m15-filter--select_wrapper icon-open">
                            @Translate.Text("cpportal.sortby")
                            <select class="m15-filter--select" id="message-select-sortby">
                                <option selected="">
                                    @Translate.Text("cpportal.datesort")
                                </option>
                                <option>
                                    @Translate.Text("cpportal.Namesort")
                                </option>
                            </select>
                        </div>
                    </form>
                </div>
                <!-- m15-filter end -->

                <div class="m65-inbox-list--tab">
                    @*<div data-control="received" class="m65-inbox-list--tab_item m65-inbox-list--tab_recv m65-inbox-list--tab_active" id="receiveddiv">
                            received
                        </div>*@

                    <div data-control="sent" class="m65-inbox-list--tab_item m65-inbox-list--tab_recv m65-inbox-list--tab_active" id="sentdiv">

                    </div>
                </div>
                <div id="receievedresults">
                </div>
            </div>
        </div>
    </div>
</div>
<!--Inbox.cshtml-->
<script id="inbox-received-template" type="text/x-handlebars-template">
    {{#each this}}
    <a href="{{messageurl}}" class="m65-inbox-list--received__mail {{messagereadornot}}">
        <div class="m65-inbox-list--received__mail--sender icon-pagination_active">
            {{messagesubject}}
        </div>
        <div class="m65-inbox-list--received__mail--desc">
            <span class="m65-inbox-list--received__mail--subj">{{messagetitle}}</span> - <span>{{messageobjectname}}</span>
        </div>
        <div class="m65-inbox-list--received__mail--date">
            {{messagedate}}
        </div>
    </a>
    {{/each}}
    <div class="grid__column grid__column--12" id="pagination-list">
    </div>
</script>
<script id="inbox-sent-template" type="text/x-handlebars-template">
    {{#each this}}
    <a href="{{messageurl}}" class="m65-inbox-list--sent__mail">
        <div class="m65-inbox-list--sent__mail--receipient">
            {{messagerequestername}}
        </div>
        <div class="m65-inbox-list--sent__mail--desc">
            <span class="m65-inbox-list--sent__mail--subj">{{messagesubject}}</span>
        </div>
        <div class="m65-inbox-list--sent__mail--date">
            {{messagedate}}
        </div>
    </a>
    {{/each}}
    <div class="grid__column grid__column--12" id="pagination-list">
    </div>
</script>
<script id="message-pagination-template" type="text/x-handlebars-template">
    <div class="m34-pagination">
        <div class="m34-pagination__content">
            {{#if previouspage}}
            <a onclick="ajaxpage({{previouspagenumber}},undefined)" role="button" aria-label="@Translate.Text("Previous")" class="button button--text button--back m34-pagination__button--prev">@Translate.Text("Previous")</a>
            {{/if}}
            <ul class="m34-pagination__page-list">
                {{#pagenumbers}}
                {{#ifCond ../page this}}
                <li data-index="{{this}}" class="m34-pagination__page-list-item  m34-pagination__page-list-item--active">
                    <a onclick="ajaxpage({{this}},undefined)" role="button" aria-label="" class="button button--text button--icon-none m34-pagination__button--page">{{this}}</a>
                </li>
                {{else}}
                <li data-index="{{this}}" class="m34-pagination__page-list-item">
                    <a onclick="ajaxpage({{this}},undefined)" role="button" aria-label="" class="button button--text button--icon-none m34-pagination__button--page">{{this}}</a>
                </li>
                {{/ifCond}}
                {{/pagenumbers}}
            </ul>
            {{#if nextpage}}
            <a onclick="ajaxpage({{nextpagenumber}},undefined)" role="button" aria-label="@Translate.Text("Next")" class="button button--text button--next m34-pagination__button--next">@Translate.Text("Next")</a>
            {{/if}}
        </div>
    </div>
</script>

<script type="text/javascript">
    docReady(function () {
        Handlebars.registerHelper('ifCond', function (v1, v2, options) {
            if (v1 == v2) {
                return options.fn(this);
            }
            return options.inverse(this);
        });
        jQuery('#message-select-sortby').change(function () {
            ajaxpage(1, $("#message-select-sortby option:selected").val());
        });
        //var url = window.location.href;
        //if (url.indexOf("#") > -1) {
        //    var hash = url.substring(url.indexOf("#") + 1);
        //    if (hash) {
        //        $('.m65-inbox-list--tab_item').each(function () {
        //            $(this).removeClass('m65-inbox-list--tab_active');
        //        })
        //        $('.m65-inbox-list--tab_item' + '[data-control="' + hash + '"]').addClass('m65-inbox-list--tab_active');
        //    }
        //}
        jQuery("#messagefilter").on('submit', function (event) {
            event.preventDefault();
            event.stopImmediatePropagation();

            handleSearchFilter(event);
        });
        //setTimeout(function()
        //{
        //    jQuery("#receiveddiv").on('click', function (event) {
        //        //event.preventDefault();
        //        //event.stopImmediatePropagation();
        //        ajaxpage(1, undefined, "received");
        //    });
        //    jQuery("#sentdiv").on('click', function (event) {
        //        //event.preventDefault();
        //        //event.stopImmediatePropagation();
        //        ajaxpage(1, undefined, "sent");
        //    });
        //}, 200);
        jQuery('#messagefilter').submit();
        function handleSearchFilter(e) {
            e.preventDefault();
            ajaxpage(1);
        }

    });
    function ajaxpage(page, sortby)
    {
        var view;
        if (typeof (sortby) === 'undefined')
            sortby = $("#message-select-sortby option:selected").val();

        var url = "/api/Sitecore/CorporatePartnership/InboxAjax";
        jQuery.ajax({
            url: url,
            type: 'POST',
            traditional: true,
            data: AddForgeryToken({
                sortby: sortby,
                keyword: jQuery('#messagefilterkeyword').val(),
                page: page
            }, "messagefilter"),
            beforeSend: function () {
                jQuery('.j1-CP--loader').show();
                jQuery('.j1-CP--loader').css('top', $(window).scrollTop());
            },
            complete: function () {
                jQuery('.j1-CP--loader').hide();
            },
            dataType: 'json'
        }).done(function (response) {
            if (response.status && response.Message != null) {
                var Jsondata = JSON.parse(response.Message.inboxmessage);
                if (Jsondata.length > 0) {
                    if (response.Message.receivedmessage) {
                        renderInboxReceived(Jsondata);
                    }
                    else {
                        renderInboxSent(Jsondata);
                    }

                    if (response.Message.pagination) {
                        var pagedata = {
                            previouspage: function () {
                                if (response.Message.page > 1)
                                    return true;
                                else
                                    return false;
                            },
                            nextpage: function () {
                                if (response.Message.page < response.Message.totalpage)
                                    return true;
                                else
                                    return false;
                            },
                            page: response.Message.page,
                            previouspagenumber: response.Message.page - 1,
                            nextpagenumber: response.Message.page + 1,
                            pagenumbers: response.Message.pagenumbers,
                            totalpage: response.Message.totalpage,
                            receivedorsentstr: response.Message.receivedorsent
                        }
                        renderSearchPagination(pagedata);
                    }
                }
                else {
                    jQuery('#receievedresults').html("<p class='centered'>@Translate.Text("cpportal_noresults")</p>");
                }
            }
            else {
                jQuery('#receievedresults').html("<p class='centered'>@Translate.Text("cpportal_noresults")</p>");
            }
        });
    }
    function renderInboxReceived(context) {
        var markup = jQuery('#inbox-received-template').html();
        var template = Handlebars.compile(markup);
        var rendering = template(context);
        jQuery('#receievedresults').html(rendering);
    }
    function renderInboxSent(context) {
        var markup = jQuery('#inbox-sent-template').html();
        var template = Handlebars.compile(markup);
        var rendering = template(context);
        jQuery('#receievedresults').html(rendering);
    }
    function renderSearchPagination(context) {
        var markup = jQuery('#message-pagination-template').html();
        var template = Handlebars.compile(markup);
        var rendering = template(context);
        jQuery('#pagination-list').html(rendering);
    }

</script>