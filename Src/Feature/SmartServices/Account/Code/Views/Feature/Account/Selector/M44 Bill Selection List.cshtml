@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@using X.PagedList
@using DEWAXP.Foundation.Content
@model DEWAXP.Foundation.Content.Models.BillSelector
@*@using CsQuery.ExtensionMethods*@
@using Sitecore.Globalization
@{
    var dir = Sitecore.Context.Culture.TextInfo.IsRightToLeft ? "rtl" : "ltr";
    var isempty = Model.PagedAccounts.Count > 0 ? false : true;
}
@if (Model != null)
{
<div class="m49-list-filter">
    <input class="m49-list-filter--input" id="m49-list-filter--input" name="m49-list-filter--input" placeholder="@Translate.Text(DictionaryKeys.AccountSelector.SearchByNumber)" type="search">
    <button class="m49-list-filter-reset-button" title="Clear Filter" type="button" aria-label="Clear Filter"><span class="aria-only">@Translate.Text(DictionaryKeys.AccountSelector.Filter)</span></button>
    <button class="m49-list-filter--button" id="search" title="Filter results" type="button" role="search" aria-label="Filter results"><span class="aria-only">@Translate.Text(DictionaryKeys.AccountSelector.Filter)</span></button>
</div>
<div id="m44-account-list">
    @foreach (var group in Model.PagedAccounts.GroupBy(acc => acc.BusinessPartnerNumber).OrderByDescending(group => group.Any(acc => acc.Primary)))
    {
        <div class="m44-bill-selector__partner">
            <div class="m44-bill-selector__partner-title">
                @Translate.Text("Business Partner"): @group.Key
                <strong>(@string.Format("{0}: {1}", Translate.Text("Accounts").ToLowerInvariant(), group.Count()))</strong>
            </div>

            <div class="m44-bill-selector__accounts-list">
                <div class="m44-bill-selector__checkbox-wrapper">
                    <div class="form-field form-field--toggles">
                        @foreach (var account in group)
                        {
                            var index = Model.ToList().IndexOf(account);
                            var groupIndex = group.ToList().IndexOf(account);
                            var additionalFieldCssClasses = (groupIndex < (group.Count() - 1)) ? string.Empty : "last";
                            var displayName = string.IsNullOrWhiteSpace(Model.Accounts[index].NickName) ? Model.Accounts[index].Name : Model.Accounts[index].NickName;

                            @Html.HiddenFor(m => m.Accounts[index].AccountNumber)
                            @Html.HiddenFor(m => m.Accounts[index].Active)
                            @Html.HiddenFor(m => m.Accounts[index].Balance)
                            @Html.HiddenFor(m => m.Accounts[index].BusinessPartnerNumber)

                            var indicatorClass = Model.Accounts[index].Active ? "active" : "inactive";
                            var indicatorText = Model.Accounts[index].Active ? "Active" : "Inactive";
                            var checkedAttr = Model.Accounts[index].Selected ? "checked" : string.Empty;

                            <div class="form-field__checkbox form-field__checkbox--billselector @additionalFieldCssClasses">
                                <label>
                                    <input data-account-number="@Model.Accounts[index].AccountNumber" data-active="@account.Active" data-balance="@account.Balance" data-business-partner-number="@account.BusinessPartnerNumber" class="form-field__input form-field__input--checkbox" id="@string.Format("Accounts_{0}__Selected", index)" name="@string.Format("Accounts[{0}].Selected", index)" type="checkbox" value="true" data-input="checkbox" @checkedAttr />
                                    <span class="form-field__fakecheckbox form-field__fakecheckbox--right focus-enabled">
                                        <span class="m44-bill-selector__account m44-bill-selector__account--select" data-acc-detail="wrapper" data-bill-amount="@account.Balance">
                                            @if (account.HasPhoto)
                                            {
                                                <img src="/images/ajax-loader_50x50.gif" data-src="/account_thumbs.ashx?id=@(account.AccountNumber)&aty=@((int)account.BillingClassification)" class="m44-bill-selector__image" alt="" role="presentation" data-acc-detail="acc_image">
                                            }
                                            <span class="m44-bill-selector__header">
                                                <span class="m44-bill-selector__name" data-acc-detail="acc_name">
                                                    <span class="inline-block" dir="ltr">@displayName</span>
                                                    @if (account.AccountClass == DEWAXP.Foundation.Integration.Enums.AccountClassification.Active ||
                account.AccountClass == DEWAXP.Foundation.Integration.Enums.AccountClassification.Inactive)
                                                    {
                                                        <span dir="@dir" class="m44-bill-selector__status m44-bill-selector__status--@indicatorClass">@Translate.Text(indicatorText)</span>
                                                    }
                                                </span>
                                                <span class="m44-bill-selector__details">
                                                    <abbr title="@Translate.Text("Account")">@Translate.Text("Acc")</abbr>: <span dir="@dir" data-acc-detail="acc_number">@account.AccountNumber</span>
                                                    <span class="aria-only"> | </span>
                                                </span>
                                                @if (!string.IsNullOrWhiteSpace(account.BillingClass) && account.BillingClass != "-")
                                                {
                                                    <span class="m44-bill-selector__details">
                                                        @Translate.Text("Type"): <span dir="@dir" data-acc-detail="acc_type">@account.BillingClass</span><span class="aria-only"> | </span>
                                                    </span>
                                                }
                                            </span>
                                        </span>
                                    </span>
                                </label>

                                <div class="m37-expander" data-component="m37-expander">
                                    <button data-toggle="true" class="m37-expander__trigger" data-numeric-format="0,0.00" data-currency="@Translate.Text("AED")">@account.Balance.ToString("0,0.00")</button>
                                    <div data-content="true" class="m37-expander__content" aria-expanded="false">
                                        <!-- m42-key-value--start -->
                                        <div class="m42-keyvalue">
                                            <dl>
                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text("Electricity")</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.ElectricityBill</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text("Water")</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.WaterBill</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text(DictionaryKeys.FeesAndCharges.Labels.SewerageFee)</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.SewerageFees</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text(DictionaryKeys.FeesAndCharges.Labels.HousingCharges)</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.HousingFees</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text("SL.DMCharges")</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.DMCharges</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text(DictionaryKeys.FeesAndCharges.Labels.CoolingCharges)</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.CoolingCharges</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>

                                                <dt dir="@dir" class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt">@Translate.Text(DictionaryKeys.FeesAndCharges.Labels.OtherCharges)</dt>
                                                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                                                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">@account.OtherCharges</span>
                                                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                                                </dd>
                                            </dl>
                                        </div>
                                        <!-- m42-key-value--end -->
                                        <div class="form-field__checkbox--pdf">
                                            <div class="form-field__checkbox--pdf">
                                                <a href="javasrcipt:void(0)" class="link link--pdf lnkdownload" data-vtype="ContractAccountNumber" data-vid="@account.AccountNumber" data-vpostUrl="@Url.Content("~/api/sitecore/bill/BillDownloads")" data-ctext="@Translate.Text("view bill pdf call to action text")">@Translate.Text("view bill pdf call to action text")</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div id="description-for-checkboxes_group1_multi" class="form-field__messages"></div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.PagedAccounts.PageCount > 1)
    {
        <div id="myPagerBill" class="centerpage">
            @Html.PagedListPager(
             Model.PagedAccounts,
             page => Url.Action(
                 "BillSelector",
                 new
                 {
                     page = page,
                     currentFilter = ViewBag.CurrentFilter,
                     contextid = ViewBag.contextid
                 }
             ),
             new PagedListRenderOptions
             {
                 LinkToFirstPageFormat = "|<",
                 LinkToPreviousPageFormat = "<",
                 LinkToNextPageFormat = ">",
                 LinkToLastPageFormat = ">|",
                 MaximumPageNumbersToDisplay = 3,
                 DisplayEllipsesWhenNotShowingAllPageNumbers = false
             }
         )
        </div>
    }
    <div class="m49-no-matches">
        @Translate.Text(DictionaryKeys.AccountSelector.NoMatchesFound)
    </div>
    <div class="m44-bill-selector__total">
        <!-- m42-key-value--start -->
        <div class="m42-keyvalue">
            <dl>
                <dt class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt m44-bill-selector--total-accounts-EN">
                    @Translate.Text("Total")
                    (<span class="m44-account-count">0</span><span> of @Model.Accounts.Count</span> <span class="m44-account-plural" data-plural="@Translate.Text(DictionaryKeys.AccountSelector.Accounts)" data-single="@Translate.Text(DictionaryKeys.AccountSelector.Account)">@Translate.Text(DictionaryKeys.AccountSelector.Accounts)</span> @Translate.Text(DictionaryKeys.AccountSelector.selected))
                </dt>
                <dt class="m42-keyvalue__key m42-keyvalue__key--secondary m42-keyvalue--justified-dt m44-bill-selector--total-accounts-AR">
                    @Translate.Text("Total amount Due") (@Translate.Text(DictionaryKeys.AccountSelector.selected) <span class="m44-account-count">0</span> @Translate.Text("m44.of") @Model.Accounts.Count() @Translate.Text(DictionaryKeys.AccountSelector.Accounts))
                </dt>
                <dd class="m42-keyvalue__value m42-keyvalue__value--secondary m42-keyvalue--justified-dd" data-acc-detail="">
                    <span class="m42-keyvalue__value--currency--amount" data-numeric-format="0,0.00">0.00</span>
                    <span class="m42-keyvalue__value--currency--suffix">@Translate.Text("AED")</span>
                </dd>

            </dl>
        </div>
        <!-- m42-key-value--end -->
    </div>
</div>

<script>
    var accounts = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Accounts.Select(x => new { x.AccountNumber, x.Balance, x.Active, x.BusinessPartnerNumber })))'); //don't delete it. this is assigned inside the docready for dewaGlobal.billAccountsList

    docReady(function () {
        dewaGlobal.billAccountsList = accounts; // this variable is used in static.js under /src/sublayouts/m44-bill-selector/m44-bill-selector control
        $('#m49-list-filter--input').off().on('keypress', function (e) {
            if (e.keyCode == 13) {
                search(true);
                return false;
            }
        });
        function search(force) {
            var existingString = $("#m49-list-filter--input").val();
            $.get('/api/sitecore/Account/BillSelector?contextid=' + '@ViewBag.contextid' + '&q=' + existingString, function (data) {
                $('#m44-bill-selector-list').html(data);
                $('.pager_update').click();
                resetexpander();
            });
        }

        function resetexpander() {
            var $components = $(document.body).find("[ data-component ]");
            $components.each(function (i, elem) {
                if (elem.className == "m37-expander") {
                    //console.log('hit');
                    var $component = $(this),
                        id = $component.data('component');

                    //Retrieves the id of the module from the 'component' data attribute and calls the relevant controller.
                    require(['../src/sublayouts/' + id + '/' + id], function (Component) {

                        var component;

                        if (Component !== undefined) {

                            component = new Component($component);
                            component.init();
                        }
                    });
                }
            });
        }
        jQuery('#search').off().on('click', function (e) {
            e.preventDefault();
            search(true);
            return false;
        });
        function clearFilter() {
            $.get('/api/sitecore/Account/BillSelector?contextid=' + '@ViewBag.contextid' + '&q=' + "", function (data) {
                $('#m44-bill-selector-list').html(data);
                $('.pager_update').click();
                resetexpander();
            });
        }
        jQuery('.m49-list-filter-reset-button').on('click', function () {
            $("#m49-list-filter--input").val('');

            clearFilter();

        });
        jQuery('#myPagerBill').on('click', 'a', function () {
            if (this.href != '' && this.href != null) {
                jQuery.ajax(this.href, {
                    beforeSend: function () {
                        window.attachSpinner('.m44-bill-selector-list-placeholder', { bgColor: '#fff', opacity: 0.6 });
                    },
                    complete: function () {
                        window.detachSpinner('.m44-bill-selector-list-placeholder');
                    },
                    method: 'GET',
                    cache: false,
                    success:function(result) {
                        $('#m44-bill-selector-list').html(result);
                        $('.pager_update').click();
                        resetexpander();
                    }
                });
            }
            return false;
        });

        if ('@isempty' == 'True') {
            jQuery('.m49-no-matches').show();
        }

        jQuery(".m37-expander__trigger").on("click", function () {
            event.preventDefault();
            var sbtn = jQuery(this).parent().find(".link--pdf");
            jQuery(sbtn).text(jQuery(sbtn).data("ctext"));
        })
    });

</script>

<script type="text/javascript">
    docReady(function () {
        jQuery('.m44-bill-selector__accounts-list')
            .find('.form-field__checkbox--billselector:gt(0)')
            .css({
                paddingTop: '18px'
            });


        jQuery(".lnkdownload").click(function () {
            $("#billdownloadfrom").prop("action", $(this).data("vposturl"))
            $('#billdownloadfrom').html("");
            $('#billdownloadfrom').append('<input type="hidden" name="type" value="' + $(this).data("vtype") + '"/>');
            $('#billdownloadfrom').append('<input type="hidden" name="id" value="' + $(this).data("vid") + '"/>');
            $('#billdownloadfrom').append('<input name="__RequestVerificationToken" type="hidden" value="' + $("form > input[name=__RequestVerificationToken]").val() + '">');
            $('#billdownloadfrom').submit();
            $('#billdownloadfrom').html('<input type="hidden" name="test" />');
            return false;
        })
    });
</script>
}