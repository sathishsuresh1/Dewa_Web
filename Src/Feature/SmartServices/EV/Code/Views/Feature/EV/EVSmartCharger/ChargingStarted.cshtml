@using DEWAXP.Foundation.Integration.Enums
@using DEWAXP.Foundation.Helpers
@using DEWAXP.Foundation.Content.Models.Bills
@using DEWAXP.Foundation.Content 
@using Sitecore.Globalization
@using Sitecore.Mvc
@model DEWAXP.Feature.EV.Models.EVSmartCharger.EVSmartCharger

@{
    var connectoricon = !string.IsNullOrWhiteSpace(Model.ChargerType) ? System.Text.RegularExpressions.Regex.Replace(Model.ChargerType, @"[^a-zA-Z]+", "").ToLower() : string.Empty;
    var direction = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "rtl" : "ltr";
}
@Html.Partial("~/Views/Feature/CommonComponents/Shared/_Loader.cshtml")
<div id="evchargerdiv">
    <div class="grid j152-ev-smart-charge" data-journey="j152-ev-smart-charge" style="height: auto;">
        <div class="j152-ev-smart-charge-wrapper">

            <div class="grid__row">
                <div class="grid__column grid__column--12 grid__column--form grid__column--centered">
                    @*<div class="icon icon-new-success-message">
                        </div>*@
                    <h3 class="text__page-title">@Translate.Text("EVSmart_StartChargingTitle")</h3>
                    <p class="text__content-copy--small align-center">@Translate.Text("EVSmart_StartChargingSubTitle")</p>
                    @if (!string.IsNullOrWhiteSpace(Model.Timer))
                    {
                        <div class="timer large" data-timer-ev="@Model.Timer">@Model.Timer</div>
                        <div id="timerclick" class="hidden"></div>
                    }

                </div>
            </div>

            @using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form j152-ev-smart-charge-form", @id = "EVChargingStartedForm", data_form = "true", data_parsley_focus = "none", @data_submit_validate = "enabled", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="m39-modal language-switch" data-component="m39-modal" id="successmodal">
                    <button data-trigger="true" class="m39-modal__trigger hidden" type="button" id="successmodal_trigger" aria-controls="successmodal_content">fdytdsyrstrstr</button>
                    <div data-content="true" class="m39-modal__container" role="dialog" aria-expanded="false" id="successmodal_content" aria-labelledby="successmodal_trigger">
                        <div class="m39-modal__dialog j152-ev-smart-charge-modal" style="max-height:180px;">
                            <div class="m39-modal__content">
                                <div class="m14-richtext" style="margin:6px 0;">
                                    <p><strong>@Translate.Text("EVSmart_Stop_Charging")</strong></p>
                                    <p class="mt0">@string.Format(Translate.Text("Are you sure you want to stop charging"), Model.ChargerID, Model.Connector)</p>
                                </div>
                                <div class="grid__row mb0">
                                    <div class="button m39-m12-no">@Translate.Text("Cancel")</div>
                                    <a id="m39-m12-yesApprove" class="button button--primary m39-m12-yesApprove">@Translate.Text("Stop")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m39-modal__overlay"> </div>
                </div>
                <div class="grid__row">
                    <div class="grid__column grid__column--12 grid__column--form">
                        <div class="charge-box charge-details">
                            <div class="title"><strong>@Translate.Text("EVSmart_Charger_Details")</strong></div>
                            <div class="cd-item item-icon location fw">
                                <div class="cd-item-title icon-location">@Translate.Text("EVSmart.Charger location")</div>
                                <div class="cd-item-value">@Model.ChargerLocation</div>
                            </div>
                            <div class="cd-item item-icon location fw">
                                <div class="cd-item-title icon-EV-Charge">@Translate.Text("EVSmart.Charger ID")</div>
                                <div class="cd-item-value">@Model.ChargerID</div>
                            </div>
                            <div class="cd-item item-icon location fw">
                                <div class="cd-item-title icon-b-charge">@Translate.Text("EVSmart.Charger Type")</div>
                                <div class="cd-item-value"><strong class="cd-item-value-large color blue">@Model.ChargerType</strong></div>
                            </div>

                            <div class="cd-item item-icon location fw p0">
                                @if (!string.IsNullOrWhiteSpace(connectoricon) && !connectoricon.Equals("na"))
                                {
                                    <img class="cd-item-img" src="/images/EVSmart/@(connectoricon).png" />
                                }
                                <div class="cd-subitem">
                                    <div class="cd-item-title">@Translate.Text("EVSmart.Connector")</div>
                                    <div class="cd-item-value"><strong class="cd-item-value-large padding p-r-10">@Model.Connector</strong></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="grid__row">
                    <div class="grid__column grid__column--12 grid__column--form">
                        <div class="form-field__button form-field__button-full">
                            <a id="StopChargingbutton" class="button button--septenary">@Translate.Text("EVSmart_Stop_Charging")</a>
                        </div>
                        <div class="form-field__button m14-richtext">@Html.Raw(@Translate.Text("EV_HelpText"))</div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(Model.Timer))
{
    <script type="text/javascript">
        docReady(function () {
            setTimeout(function () {
                jQuery('.j152-ev-smart-charge').trigger('evtimer');
            }, 300);
        });
    </script>
}
<script type="text/javascript">
        var count, total = 20;
        docReady(function () {
            jQuery('#StopChargingbutton').on('click', function () {
                setTimeout(jQuery('#successmodal').find('.m39-modal__trigger').trigger('click'), 100);
            });
            $("#m39-m12-yesApprove").click(function () {
                event.preventDefault();
                event.stopPropagation();
                StopCharging();
            });
            $("#timerclick").click(function () {
                StopCharging();
            });
        });

        function StopCharging() {
            var url = "/api/Sitecore/EVSmartCharger/StopEVCharging";
            jQuery.ajax({
                type: 'POST',
                url: url,
                //traditional: true,
                data: AddForgeryToken({}, "EVChargingStartedForm"),
                beforeSend: function () {
                    beforesendfnc();
                },
                complete: function (response) {
                    completefunc();
                    if (typeof response == "object") {
                        if (response != null && response != undefined && response.responseJSON != undefined) {
                            if (response.responseJSON.status) {
                            }
                            else if (response.responseJSON.Redirect) {
                                window.location.href = response.RedirectUrl;
                            }
                            else if(response.responseJSON.wait) {
                        window.location.href = '@LinkHelper.GetItemUrl(SitecoreItemIdentifiers.EVGREEN_PAYMENT_CONFIRMATION_PAGE)';
                            }
                            else {
                                jQuery("#successmodal").find("a[data-close='true']").click();
                            }
                        }
                    }
                },
                success: function (response) {
                    if (typeof response == "object") {

                    }
                    else {
                        window.initComponents('rs_area');
                        jQuery(".m39-m12-no").trigger('click');
                        jQuery("#evchargerdiv").html(response);
                        jQuery(window).trigger('numericCurrencyTrigger');
                    }
                },
                error: function () {
                }
            });
            return false;
        }
</script>
