@using Sitecore.Globalization
@using Sitecore.Mvc
@using DEWAXP.Foundation.Helpers
@using DEWAXP.Feature.EV.Models.EVCharger
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.EV.Models.EVCharger.EVAccountSetup

@{
    var direction = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "ltr" : "rtl";
    var isreadonly = Model.processtFlag == "R" ? true : false;


    if (string.IsNullOrWhiteSpace(Model.CarDetailJs))
    {
        Model.CarDetailJs = "[]";
    }

    string isCata = (Model.CarDetailJs == "[]" ? "false" : "true");

    var loginUrl = LinkHelper.GetItemUrl(SitecoreItemIdentifiers.J7_LOGIN_PAGE);
    string redirectUrl = string.Format(loginUrl + "?returnUrl={0}", HttpUtility.UrlEncode(LinkHelper.GetItemUrl(SitecoreItemIdentifiers.EV_IndividualApplyCard) + "?at=3"));

}
<div class="j105-drrg">
    <div class="m66-preloader j105-drrg--loader hidden">
        <div class="grid">
            <div class="grid__row">
                <div class="grid__column grid__column--12">
                    <h2 class="text__section-subtitle">@Translate.Text("J100.Pleasewait")</h2>
                    <div class="loader"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Sitecore().Placeholder("j100/m26-page-title")
<div class="grid__row">
    <div class="grid__column grid__column--12 grid__column--form">
        @Html.Sitecore().Placeholder("j100/m14-formatted-text")
        <div class="m38-step-tracker" data-component="m38-step-tracker" data-total-steps="4" data-current-step="1">
            <div class="m38-step-tracker__progressbar" data-m38-progressbar="true" role="progressbar" aria-valuetext="EV Login Card">
            </div>
        </div>
        @Html.Partial("~/Views/Feature/CommonComponents/Shared/_SubmissionError.cshtml")
    </div>
</div>

<div class="grid__row j109-ev-charger" data-journey="j109-ev-charger">
    <div class="grid__column grid__column--12 grid__column--form j104_1-move-out" id="evBPAccountSetup">

        @using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form update-details-form", @id = "applyEVCardForm", data_form = "true", data_parsley_focus = "none", @data_submit_validate = "enabled", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <input type="hidden" id="RegistrationStage" name="RegistrationStage" value="@Model.RegistrationStage" />
            <input type="hidden" value="@Model.AccountType" id="hdnAccountType" />
            <input type="hidden" value="@Model.processtFlag" id="processtFlag" name="processtFlag" />
            @Html.HiddenFor(x => x.CarDetailJs)

            <div class="grid__row">
                <div class="grid__column grid__column--12 grid__column--form grid__column--centered">
                    <div class="form-field j109-ev-charger-radiobuttons">
                        <fieldset class="fieldset">
                            <legend class="legend-color">.</legend>
                            <p class="form-field__radio">
                                <label>
                                    @Html.RadioButtonFor(m => m.AccountType, (int)AccountType.Personal, new
                               {
                                   @class = "form-field__input form-field__input--radio",
                                   @aria_describedby = "description-for-radio_1_1",
                                   @id = "rdbPersonal",

                               }.AddHtmlAttrItem("disabled","",isreadonly&&Model.AccountType!="1"))
                                    <span class="form-field__fakeradio focus-enabled">
                                        <span class="verification--key">@Translate.Text("EV.Personal Account")</span>
                                    </span>
                                </label>
                            </p>
                            <p class="form-field__radio">
                                <label>
                                    @Html.RadioButtonFor(m => m.AccountType, (int)AccountType.Business, new
                               {
                                   @class = "form-field__input form-field__input--radio",
                                   @aria_describedby = "description-for-radio_1_2",
                                   @id = "rdbBusiness",
                               }.AddHtmlAttrItem("disabled", "", isreadonly && Model.AccountType != "2"))
                                    <span class="form-field__fakeradio focus-enabled">
                                        <span class="verification--key">@Translate.Text("EV.Business Account")</span>
                                    </span>
                                </label>
                            </p>
                            <p class="form-field__radio">
                                <label>
                                    @Html.RadioButtonFor(m => m.AccountType, (int)AccountType.Government, new
                               {
                                   @class = "form-field__input form-field__input--radio",
                                   @aria_describedby = "description-for-radio_1_2",
                                   @id = "rdbGovernment",
                                   @name = "accounttype"
                               }.AddHtmlAttrItem("disabled", "", isreadonly && Model.AccountType != "3"))
                                    <span class="form-field__fakeradio focus-enabled">
                                        <span class="verification--key">@Translate.Text("EV.Government Account")</span>
                                    </span>
                                </label>
                            </p>
                            <div id="description-for-pwl28lhdv" class="form-field__messages"></div>
                        </fieldset>
                    </div>
                </div>
            </div>
            <div class="form-field form-field--select form-field--select-single">
                <label for="form-field-carregisteredin" class="form-field__label">@Translate.Text("EV Where Your Car Registered")</label>
                <span class="form-field__input-wrapper form-field__input-wrapper--select">
                    <select class="form-field__input form-field__input--select form-field__input--select-full " id="form-field-carregisteredin" @(isreadonly ? "disabled" : "") name="CarRegisteredIn" aria-describedby="description-for-carregisteredin" data-parsley-errors-container="#description-for-carregisteredin" data-parsley-trigger="change" data-parsley-id="28">

                        <option value="1" @(string.IsNullOrEmpty(Model.CarRegisteredIn) ? "selected=\"selected\"" : "")>@Translate.Text("EV In UAE")</option>
                        <option value="2" @(!string.IsNullOrEmpty(Model.CarRegisteredIn) && Model.CarRegisteredIn == "2" ? "selected=\"selected\"" : "")>@Translate.Text("EV Outside UAE")</option>
                    </select>
                </span>

                <div id="description-for-carregisteredin" class="form-field__messages">
                    <p class="form-field__description"></p>
                </div>
            </div>
            <div class="form-field form-field--select form-field--select-single">
                <label for="form-field-w1mfbetd3" class="form-field__label">
                    <span id="spEmirate"> @Translate.Text("EV Choose Emirate")</span>
                    <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                </label>
                <span class="form-field__input-wrapper form-field__input-wrapper--select">
                    @Html.DropDownListFor(model => model.EmirateOrCountry, Model.Emirates, Translate.Text("EV Select Emirate"), new
               {
                   @class = "form-field__input form-field__input--select form-field__input--select-full",
                   @id = "form-field-w1mfbetd3",
                   @required = "required",
                   @data_parsley_required_message = Translate.Text("EV Select Emirate"),
                   @data_parsley_errors_container = "#description-for-w1mfbetd3",
                   @aria_describedby = "description-for-w1mfbetd3",
                   @data_postedvalue = Model.EmirateOrCountry
               }.AddHtmlAttrItem("disabled", "", isreadonly))

                </span>
                <div id="description-for-w1mfbetd3" class="form-field__messages">
                    @Html.ValidationMessageFor(x => x.EmirateOrCountry, "", new { @class = "parsley-errors-list" })
                </div>
            </div>
            <div class="form-field form-field--text relative" id="dvTCNumber">
                <label for="form-field-tcnumber" class="form-field__label @(isreadonly?"form-field__label--readonly":"")">
                    @Translate.Text("EV.TCNumber")
                    <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                </label>
                <span class="form-field__input-wrapper @(isreadonly?"form-field__input-wrapper--readonly":"")">
                    <input class="form-field__input @(isreadonly?"form-field__input--readonly":"form-field__input--text")"
                           id="form-field-tcnumber"
                           name="TrafficCodeNumber"
                           type="text"
                           data-parsley-type="digits"
                           aria-describedby="description-for-sfeyvp6v7"
                           data-parsley-errors-container="#description-for-sfeyvp6v7"
                           required="required" maxlength="15"
                           data-parsley-maxlength="15"
                           data-parsley-error-message="@Translate.Text("EV.errorMessage_TCNumber")"
                           data-parsley-trigger="focusout"
                           data-parsley-id="20" value="@Model.TrafficCodeNumber" @(isreadonly ? "readonly" : "")
                           data-postedvalue="@Model.TrafficCodeNumber"
                           placeholder="@Translate.Text("EV.TCNumber")"
                           onkeyup="this.value=removeSpaces(this.value);">
                </span>
                <div id="description-for-sfeyvp6v7" class="form-field__messages">

                    @*<p class="form-field__description">@Translate.Text("EV How to find TC Number")</p>*@
                </div>

                <div class="onlyBussiness">
                    <div class="form-field form-field--text">
                        <label for="form-field-0jcgbrpgj" class="form-field__label">hidden</label>


                        <span class="form-field__input-wrapper">
                            <input class="form-field__input form-field__input--text"
                                   id="form-field-0jcgbrpgj"
                                   name="hidden"
                                   type="text"
                                   placeholder="hidden"
                                   aria-describedby="description-for-0jcgbrpgj"
                                   data-parsley-errors-container="#description-for-0jcgbrpgj" />
                        </span>

                        <a class="button button--text add-plate-btn green" data-recall="@Html.Raw(isCata)" data-table='@Html.Raw(Model.CarDetailJs)' data-message="@Translate.Text("EV.Maximum20")"
                                        data-max="20">@Translate.Text("Ev Add Plate No Text")</a>
                        <div id="description-for-0jcgbrpgj" class="form-field__messages">
                        </div>
                    </div>
                    @*<input type="hidden" value="@Model.CarPlateNumberList" name="CarPlateNumberList" id="CarPlateNumberList" />*@
                    @Html.HiddenFor(m => m.CarPlateNumberList)
                    @Html.HiddenFor(m => m.CarPlateCodeList)
                    @Html.HiddenFor(m => m.CarCategoryList)

                </div>
            </div>





            <div class="onlyIndividual">

                <div class="form-field form-field--select form-field--select-single onlydxb">
                    <label for="form-field-categorycode" class="form-field__label">
                        <span>  @Translate.Text("EV.Category Code")</span>
                        <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                    </label>
                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                        @Html.DropDownListFor(model => model.CategoryCode,(List<SelectListItem>) ViewBag.Categories, Translate.Text("EV Select categorycode"), new
                   {
                       @class = "form-field__input form-field__input--select form-field__input--select-full",
                       @id = "form-field-categorycode",
                       @required = "required",
                       @data_parsley_required_message = @Translate.Text("EVcategorycodeErrorMessage"),
                       @data_parsley_errors_container = "#description-for-categorycode",
                       @aria_describedby = "description-for-categorycode",
                       @data_postedvalue = Model.CategoryCode
                   }.AddHtmlAttrItem("disabled", "", isreadonly))

                    </span>
                    <div id="description-for-categorycode" class="form-field__messages">
                        @Html.ValidationMessageFor(x => x.CategoryCode, "", new { @class = "parsley-errors-list" })
                    </div>
                </div>

                <div class="form-field form-field--select form-field--select-single onlydxb">
                    <label for="form-field-platecode" class="form-field__label">
                        <span>  @Translate.Text("EV.Plate Code")</span>
                        <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                    </label>
                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                        @Html.DropDownListFor(model => model.PlateCode, (List<SelectListItem>)ViewBag.PlateCodes, Translate.Text("EV Select PlateCode"), new
                   {
                       @class = "form-field__input form-field__input--select form-field__input--select-full",
                       @id = "form-field-platecode",
                       @required = "required",
                       @data_parsley_required_message = @Translate.Text("EVplatecodeErrorMessage"),
                       @data_parsley_errors_container = "#description-for-platecode",
                       @aria_describedby = "description-for-platecode",
                       @data_postedvalue = Model.PlateCode
                   }.AddHtmlAttrItem("disabled", "", isreadonly))

                    </span>
                    <div id="description-for-platecode" class="form-field__messages">
                        @Html.ValidationMessageFor(x => x.PlateCode, "", new { @class = "parsley-errors-list" })
                    </div>
                </div>


                <div class="form-field form-field--text" id="dvCarPlateNo">
                    <label for="form-field-platenumber" class="form-field__label @(isreadonly?"form-field__label--readonly":"")">
                        @Translate.Text("EV.Car Plate Number")
                        <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                    </label>
                    <span class="form-field__input-wrapper @(isreadonly?"form-field__input-wrapper--readonly":"")">
                        <input class="form-field__input ct_platenumber @(isreadonly?"form-field__input--readonly":"form-field__input--text")"
                               id="form-field-platenumber"
                               name="CarPlateNumber"
                               data-parsley-type="number"
                               type="text" aria-describedby="description-for-sfeyvp6v99"
                               data-parsley-errors-container="#description-for-sfeyvp6v99"
                               required="required" maxlength="20" data-parsley-maxlength="20"
                               data-parsley-error-message="@Translate.Text("EV.errorMessage_PlateNumber")"
                               data-parsley-trigger="focusout"
                               data-parsley-id="20" value="@Model.CarPlateNumber" @(isreadonly ? "readonly" : "")
                               placeholder="@Translate.Text("EV.Car Plate Number")"
                               data-postedvalue="@Model.CarPlateNumber"
                               onkeyup="this.value=removeSpaces(this.value);">
                    </span>
                    <div id="description-for-sfeyvp6v99" class="form-field__messages">
                    </div>
                </div>
            </div>




            <fieldset class="fieldset" id="divIdDocument" style="display:none;">


                <legend class="legend" id="legendDocument">@Translate.Text("EV.Vehicle Registration Card")</legend>
                <div class="form-field form-field--upload">
                    <div class="form-field__input-wrapper">
                        <div class="form-field__preview-wrapper">
                            <img src="/images/preview@2x.png" data-src="/images/preview@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="AttachedDocument">
                        </div>
                        <div class="form-field__uploader-details">
                            <div>
                                <label>
                                    @Html.TextBoxFor(m => m.AttachedDocument,
                                new
                                {
                                    type = "file",
                                    @class = "form-field__input form-field__input--upload",
                                    @id = "form-field-AttachedDocument",
                                    @name = @Translate.Text("upload"),
                                    @aria_describedby = "description-for-AttachedDocument",
                                    @required = "",
                                    @data_parsley_error_message = @Translate.Text("EV Vehicle Registration Card File Error Message"),
                                    @data_parsley_required_message = @Translate.Text("EV Vehicle Registration Card File Error Message"),
                                    @data_parsley_errors_container = "#errors-for-AttachedDocument",
                                    @data_uploader_field = "AttachedDocument",
                                    @accept = "image/png,image/x-png,image/jpeg,image/jpg,image/bmp,image/gif,application/pdf",
                                    @data_parsley_id = "16",
                                    @data_size = "2048000"
                                })

                                    <span class="button button--primary button--next button--small focus-enabled">@Translate.Text("Choose")</span>
                                </label>
                            </div>
                            <p class="form-field__input--upload-filename" data-uploader-filename="AttachedDocument"></p>
                            <p>
                                <button class="button button--text button--remove hidden" data-uploader-remove="AttachedDocument">@Translate.Text("Remove")</button>
                            </p>
                        </div>
                    </div>
                    <div id="description-for-AttachedDocument" class="form-field__messages">
                        <div id="errors-for-AttachedDocument">
                            @Html.ValidationMessageFor(x => x.AttachedDocument, "", new { @class = "parsley-errors-list" })
                        </div>
                        <p class="form-field__description">@Translate.Text(DictionaryKeys.EVCard.EVMaxFileSize)</p>
                    </div>
                </div>
            </fieldset>
            <div class="form-field__button">
                <button type="submit" class="button button--primary button--next" data-submission-text="@Translate.Text("Submitting")...">@Translate.Text("Continue")</button>
            </div>
        }

        <div class="grid__row">
            <div class="grid__column grid__column--12">
                <div class="m39-modal m39-modal--new" data-component="m39-modal" id="modal_true">
                    <button data-trigger="true" class="m39-modal__trigger j109-ev-charger-model__trigger" type="button" id="_rtnn76ncb_trigger" aria-controls="_rtnn76ncb_content"></button>
                    <div data-content="true" class="m39-modal__container" role="dialog" aria-expanded="false" id="_rtnn76ncb_content" aria-labelledby="_rtnn76ncb_trigger">
                        <div class="m39-modal__dialog">
                            <div class="m39-modal__header">
                                <div class="m39-modal__title">@Translate.Text("EV.Add Car Details")</div>
                                <div class="m39-modal__subtitle mt0">@Translate.Text("EV Add Car Details Subtitle")</div>
                                <button data-close="true" class="m39-modal__button--close" id="_rtnn76ncb_close" aria-controls="_rtnn76ncb_content">@Translate.Text("EV Close")</button>
                            </div>

                            <div class="m39-modal__content add-plate-form" style="bottom:5px;">
                                <div class="grid__column--content" style="text-align:initial">
                                    <form class="form" data-form="true" novalidate="">

                                        <div class="ModalCtrlHolder" style="padding-bottom: 14px;">
                                            <div class="form-field form-field--select form-field--select-single">
                                                <label for="form-field-categorycodelist" class="form-field__label"> @Translate.Text("EV.Category Code") <span class="form-field__label-required aria-only">@Translate.Text("required")</span></label>
                                                <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                                    @Html.DropDownListFor(model => model.CategoryCode,(List<SelectListItem>) ViewBag.Categories, Translate.Text("EV Select categorycode"), new
                                               {
                                                   @class = "form-field__input form-field__input--select form-field__input--select-full table__input",
                                                   @id = "form-field-categorycodelist",
                                                   @name= "form-field-categorycodelist",
                                                   @required = "required",
                                                   @data_title = Translate.Text("EV.Category Code"),
                                                   @data_title_pos = "2",
                                                   @data_delabel = "category",
                                                   @data_parsley_required_message = Translate.Text("EVcategorycodeErrorMessage"),
                                                   @data_parsley_errors_container = "#description-for-categorycodelist",
                                                   @aria_describedby = "description-for-categorycodelist",
                                               }.AddHtmlAttrItem("disabled", "", isreadonly))
                                                </span>
                                                <div id="description-for-categorycodelist" class="form-field__messages"></div>
                                            </div>
                                            <div class="form-field form-field--select form-field--select-single">
                                                <label for="form-field-platecodeList" class="form-field__label"> @Translate.Text("EV.Plate Code") <span class="form-field__label-required aria-only">@Translate.Text("required")</span></label>
                                                <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                                    @Html.DropDownListFor(model => model.PlateCode, (List<SelectListItem>)ViewBag.PlateCodes, Translate.Text("EV Select PlateCode"), new
                                               {
                                                   @class = "form-field__input form-field__input--select form-field__input--select-full table__input ",
                                                   @id = "form-field-platecodeList",
                                                   @name = "form-field-platecodeList",
                                                   @required = "required",
                                                   @data_title = Translate.Text("EV.Plate Code"),
                                                   @data_title_pos = "3",
                                                   @data_delabel = "code",
                                                   @data_parsley_required_message = Translate.Text("EVplatecodeErrorMessage"),
                                                   @data_parsley_errors_container = "#description-for-platecodeList",
                                                   @aria_describedby = "description-for-platecode",
                                               }.AddHtmlAttrItem("disabled", "", isreadonly))
                                                </span>
                                                <div id="description-for-platecodeList" class="form-field__messages"></div>
                                            </div>
                                        </div>
                                        <div class="form-field form-field--text ">
                                            <label for="form-field-ojr7nwcgo" class="form-field__label">
                                                @Translate.Text("EV.Car Plate Number")
                                                <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                                            </label><span class="form-field__input-wrapper ">

                                                <input class="form-field__input table__input ct_platenumber @(isreadonly?"form-field__input--readonly":"form-field__input--text")"
                                                       id="form-field-CarPlateNumberList"
                                                       name="modal-CarPlateNumberList"
                                                       data-title=" @Translate.Text("EV.Car Plate Number")"
                                                       data-title-pos="1"
                                                       data-parsley-type="number"
                                                       data-delabel="platenum"
                                                       type="text" aria-describedby="description-for-CarPlateNumberList"
                                                       data-parsley-errors-container="#description-for-CarPlateNumberList"
                                                       required="required" maxlength="20" data-parsley-maxlength="20"
                                                       data-parsley-error-message="@Translate.Text("EV.errorMessage_PlateNumber")"
                                                       data-parsley-trigger="focusout"
                                                       data-parsley-id="20" value="@Model.CarPlateNumber" @(isreadonly ? "readonly" : "")
                                                       placeholder="@Translate.Text("EV.Car Plate Number")"
                                                       onkeyup="this.value=removeSpaces(this.value);">
                                            </span>
                                            <div class="form-field__messages re-error" style="display:none;color:#B00020;">@Translate.Text("Ev_PlateNo_Exit_Message")</div>
                                            <div id="description-for-CarPlateNumberList" class="form-field__messages">
                                            </div>
                                        </div>

                                        <div class="j109-ev-charger-action" data-title="@Translate.Text("EV Action")">
                                            <span class="j109-ev-charger-actionBtn"><a class="button button--text edit">@Translate.Text("EV.Edit")</a></span>
                                            <span class="j109-ev-charger-actionBtn"><a class="button button--text delete">@Translate.Text("EV.Delete")</a></span>
                                        </div>
                                    </form>
                                </div>
                                <button class="button button--primary button--next add-plate-done"
                                        >
                                    @Translate.Text("EV.Add")
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="m39-modal__overlay"> </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script type="text/javascript">
    var emrt = '#form-field-w1mfbetd3';
    var loc = '#form-field-carregisteredin';
    var att_div = '#divIdDocument';
    var tcn_div = '#dvTCNumber';
    var acc_type = 'input[type="radio"][name="AccountType"]';
    var cpn_div = "#dvCarPlateNo";
    var onlydxb = ".onlydxb";
    var catCode = "#form-field-categorycode";
    var onlyIndividual = ".onlyIndividual";
    var onlyBussiness = ".onlyBussiness";
    var firstLoad = true;
    docReady(function () {


        AccTypeChange($(acc_type+":checked").val());



        var selectedloc = $(loc).val();
        if (selectedloc === "1") { $(tcn_div).val('').show(); }
        else {
            $(tcn_div).hide();
            var childSelect = $(emrt);
            if (selectedloc!=null && selectedloc.trim() === '') return;
            populateChild(selectedloc, childSelect, '@Url.Action("GetCountries")');

        }


        $(acc_type).change(function () {
            $(".error-html").remove();
            jQuery(".j109-ev-charger-actionBtn .delete").click();
            AccTypeChange($(acc_type + ':checked').val());
        });

        $(loc).change(function () {
            LocOnChange();
        });


        $(emrt).change(function () {
            OnEmrtChange();
        });

        $("#form-field-categorycode").change(function () {

            GetPlateCode($(this).val(), "#form-field-platecode");
        })
        $("#form-field-categorycodelist").change(function () {

        GetPlateCode($(this).val(), "#form-field-platecodeList");
        })
        require(['parsley'], function () {
            jQuery("#applyEVCardForm").submit(function (e) {
                //debugger;
                e.preventDefault();
                UpdateFromValByAccType($(acc_type+":checked").val())
                //appending json for managing data.
                $("#CarDetailJs").val(JSON.stringify(CreateJsonFromTable()));

                var isValid = jQuery(this).parsley().isValid();
                if (isValid) {
                    $(loc).prop("disabled", false);
                    $(emrt).prop("disabled", false);
                    $(this).submit();
                }
                return isValid;
            });
        });

        $(".add-plate-btn").click(function () {
           $(".table__input").val("");
        })
    /* Update From Val By AccType */
    function UpdateFromValByAccType(accType)
    {

        if(accType!="1")
        {
            $("#CarPlateNumberList").val(GetCVSDataByCtrl(".platenum"));
            $("#CarPlateCodeList").val(GetCVSDataByCtrl(".code"));
            $("#CarCategoryList").val(GetCVSDataByCtrl(".category"));
        }
        }





    function GetCVSDataByCtrl(el)
    {
            var d= [];
        $(el).each(function (i, obj) {
            d.push($(obj).data("value"));
            });
            return  d.join(",");
    }


        /**/

        //setTimeout(function () {
        //    if ($(emrt).val() === "DXB") {
        //        $(att_div).hide();

        //    } else {
        //        $(att_div).val('').show();

        //    }
        //}, 500)

    });
    function LocOnChange() {
            //debugger;
            var selectedVal = $(loc).val();

            var childSelect = $(emrt);
            if (selectedVal.trim() === '') return;
            populateChild(selectedVal, childSelect, '@Url.Action("GetCountries")');

        if (selectedVal === "1") {
            $(att_div).hide();
            $(tcn_div).val('').show();
            $("#form-field-tcnumber").prop("required", "required");
        }
        else {
            $("#form-field-tcnumber").removeProp("required")
            $(tcn_div).hide();
        }
    }

    function OnEmrtChange() {
        var selVal = $(emrt).val();
        //console.log(selVal);

        $(".ct_platenumber").attr("data-parsley-type","alphanum");
        if (selVal === "DXB") {
            $(att_div).hide();
            $(onlydxb).show();
            //$("#form-field-tcnumber").prop("required", "required")
            $(".ModalCtrlHolder ").show();
            $(".ModalCtrlHolder select").addClass("table__input");
            $(".ct_platenumber").attr("data-parsley-type", "number");
        } else {
            $(att_div).val('').show();
            $(onlydxb).hide();
            //$("#form-field-tcnumber").removeProp("required")
            $(".ModalCtrlHolder ").hide();
            $(".ModalCtrlHolder select").removeClass("table__input");
        }
        if (!firstLoad) {
            jQuery(".j109-ev-charger-actionBtn .delete").click();

        }

    }


    function AccTypeChange(v) {
        //console.log(v);

        $("#form-field-tcnumber").val("");
        $("#form-field-platenumber").val("");
        $("#form-field-categorycode").val("");
        $("#form-field-platecode").val("");

        if (v === "1") {
            //$(loc).prop("disabled", false);
            $("#dvCarPlates").hide();
            //$(cpn_div).val('').show();
            $("#form-field-carregisteredin").attr("disabled", false)
            $(onlyIndividual).show();
            $(onlyBussiness).hide()
        } else if (v === "2") {
            //$(cpn_div).hide();
            $("#dvCarPlates").show();
            $("#form-field-carregisteredin").val(1)
            $("#form-field-carregisteredin").attr("disabled", true)

            $(onlyIndividual).hide();
            $(onlyBussiness).show();
        } else if (v === "3") {
            window.location.href = '@(redirectUrl)';
            return false;
        }

        LocOnChange();
        OnEmrtChange();
    }

    function populateChild(selectedVal, childSelect, url) {
        childSelect.empty();
        if (selectedVal != null && selectedVal != '') {
            var deflt = "";
            if (selectedVal === "1") {
                deflt = "@Translate.Text("EV Select Emirate")";
                $("#spEmirate").html("@Translate.Text("EV Choose Emirate")");
                childSelect.attr("data-parsley-required-message", "@Translate.Text("EV Select Emirate")");
            } else {
                deflt = "@Translate.Text("EV Select Country")";
                $("#spEmirate").html("@Translate.Text("EV Choose Country")");
                childSelect.attr("data-parsley-required-message", "@Translate.Text("EV Select Country")");
            }
            jQuery.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                cache: false,
                data: AddForgeryToken({
                    emid: selectedVal
                }, "applyEVCardForm"),
                beforeSend: function () {
                    jQuery('.j105-drrg--loader').show();
                    jQuery('.j105-drrg--loader').css('top', $(window).scrollTop());
                    $('body').removeClass('unscrollable').addClass('unscrollable');
                   
                },              
                success: function (retList) {
                    if (retList != null && !jQuery.isEmptyObject(retList)) {
                        childSelect.append($('<option/>', {
                            value: "",
                            text: deflt
                        }));
                        $.each(retList, function (index, itm) {
                            childSelect.append($('<option/>', {
                                value: itm.Value,
                                text: itm.Text
                            }));
                        });
                        if (selectedVal === "1") { $(childSelect).val("DXB"); }
                        else { $(childSelect).val("@Model.EmirateOrCountry"); }

                        jQuery('.j105-drrg--loader').hide();
                        $('body').removeClass('unscrollable');

                    };

                    OnEmrtChange();
                },
                complete: function () {
                    jQuery('.j105-drrg--loader').hide();
                    $('body').removeClass('unscrollable');
                },
                error: function (jqXHR, exception) {
                    jQuery('.j105-drrg--loader').hide();
                    $('body').removeClass('unscrollable');
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }

                }
            });

            @*$.getJSON(url, { emid: selectedVal }, function (retList) {
                if (retList != null && !jQuery.isEmptyObject(retList)) {
                    childSelect.append($('<option/>', {
                        value: "",
                        text: deflt
                    }));
                    $.each(retList, function (index, itm) {
                        childSelect.append($('<option/>', {
                            value: itm.Value,
                            text: itm.Text
                        }));
                    });
                    if (selectedVal === "1") { $(childSelect).val("DXB"); }
                    else { $(childSelect).val("@Model.EmirateOrCountry");}
                };
            });*@
        }
    }


    function GetPlateCode(catCode,el) {
        $.ajax({
            url: '@Url.Action("GetCatOrCodeDetail")',
            type: 'POST',
            dataType: 'json',
            cache: false,
            data: AddForgeryToken({
                catCode: catCode, isPlateCode:true, region : "DXB"
            }, "applyEVCardForm"),
            success: function (data) {
                $(el).html("");
                $(el).append('<option value="">@Translate.Text("EV Select PlateCode")</option>');
                $.each(data, function (index, d) {
                    $(el).append('<option value="' + d.Value + '">' + d.Text + '</option>');
                });
                setTimeout(function (el) {
                    SetPostedValtoElement(el);
                }, 100)


                //console.log(data);
            }
        });
    }

    function CreateJsonFromTable() {
        var arrayList = [];
        $.each($(".m23-table__content-table-row"), function (i, tr) {

            if ($(tr).find(".platenum").length > 0) {
                var row = [];
                $.each($(tr).find("td"), function (i, td) {

                    if ($(td).find(".j109-ev-charger-actionBtn").length <= 0) {
                        var td = {
                            "label": $(td).data("label"),
                            "delabel": $(td).data("delabel"),
                            "value": $(td).data("value"),
                            "text": $(td).text()
                        };
                        row.push(td);
                    }

                });

                arrayList.push(row);

            }
        });


        return arrayList;
    }


    setTimeout(function () {
        SetPostedValtoElement(emrt);
        OnEmrtChange();
        SetPostedValtoElement("#form-field-tcnumber");
        SetPostedValtoElement("#form-field-platenumber");
        SetPostedValtoElement("#form-field-categorycode");
        setTimeout(function (el) {
               SetPostedValtoElement("#form-field-platecode");
        }, 100)
        firstLoad = false;
    }, 500);


    function SetPostedValtoElement(el) {
        if (el != undefined && $(el).length >0 && $(el)[0].hasAttribute("data-postedvalue")) {
            $(el).val($(el).data("postedvalue"));
            $(el).removeAttr("data-postedvalue");
        }
    }

    function removeSpaces(string) {
        return string.split(' ').join('');
    }

    </script>

    @*<script type="text/javascript">
            docReady(function () {
                var $referencelist = jQuery('#CarPlateNumberList');
                setTimeout(function () {
                    jQuery('.j109-ev-charger__add-contact').on('click', function () {
                        var referencelist = [];
                        jQuery('.m23-table__content-table tbody>tr').each(function () {
                            if (jQuery(this).find(".j109-ev-charger__reference-name").html() != null) {
                                referencelist.push(jQuery(this).find(".j109-ev-charger__reference-name").html().trim());
                            }
                        });
                        $referencelist.val(referencelist.join(","));

                    });
                    jQuery('.j109-ev-charger--delete-yes').on('click', function () {
                        setTimeout(function () {
                            var referencelist = [];
                            jQuery('.m23-table__content-table tbody>tr').each(function () {
                                if (jQuery(this).find(".j109-ev-charger__reference-name").html() != null) {
                                    referencelist.push(jQuery(this).find(".j109-ev-charger__reference-name").html().trim());
                                }
                            });
                            $referencelist.val(referencelist.join(","));
                        }, 2000);

                    });
                }, 3000);
            });
        </script>*@

