@using Sitecore.Globalization
@using Sitecore.Mvc
@using DEWAXP.Foundation.Helpers
@using DEWAXP.Foundation.Content
@model DEWAXP.Foundation.Content.Models.MoveOut.LstMoveoutAccount

@{
    //var isCommericalOrIndustrial = Model.SelectedAccount.Type.Equals("commercial", StringComparison.InvariantCultureIgnoreCase) || Model.SelectedAccount.Type.Equals("industrial", StringComparison.InvariantCultureIgnoreCase);
    var now = DateHelper.DubaiNow().AddMonths(-1);
    var threeinfuture = DateHelper.DubaiNow().AddDays(89).AddMonths(-1);
    var direction = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "rtl" : "ltr";
    //string attachmentrequired = Model.Attachmentrequired ? "required" : string.Empty;
}

@{
    ModelState ms;
    List<ModelError> modelErrors;
}

@Html.Sitecore().Placeholder("j18/m26-page-title")

<div class="grid__row">
    <div class="grid__column grid__column--12 grid__column--form">
        @Html.Sitecore().Placeholder("j18/m38-step-tracker")
    </div>
</div>
   <div class="j105-drrg">
        <div class="m66-preloader j105-drrg--loader hidden">
            <div class="grid">
                <div class="grid__row">
                    <div class="grid__column grid__column--12">
                        <h2 class="text__section-subtitle">@Translate.Text("J100.Pleasewait")</h2>
                        <div class="loader"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
@Html.Sitecore().Placeholder("mandatoryfields")
<div class="grid__row">
    <div class="grid__column grid__column--12 grid__column--form">
        <h3 class="text__section-subtitle">@Translate.Text("Input details below")</h3>
        <input type="hidden" value="@Model.IsAttachmentMandatory.ToString().ToLower()" id="IsAttachmentMandatorycheck" />
        @using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form", @id = "move-out-details", @data_form = "true", @data_submit_validate = "enabled", @enctype = "multipart/form-data", @novalidate = string.Empty }))
        {
            @Html.AntiForgeryToken()
            @Html.Sitecore().FormHandler()

            if (!ViewData.ModelState.IsValid && ViewData.ModelState.TryGetValue(ViewData.TemplateInfo.HtmlFieldPrefix, out ms))
            {
                <div class="grid__row">
                    <div class="grid__column grid__column--12">
                        <div class="m40-status-message m40-status-message--error icon icon-caution" data-component="m40-status-message">
                            <div class="m40-status-message__title">@Sitecore.Globalization.Translate.Text(DictionaryKeys.Global.SubmissionError)</div>
                            <div class="m40-status-message__text">
                                <div class="validation-summary-errors">

                                    @if (ms.Errors != null && ms.Errors.Any() && ms.Errors.Where(x => !string.IsNullOrWhiteSpace(x.ErrorMessage)).Count() > 2)
                                    {
                                        modelErrors = ms.Errors.Where(x => !string.IsNullOrWhiteSpace(x.ErrorMessage)).ToList();

                                        <ul>
                                            <li>@modelErrors[0].ErrorMessage</li>
                                            <li>@modelErrors[1].ErrorMessage</li>
                                        </ul>

                                        <div class="m37-expander" data-component="m37-expander">
                                            <button data-toggle="true" class="m37-expander__trigger" id="_eptziyi6x_trigger" aria-controls="_eptziyi6x_content">@Translate.Text("more")</button>
                                            <div data-content="true" class="m37-expander__content" aria-expanded="false" id="_eptziyi6x_content" aria-labelledby="_eptziyi6x_trigger">
                                                <!-- m42-key-value--start -->
                                                <ul>
                                                    @foreach (var error in modelErrors.Skip(2))
                                                    {
                                                        <li>@error.ErrorMessage</li>
                                                    }
                                                </ul>

                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <ul>
                                            @foreach (var error in ms.Errors.Where(x => !string.IsNullOrWhiteSpace(x.ErrorMessage)))
                                            {
                                                <li>@Html.Raw(error.ErrorMessage)</li>
                                            }
                                        </ul>
                                    }
                                </div>

                                @*@Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(true).ToHtmlString()))*@
                            </div>
                        </div>
                    </div>
                </div>
            }

            @Html.HiddenFor(m => m.SameDisconnectDate, new { id = "samedisconnectdate" })
            @Html.HiddenFor(m => m.SameNoRefund, new { id = "samenorefund" })
            @Html.HiddenFor(m => m.SameTransferAcccount, new { id = "sametransferaccount" })
            @Html.HiddenFor(m => m.SameTransferIban, new { id = "sametransferiban" })
            @Html.HiddenFor(m => m.SameTransferCheque, new { id = "sametransfercheque" })
            @Html.HiddenFor(m => m.SameTransferWestern, new { id = "sametransferwesternunion" })
            @Html.HiddenFor(m => m.lstdetails[0].businesspartnercategory, new { id = "businessPartnerCategory" })
            <fieldset class="fieldset evaccountwrapper">
                <legend class="legend-color">.</legend>
                <div class="form-field form-field--text ">
                    <label for="form-field-mobilenumber" class="form-field__label">
                        @Translate.Text("moveout.mobilenumber")
                        <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                    </label>
                    <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--mobile-number">
                        <input type="tel" id="form-field-mobilenumber" name="MobileNumber" value="@Model.MobileNumber" aria-required="true" aria-describedby="description-for-mobilenumber" required placeholder="@Translate.Text("Mobile number placeholder")" data-parsley-error-message="@Translate.Text("Please enter a valid UAE mobile number")" data-parsley-type="digits" data-parsley-trigger="focusout" data-parsley-mobile_number data-parsley-errors-container="#description-for-mobilenumber" class="form-field__input form-field__input--text form-field__input--prefixed" />
                    </span>
                    <div id="description-for-mobilenumber" class="form-field__messages">
                        @Html.ValidationMessageFor(x => x.MobileNumber)
                    </div>
                </div>
            </fieldset>

            for (var i = 0; i < Model.lstdetails.Count(); i++)
            {
                string attachmentrequired = Model.lstdetails[i].businesspartnercategory == "2" ? "required" : string.Empty;
                @Html.HiddenFor(m => m.lstdetails[i].businesspartnercategory)
                @Html.HiddenFor(m => m.lstdetails[i].businesspartnernumber)
                @Html.HiddenFor(m => m.lstdetails[i].contractaccountnumber)
                @Html.HiddenFor(m => m.lstdetails[i].contractaccountname)
                @Html.HiddenFor(m => m.lstdetails[i].customerfirstname)
                @Html.HiddenFor(m => m.lstdetails[i].customerlastname)
                <fieldset class="fieldset evaccountwrapper">
                    <legend class="legend-color">.</legend>
                    <br />
                    @if (Model.lstdetails.Count() > 1)
                    {
                        <div data-component="m43-account-selector" class="m43-accountsel">
                            <p class="m43-accountsel__labelstyle">@Sitecore.Globalization.Translate.Text("Account to move out")</p>
                            <p class="m43-accountsel__selected">
                                <span data-acc-detail="wrapper" class="m43-accountsel__account">
                                    <span class="m43-accountsel__header">
                                        <span data-acc-detail="acc_name" class="m43-accountsel__name"><span class="inline-block" dir="ltr">@Model.lstdetails[i].contractaccountname</span><span dir="@direction" class="m43-accountsel__status m43-accountsel__status--active">@*@Translate.Text("Active")*@</span></span>
                                        <span class="m43-accountsel__details">
                                            <abbr title="Account">@Sitecore.Globalization.Translate.Text("Acc")</abbr>: <span data-acc-detail="acc_number">@Model.lstdetails[i].contractaccountnumber</span><span class="aria-only"> | </span>
                                        </span>
                                    </span>
                                </span>
                            </p>
                        </div>
                    }
                    <br />
                    <div id="@("datepicker-container-movedate" + i)" class="form-field form-field--text ">
                        <label for="form-field-movedate-@(i)" class="form-field__label">
                            @Translate.Text("evdeactivate.disconnect")
                            <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                        </label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--datepicker">
                            @Html.TextBoxFor(x => x.lstdetails[i].DisconnectDate, new
                       {

                           data_parsley_id = "6",
                           @class = "form-field__input form-field__input--text form-field__input--datepicker picker__input",
                           id = "form-field-movedate-" + i,
                           placeholder = Translate.Text("Select date"),
                           required = "required",
                           data_index = i,
                           data_parsley_required_message = Translate.Text("evdeactivate.pleaseenteravalue"),
                           data_el = "datepicker-future",
                           data_parsley_errors_container = "#description-for-movedate-" + i,
                           data_parsley_cannotbebeforetoday_message = Translate.Text(DictionaryKeys.MoveOut.DisconnectDateNotInPast),
                           data_parsley_cannotbeafterthreemonth_message = Translate.Text(DictionaryKeys.MoveOut.DisconnectDateNotthreemonths),
                           data_picker_options = "{ \"max\": [" + threeinfuture.Year + "," + (threeinfuture.Month) + "," + threeinfuture.Day + "] }",
                           type = "text",
                           @data_initial_date = string.Empty
                       })
                        </span>
                        <div id="description-for-movedate-@i" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.lstdetails[i].DisconnectDate)
                        </div>
                    </div>

                    @if (i == 0 && Model.lstdetails.Count() > 1)
                    {
                        <div class="form-field form-field--toggles" id="checkboxdiv">
                            <div class="form-field__checkbox  last  first">
                                <label>
                                    <input class="form-field__input form-field__input--checkbox" id="form-field-checkbox_1_1" name="checkbox_1_1" type="checkbox" value="false" aria-describedby="description-for-fkek2trtr" data-parsley-errors-container="#description-for-fkek2trtr" aria-role="button" aria-pressed="false" aria-controls="clearance_details" data-checkbox-toggle="true">
                                    <span class="form-field__fakecheckbox focus-enabled">
                                        @Translate.Text("Disconnect all accounts on this date")
                                    </span>
                                </label>
                            </div>
                            <div id="description-for-fkek2trtr" class="form-field__messages">
                            </div>
                        </div>
                    }
                    @if (Model.lstdetails[i].refund)
                    {

                        <div class="form-field form-field--select form-field--select-single">
                            <label for="form-field-TransferTo-@i" class="form-field__label">
                                @Translate.Text("evdeactivate.transferto")
                                <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                            </label>
                            <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                @Html.DropDownListFor(x => x.lstdetails[i].SelectedRefundOption, (IEnumerable<SelectListItem>)Model.lstdetails[i].RefundOptions,
                                @Translate.Text("moveout.selectrefundoptions"),
                                 new
                                 {
                                     @class = "form-field__input form-field__input--select form-field__input--select-full form-field-TransferTo",
                                     @id = "form-field-TransferTo-" + i,
                                     @data_index = i,
                                     @name = "lstdetails[" + i + "].SelectedRefundOption",
                                     @aria_describedby = "description-for-TransferTo",
                                     @required = "required",
                                     @data_parsley_error_message = Translate.Text("moveout.selectrefundoptionserror"),
                                     @data_parsley_errors_container = "#description-for-TransferTo-" + i,
                                     @data_parsley_id = "22",
                                     @value = Model.lstdetails[i].SelectedRefundOption
                                 })
                            </span>
                            <div id="description-for-TransferTo-@i" class="form-field__messages"></div>
                        </div>
                        <div id="oknorefundnote_@i" class="form-field--text form-field--12 hidden">
                            @Html.Raw(Translate.Text("oknorefund.note"))
                        </div>
                        if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsNoRefundForAll)
                        {
                            <fieldset class="fieldset fieldset--hidden" id="norefund_details-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--toggles mt12" id="checkboxnorefunddiv">
                                    <div class="form-field__checkbox  last  first">
                                        <label>
                                            <input class="form-field__input form-field__input--checkbox"
                                                   id="form-field-checkbox_1_1_norefund"
                                                   aria-label="form-field-checkbox_1_1_norefund"
                                                   name="checkbox_1_1" type="checkbox"
                                                   value="false"
                                                   aria-describedby="description-for-1_1_norefund"
                                                   data-parsley-errors-container="#description-for-1_1_norefund"
                                                   aria-role="button" aria-pressed="false"
                                                   data-checkbox-toggle="true">
                                            <span class="form-field__fakecheckbox focus-enabled">
                                                @Translate.Text("updateiban.norefundall")
                                            </span>
                                        </label>
                                    </div>
                                    <div id="description-for-1_1_norefund" class="form-field__messages">
                                    </div>
                                </div>
                            </fieldset>
                        }
                        @Html.HiddenFor(x => x.lstdetails[i].CountrylistText, new { @id = "form-field-countrylisttext-" + i })
                        @Html.HiddenFor(x => x.lstdetails[i].StatelistText, new { @id = "form-field-statelisttext-" + i })
                        <div id="WesternUniondiv-@i" class="form-field form-field--select form-field--select-single mt24 hidden">
                            <fieldset class="fieldset fieldset--hidden" id="western_union_selectcountry-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--text ">
                                    <label for="form-field-countrylist" class="form-field__label">
                                        @Translate.Text("updateiban.country")
                                    </label>
                                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                        @Html.DropDownListFor(x => x.lstdetails[i].IsWestenCountrylist, Enumerable.Empty<SelectListItem>(),
                                Translate.Text("updateiban.selectcountry"),
                                 new
                                 {
                                     @class = "form-field__input form-field__input--select form-field__input--select-full form-field-countrylist",
                                     @id = "form-field-countrylist-" + i,
                                     @data_index = i,
                                     @aria_describedby = "description-for-countrylist-" + i,
                                     @required = "required",
                                     @data_parsley_error_message = Translate.Text("updateiban.selectcountryvalid"),
                                     @data_parsley_errors_container = "#description-for-countrylist-" + i,
                                     @data_parsley_id = "22"
                                 })
                                    </span>
                                    <div id="description-for-countrylist-@i" class="form-field__messages"></div>
                                </div>
                            </fieldset>
                            <fieldset class="fieldset fieldset--hidden" id="western_union_selectstate-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--text ">
                                    <label for="form-field-statelist-@(i)" class="form-field__label">
                                        @Translate.Text("updateiban.state")
                                    </label>
                                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                        @Html.DropDownListFor(x => x.lstdetails[i].IsWestenStatelist, Enumerable.Empty<SelectListItem>(),
                               Translate.Text("updateiban.selectstate"),
                                new
                                {
                                    @class = "form-field__input form-field__input--select form-field__input--select-full form-field-statelist",
                                    @id = "form-field-statelist-" + i,
                                    @data_index = i,
                                    @aria_describedby = "description-for-statelist-" + i,
                                    @required = "required",
                                    @data_parsley_error_message = Translate.Text("updateiban.selectstatevalid"),
                                    @data_parsley_errors_container = "#description-for-statelist-" + i,
                                    @data_parsley_id = "22"
                                })
                                    </span>
                                    <div id="description-for-statelist-@i" class="form-field__messages"></div>
                                </div>
                            </fieldset>
                            <fieldset class="fieldset fieldset--hidden" id="western_union_selectcity-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--text ">
                                    <label for="form-field-citylist-@(i)" class="form-field__label">
                                        @Translate.Text("updateiban.city")
                                    </label>
                                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                        @Html.DropDownListFor(x => x.lstdetails[i].IsWestenCitylist, Enumerable.Empty<SelectListItem>(),
                               Translate.Text("updateiban.selectcity"),
                                new
                                {
                                    @class = "form-field__input form-field__input--select form-field__input--select-full",
                                    @id = "form-field-citylist-" + i,
                                    @data_index = i,
                                    @aria_describedby = "description-for-citylist-" + i,
                                    @required = "required",
                                    @data_parsley_error_message = Translate.Text("updateiban.selectcityvalid"),
                                    @data_parsley_errors_container = "#description-for-citylist-" + i,
                                    @data_parsley_id = "22"
                                })
                                    </span>
                                    <div id="description-for-citylist-@i" class="form-field__messages"></div>
                                </div>
                            </fieldset>
                            <fieldset class="fieldset fieldset--hidden" id="western_union_selectcurrency-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--text ">
                                    <label for="form-field-currencylist" class="form-field__label">
                                        @Translate.Text("updateiban.currency")
                                    </label>
                                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                        @Html.DropDownListFor(x => x.lstdetails[i].IsWestenCurrencylist, Enumerable.Empty<SelectListItem>(),
                               Translate.Text("updateiban.selectcurrency"),
                                new
                                {
                                    @class = "form-field__input form-field__input--select form-field__input--select-full",
                                    @id = "form-field-currencylist-" + i,
                                    @data_index = i,
                                    @aria_describedby = "description-for-currencylist-" + i,
                                    @required = "required",
                                    @data_parsley_error_message = Translate.Text("updateiban.selectcurrencyvalid"),
                                    @data_parsley_errors_container = "#description-for-currencylist-" + i,
                                    @data_parsley_id = "22"
                                })
                                    </span>
                                    <div id="description-for-currencylist-@i" class="form-field__messages"></div>
                                </div>
                            </fieldset>
                            @if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsWesternUnionForAll)
                            {
                                <div class="form-field form-field--toggles" id="checkboxwesterndiv">
                                    <div class="form-field__checkbox  last  first">
                                        <label>
                                            <input class="form-field__input form-field__input--checkbox"
                                                   id="form-field-checkbox_1_1_westernunion"
                                                   name="checkbox_1_1" type="checkbox"
                                                   value="false"
                                                   aria-describedby="description-for-1_1_westernunion"
                                                   data-parsley-errors-container="#description-for-1_1_westernunion"
                                                   aria-role="button" aria-pressed="false"
                                                   data-checkbox-toggle="true">
                                            <span class="form-field__fakecheckbox focus-enabled">
                                                @Translate.Text("updateiban.transfertowu")
                                            </span>
                                        </label>
                                    </div>
                                    <div id="description-for-1_1_westernunion" class="form-field__messages">
                                    </div>
                                </div>
                            }
                            <div id="description-for-westernlocation-@i" class="form-field__messages hidden">
                                <p class="form-field__helplink">
                                    <a href="https://locations.westernunion.com" target="_blank" class="link">@Translate.Text("updateiban.viewlocation")</a>
                                </p>
                            </div>
                            <br>
                        </div>
                        if (Model.lstdetails[i].IbanList != null && Model.lstdetails[i].IbanList.Any())
                        {
                            <fieldset class="fieldset fieldset--hidden" id="iban_details-list-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--select form-field--select-single">
                                    <label for="form-field-selectIban-@(i)" class="form-field__label">
                                        @Translate.Text("selectiban.transferto")
                                        @*<span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>*@
                                    </label>
                                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                                        @Html.DropDownListFor(x => x.lstdetails[i].SelectedIban, (IEnumerable<SelectListItem>)Model.lstdetails[i].IbanList,
                         Translate.Text("selectiban.dropdown"),
                          new
                          {
                              @class = "form-field__input form-field__input--select form-field__input--select-full form-field-selectiban",
                              @id = "form-field-selectIban-" + i,
                              @aria_describedby = "description-for-selectIban-" + i,
                              @data_index = i,
                              @required = "required",
                              @data_parsley_error_message = Translate.Text("Please enter a value"),
                              @data_parsley_errors_container = "#description-for-selectIban-" + i,
                              @data_parsley_id = "22"
                          })
                                    </span>
                                    <div id=@("description-for-selectIban-" + i) class="form-field__messages"></div>
                                </div>

                                <div class="form-field form-field--text hidden " id="divIban-@i">
                                    <label for="form-field-ibannumber-@i" class="form-field__label">
                                        @Translate.Text("evdeactivate.addyouribannumber")
                                        <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                                    </label>

                                    <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--iban">
                                        @Html.TextBoxFor(x => x.lstdetails[i].IbanAccountNumber,
              new
              {
                  @class = "form-field__input form-field__input--text form-field__input--prefixed selectediban",
                  @name = "IbanAccountNumber",
                  @maxlength = 21,
                  @type="number",
                  @id = "form-field-ibannumber-" + i,
                  @placeholder = Translate.Text("Enter 21 digit number"),
                  @required = "required",
                  @autocomplete = "off",
                  @data_parsley_selectediban_message = Translate.Text(DictionaryKeys.MoveOut.ValidIBANNumber),
                  @data_parsley_required_message = Translate.Text("IBAN number is required."),
                  @data_parsley_errors_container = "#description-for-ibannumber-" + i,
                  @aria_describedby = "description-for-ibannumber",
                  @data_parsley_selectediban = "",
                  @bankcodes = Model.lstdetails[i].ValidBankCodes.Item1,
                  @data_parsley_equalto = "#form-field-ibannumber-" + i
              })
                                    </span>

                                    <div id="description-for-ibannumber-@i" class="form-field__messages">
                                        @Html.ValidationMessageFor(x => x.lstdetails[i].IbanAccountNumber)

                                    </div>
                                </div>

                                <div class="form-field form-field--text ">
                                    <label for="form-field-confirm-iban-number-@i" class="form-field__label">
                                        @Translate.Text("evdeactivate.confirmyouribannumber")
                                        <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                                    </label>

                                    <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--iban">
                                        @Html.TextBoxFor(x => x.lstdetails[i].ConfirmIbanAccountNumber,
              new
              {
                  @class = "form-field__input form-field__input--text form-field__input--prefixed selectediban",
                  @name = "ConfirmIbanAccountNumber",
                  @maxlength = 21,
                  @type = "number",
                  @id = "form-field-confirm-iban-number-" + i,
                  @placeholder = Translate.Text("Enter 21 digit number"),
                  @required = "required",
                  @autocomplete = "off",
                  @data_parsley_selectediban_message = Translate.Text(DictionaryKeys.MoveOut.ValidIBANNumber),
                  @data_parsley_required_message = Translate.Text("IBAN number is required."),
                  @data_parsley_equalto_message = Translate.Text("IBANNumberMisMatch"),
                  @data_parsley_errors_container = "#description-for-ibanconfirm-" + i,
                  @aria_describedby = "description-for-ibanconfirm",
                  @data_parsley_selectediban = "",
                  @bankcodes = Model.lstdetails[i].ValidBankCodes.Item1,
                  @data_iban_confirm = "",
                  @data_parsley_equalto = "#form-field-selectIban-" + i
              })
                                    </span>

                                    <div id="description-for-ibanconfirm-@i" class="form-field__messages">
                                        @Html.ValidationMessageFor(x => x.lstdetails[i].ConfirmIbanAccountNumber)

                                        @if (!string.IsNullOrWhiteSpace(Model.lstdetails[i].ValidBankCodes.Item1) && !string.IsNullOrWhiteSpace(Model.lstdetails[i].ValidBankCodes.Item2))
                                        {
                                            <p class="form-field__description">@string.Format(Translate.Text("moveout.allowedbanks"), Model.lstdetails[i].ValidBankCodes.Item2)</p>
                                        }
                                    </div>
                                </div>

                                @if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsIbanRefundForAll)
                                {
                                    <div class="form-field form-field--toggles" id="checkboxibandiv">
                                        <div class="form-field__checkbox  last  first">
                                            <label>
                                                <input class="form-field__input form-field__input--checkbox"
                                                       id="form-field-checkbox_1_1_iban"
                                                       name="checkbox_1_1" type="checkbox"
                                                       value="false"
                                                       aria-describedby="description-for-1_1_iban"
                                                       data-parsley-errors-container="#description-for-1_1_iban"
                                                       aria-role="button" aria-pressed="false"
                                                       aria-controls="clearance_details"
                                                       data-checkbox-toggle="true">
                                                <span class="form-field__fakecheckbox focus-enabled">
                                                    @Translate.Text("Transfer refund of all accounts to this IBAN")
                                                </span>
                                            </label>
                                        </div>
                                        <div id="description-for-1_1_iban" class="form-field__messages">
                                        </div>
                                    </div>
                                }
                            </fieldset>
                        }
                        else
                        {
                            <fieldset class="fieldset fieldset--hidden" id="iban_details-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--text ">
                                    <label for="form-field-ibannumber-@i" class="form-field__label">
                                        @Translate.Text("evdeactivate.addyouribannumber")
                                        <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                                    </label>

                                    <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--iban">
                                        @Html.TextBoxFor(x => x.lstdetails[i].IbanAccountNumber,
              new
              {
                  @class = "form-field__input form-field__input--text form-field__input--prefixed selectediban",
                  @name = "IbanAccountNumber",
                  @maxlength = 21,
                  @id = "form-field-ibannumber-" + i,
                  @placeholder = Translate.Text("Enter 21 digit number"),
                  @required = "required",
                  @type = "number",
                  @autocomplete = "off",
                  @data_parsley_selectediban_message = Translate.Text(DictionaryKeys.MoveOut.ValidIBANNumber),
                  @data_parsley_required_message = Translate.Text("IBAN number is required."),
                  @data_parsley_errors_container = "#description-for-ibannumber-" + i,
                  @aria_describedby = "description-for-ibannumber",
                  @data_parsley_selectediban = "",
                  @bankcodes = Model.lstdetails[i].ValidBankCodes.Item1,
                  @data_parsley_equalto = "#form-field-ibannumber-" + i
              })
                                    </span>

                                    <div id="description-for-ibannumber-@i" class="form-field__messages">
                                        @Html.ValidationMessageFor(x => x.lstdetails[i].IbanAccountNumber)

                                    </div>
                                </div>

                                <div class="form-field form-field--text ">
                                    <label for="form-field-confirm-iban-number-@i" class="form-field__label">
                                        @Translate.Text("evdeactivate.confirmyouribannumber")
                                        <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span>
                                    </label>

                                    <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--iban">
                                        @Html.TextBoxFor(x => x.lstdetails[i].ConfirmIbanAccountNumber,
              new
              {
                  @class = "form-field__input form-field__input--text form-field__input--prefixed selectediban",
                  @name = "ConfirmIbanAccountNumber",
                  @maxlength = 21,
                  @id = "form-field-confirm-iban-number-" + i,
                  @placeholder = Translate.Text("Enter 21 digit number"),
                  @required = "required",
                  @type = "number",
                  @autocomplete = "off",
                  @data_parsley_selectediban_message = Translate.Text(DictionaryKeys.MoveOut.ValidIBANNumber),
                  @data_parsley_required_message = Translate.Text("IBAN number is required."),
                  @data_parsley_equalto_message = Translate.Text("IBANNumberMisMatch"),
                  @data_parsley_errors_container = "#description-for-ibanconfirm-" + i,
                  @aria_describedby = "description-for-ibanconfirm",
                  @data_parsley_selectediban = "",
                  @bankcodes = Model.lstdetails[i].ValidBankCodes.Item1,
                  @data_iban_confirm = "",
                  @data_parsley_equalto = "#form-field-ibannumber-" + i
              })
                                    </span>

                                    <div id="description-for-ibanconfirm-@i" class="form-field__messages">
                                        @Html.ValidationMessageFor(x => x.lstdetails[i].ConfirmIbanAccountNumber)

                                        @if (!string.IsNullOrWhiteSpace(Model.lstdetails[i].ValidBankCodes.Item1) && !string.IsNullOrWhiteSpace(Model.lstdetails[i].ValidBankCodes.Item2))
                                        {
                                            <p class="form-field__description">@string.Format(Translate.Text("moveout.allowedbanks"), Model.lstdetails[i].ValidBankCodes.Item2)</p>
                                        }
                                    </div>
                                </div>

                                @if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsIbanRefundForAll)
                                {
                                    <div class="form-field form-field--toggles" id="checkboxibandiv">
                                        <div class="form-field__checkbox  last  first">
                                            <label>
                                                <input class="form-field__input form-field__input--checkbox"
                                                       id="form-field-checkbox_1_1_iban"
                                                       name="checkbox_1_1" type="checkbox"
                                                       value="false"
                                                       aria-describedby="description-for-1_1_iban"
                                                       data-parsley-errors-container="#description-for-1_1_iban"
                                                       aria-role="button" aria-pressed="false"
                                                       aria-controls="clearance_details"
                                                       data-checkbox-toggle="true">
                                                <span class="form-field__fakecheckbox focus-enabled">
                                                    @Translate.Text("Transfer refund of all accounts to this IBAN")
                                                </span>
                                            </label>
                                        </div>
                                        <div id="description-for-1_1_iban" class="form-field__messages">
                                        </div>
                                    </div>
                                }

                            </fieldset>
                        }

                        if (Model.lsttranferaccount != null && Model.lsttranferaccount.Count > 0)
                        {
                            @Html.HiddenFor(x => x.lstdetails[i].transferaccount, new { value = Model.lstdetails[i].transferaccount })
                            <fieldset class="fieldset fieldset--hidden mt24" id="transfer_details-@i">
                                <legend class="legend-color">.</legend>
                                <div class="m43-accountsel" data-component="m43-account-selector" data-transferacc="m43-transfer-account-selector">
                                    <p class="form-field__label">@Sitecore.Globalization.Translate.Text("Select an account to transfer")</p>

                                    @if (i != 0)
                                    {
                                        <p class="m43-accountsel__selected m43-accounttransfer" style="display:none;">
                                            <span data-acc-detail="wrapper" class="m43-accountsel__account">
                                                <span class="m43-accountsel__header">
                                                    <span data-acc-detail="acc_name" class="m43-accountsel__name">
                                                        <span class="inline-block" dir="ltr">@Model.lsttranferaccount[0].contractaccountname</span>
                                                        <span dir="ltr" class="m43-accountsel__status m43-accountsel__status--active">@*@Translate.Text("Active")*@</span>
                                                    </span>
                                                    <span class="m43-accountsel__details">
                                                        <abbr title="Account">@Sitecore.Globalization.Translate.Text("Acc")</abbr>:
                                                        <span data-acc-detail="acc_number">@Model.lsttranferaccount[0].contractaccountnumber</span><span class="aria-only"> | </span>
                                                    </span>
                                                </span>
                                            </span>
                                        </p>
                                    }

                                    <button class="m43-accountsel__selected m43-accountsel__selected--dropdown m43-accountsel__selected--button"
                                            data-accountselector="acc-sel-ctrl-@i"
                                            data-preventsubmit="true" data-minselection="1"
                                            data-maxselection="1"
                                            aria-haspopup="true"
                                            aria-expanded="false"
                                            type="button"
                                            id="m43-accountsel__selected-@i"
                                            aria-controls="_nhlzytky3_content">
                                        <span class="m43-accountsel__account" data-acc-detail="wrapper">
                                            <span class="m43-accountsel__header">
                                                <span class="m43-accountsel__name" data-acc-detail="acc_name">
                                                    <span class="inline-block" dir="@direction">@Model.lsttranferaccount[0].contractaccountname</span>
                                                    @*<span dir="@direction" class="m43-accountsel__status m43-accountsel__status--active">@Translate.Text("Active")</span>*@
                                                </span>
                                                @*<span class="m43-accountsel__details">
                                                    <abbr title="Account">@Sitecore.Globalization.Translate.Text("Acc")</abbr>:
                                                    <span data-acc-detail="acc_number" id="contractaccountnumber-@i" dir="@direction">@Model.lsttranferaccount[0].contractaccountnumber</span>
                                                    <span class="aria-only"> | </span>
                                                </span>*@
                                            </span>
                                        </span>
                                    </button>
                                    <div id="transferaccounts-error" class="transferaccounts-error form-field__messages hidden" style="color:#ff0000;cursor:pointer;padding-bottom:15px;">
                                    </div><br />
                                    <div class="m39-modal" data-component="m39-modal" id="modal_acc-sel-ctrl-@i">
                                        <div data-content="acc-sel-ctrl-@i" class="m39-modal__container" role="dialog" aria-expanded="false">
                                            <div class="m39-modal__dialog m39-modal__dialog--account">
                                                <div class="m39-modal__header">
                                                    <div class="m39-modal__title">@Sitecore.Globalization.Translate.Text("Select Transfer account")</div>
                                                    <button data-close="acc-sel-ctrl-@i" class="m39-modal__button--close">@Translate.Text("Close")</button>
                                                    <!-- m49-list-filter-start -->
                                                    <!-- ideally data-filter-list will match a container id for all list items to filter -->
                                                    <div class="m49-list-filter" data-component="m49-list-filter" data-filter-list="#m59-modal__content">
                                                        <input class="m49-list-filter--input" id="m49-list-filter--input" name="m49-list-filter--input" placeholder="@Translate.Text(DictionaryKeys.AccountSelector.SearchByNumber)" type="search">
                                                        <button class="m49-list-filter--button" title="Filter results" type="button" role="search" aria-label="@Translate.Text(DictionaryKeys.AccountSelector.Filter)"><span class="aria-only">@Translate.Text(DictionaryKeys.AccountSelector.Filter)</span></button>
                                                    </div>
                                                    <!-- m49-list-filter-end -->
                                                </div>
                                                <div class="m39-modal__content" id="m59-modal__content">
                                                    <div class="m43-accountsel__group_wrap">
                                                        <div class="m43-accountsel__group">
                                                            <div class="m43-accountsel__accounts-list" data-accounts="true">
                                                                <div class="form-field">
                                                                    @foreach (var item in Model.lsttranferaccount)
                                                                    {
                                                                        if (item.contractaccountnumber == "0")
                                                                        {
                                                                            <p class="form-field__radio form-field__radio--accselector">
                                                                                <label>
                                                                                    <input class="form-field__input form-field__input--radio"
                                                                                           data-input="radio"
                                                                                           id="transferAccount"
                                                                                           name="transferAccount"
                                                                                           type="radio"
                                                                                           value="@item.contractaccountnumber"
                                                                                           data-id="@item.contractaccountnumber">
                                                                                    <span class="form-field__fakeradio form-field__fakeradio--right focus-enabled">
                                                                                        <span class="m43-accountsel__account" data-acc-detail="wrapper">
                                                                                            <span class="m43-accountsel__header">
                                                                                                <span class="m43-accountsel__name" data-acc-detail="acc_name">
                                                                                                    <span class="inline-block" dir="@direction">@item.contractaccountname</span>
                                                                                                    @*<span dir="ltr" class="m43-accountsel__status m43-accountsel__status--active">Active</span>*@
                                                                                                </span>
                                                                                                <span class="m43-accountsel__details hidden">
                                                                                                    <span dir="@direction" data-acc-detail="acc_number" class="hidden">@item.contractaccountnumber</span><span class="aria-only"> | </span>
                                                                                                </span>
                                                                                            </span>
                                                                                        </span>
                                                                                    </span>
                                                                                </label>
                                                                            </p>
                                                                        }
                                                                        else
                                                                        {
                                                                            <p class="form-field__radio form-field__radio--accselector">
                                                                                <label>
                                                                                    <input class="form-field__input form-field__input--radio"
                                                                                           data-input="radio"
                                                                                           id="transferAccount"
                                                                                           name="transferAccount"
                                                                                           type="radio"
                                                                                           value="@item.contractaccountnumber"
                                                                                           data-id="@item.contractaccountnumber">
                                                                                    <span class="form-field__fakeradio form-field__fakeradio--right focus-enabled">
                                                                                        <span class="m43-accountsel__account" data-acc-detail="wrapper">
                                                                                            <span class="m43-accountsel__header">
                                                                                                <span class="m43-accountsel__name" data-acc-detail="acc_name">
                                                                                                    <span class="inline-block" dir="@direction">@item.contractaccountname</span>
                                                                                                    @*<span dir="ltr" class="m43-accountsel__status m43-accountsel__status--active">Sitecore.Globalization.Translate.Text("Active")</span>*@
                                                                                                </span>
                                                                                                <span class="m43-accountsel__details">
                                                                                                    <abbr title="Account">@Sitecore.Globalization.Translate.Text("Acc")</abbr>: <span dir="@direction" data-acc-detail="acc_number">@item.contractaccountnumber</span><span class="aria-only"> | </span>
                                                                                                </span>
                                                                                            </span>
                                                                                        </span>
                                                                                    </span>
                                                                                </label>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    <div id="description-for-radios_group1" class="form-field__messages"></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="m49-no-matches">@Translate.Text(DictionaryKeys.AccountSelector.NoMatchesFound)</div>
                                                </div>
                                                <div class="m39-modal__footer">
                                                    <button class="button button--primary accountmodalconfirm" data-account-count="@i" id="accountmodalconfirm" data-accountupdate="true" data-modal-confirm="true">@Translate.Text("Confirm")</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsTransferRefundForAll)
                                {
                                    <div class="form-field form-field--toggles" id="checkboxtransferdiv">
                                        <div class="form-field__checkbox  last  first">
                                            <label>
                                                <input class="form-field__input form-field__input--checkbox"
                                                       id="form-field-checkbox_1_1_transfer"
                                                       name="checkbox_1_1" type="checkbox"
                                                       value="false"
                                                       aria-describedby="description-for-1_1_transfer"
                                                       data-parsley-errors-container="#description-for-1_1_transfer"
                                                       aria-role="button" aria-pressed="false"
                                                       aria-controls="clearance_details"
                                                       data-checkbox-toggle="true">
                                                <span class="form-field__fakecheckbox focus-enabled">
                                                    @Translate.Text("Transfer refund of all accounts to this account")
                                                </span>
                                            </label>
                                        </div>
                                        <div id="description-for-1_1_transfer" class="form-field__messages">
                                        </div>
                                    </div>
                                }
                            </fieldset>
                        }

                        if (i == 0 && Model.lstdetails.Count() > 1 && Model.IsChequeRefundForAll)
                        {
                            <fieldset class="fieldset fieldset--hidden" id="cheque_details-@i">
                                <legend class="legend-color">.</legend>
                                <div class="form-field form-field--toggles" id="checkboxchequediv">
                                    <div class="form-field__checkbox  last  first">
                                        <label>
                                            <input class="form-field__input form-field__input--checkbox"
                                                   id="form-field-checkbox_1_1_cheque"
                                                   name="checkbox_1_1" type="checkbox"
                                                   value="false"
                                                   aria-describedby="description-for-1_1_cheque"
                                                   data-parsley-errors-container="#description-for-1_1_cheque"
                                                   aria-role="button" aria-pressed="false"
                                                   aria-controls="clearance_details"
                                                   data-checkbox-toggle="true">
                                            <span class="form-field__fakecheckbox focus-enabled">
                                                @Translate.Text("Transfer refund of all accounts via Cheque")
                                            </span>
                                        </label>
                                    </div>
                                    <div id="description-for-1_1_cheque" class="form-field__messages">
                                    </div>
                                </div>
                            </fieldset>
                        }
                    }


                    @*<div class="form-field form-field--toggles hidden" id="IBANModal-@i">
                        <div class="form-field__checkbox  last">
                            <label>
                                <input class="form-field__input form-field__input--checkbox"
                                       id="form-field-checkbox_1_1-@i" name="AgreedToPayment1-@i"
                                       type="checkbox" value="true" aria-describedby="description-for-accept-terms1-@i"
                                       data-parsley-error-message="@Translate.Text("Error Terms Agreement")"
                                       data-parsley-errors-container="#description-for-accept-terms1-@i"
                                       data-parsley-multiple="checkbox_1_1"
                                       data-parsley-id="23"
                                       required="" >
                                <span class="form-field__fakecheckbox focus-enabled">@Translate.Text("moveout.TermsAgreement")</span>
                            </label>
                        </div>
                        <fieldset class="fieldset ">
                            <legend class="legend-color">.</legend>
                            @Html.Sitecore().Placeholder("IBANModal")
                        </fieldset>
                        <div id="description-for-accept-terms1-@i" class="form-field__messages"></div>
                        <input type="hidden" name="AgreedToPayment1-@i" value="false" />
                    </div>

                    <fieldset class="fieldset fieldset--hidden " id="ChequeModal-@i">
                        <span>@Translate.Text("moveout.chequedisclaimer")</span>
                        <br /><br />
                        <span>@Translate.Text("moveout.clearancedisclaimerVAT")</span>
                    </fieldset>*@
                </fieldset>
            }

            @*if (Model.lstdetails.Where(x => x.refund).Any())
            {
                <fieldset class="fieldset" id="attachment_details">
                    <legend class="legend" id="documentname">@Translate.Text("evdeactivate.Letter/Receipt")</legend>
                    <div class="form-field form-field--upload">
                        <div class="form-field__input-wrapper">
                            <div class="form-field__preview-wrapper">
                                <img src="/images/preview@2x.png" data-src="/images/preview@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="IbanRefundDocument">
                            </div>
                            <div class="form-field__uploader-details">
                                <label for="form-field-IbanRefundDocument" class="form-field__label">
                                    <strong class="form-field__label-description"></strong>
                                </label>
                                <div>
                                    <label>
                                        @if (Model.IsAttachmentMandatory)
                                        {
                                            @Html.TextBoxFor(x => x.RefundDocument,
        new
        {
            @type = "file",
            @class = "form-field__input form-field__input--upload",
            @id = "form-field-IbanRefundDocument",
            @name = "IbanRefundDocument",
            @aria_describedby = "description-for-IbanRefundDocument",
            @required = "required",
            @data_parsley_error_message = @Translate.Text("Please select a file"),
            @data_parsley_errors_container = "#errors-for-IbanRefundDocument",
            @data_uploader_field = "IbanRefundDocument",
            @data_accepts = @AttachmentValidation.acceptedFileTypesClientSide,
            @data_size = @AttachmentValidation.maximumFileSize,
            @accept = "image/png,image/x-png,image/jpeg,image/jpg,image/bmp,image/gif,application/pdf,text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            @data_parsley_id = "16"
        })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.RefundDocument,
    new
    {
        @type = "file",
        @class = "form-field__input form-field__input--upload",
        @id = "form-field-IbanRefundDocument",
        @name = "IbanRefundDocument",
        @aria_describedby = "description-for-IbanRefundDocument",
        @data_parsley_error_message = @Translate.Text("Please select a file"),
        @data_parsley_errors_container = "#errors-for-IbanRefundDocument",
        @data_uploader_field = "IbanRefundDocument",
        @data_accepts = @AttachmentValidation.acceptedFileTypesClientSide,
        @data_size = @AttachmentValidation.maximumFileSize,
        @accept = "image/png,image/x-png,image/jpeg,image/jpg,image/bmp,image/gif,application/pdf,text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        @data_parsley_id = "16"
    })
                                        }
                                        <span class="button button--primary button--next button--small focus-enabled">@Translate.Text("Choose")</span>
                                    </label>
                                </div>
                                <p class="form-field__input--upload-format-error-message" data-uploader-format-error="error-message">@Translate.Text("invalid file type validation message")</p>
                                <p class="form-field__input--upload-size-error-message" data-uploader-size-error="error-message">@Translate.Text("file too large validation message")</p>
                                <p class="form-field__input--upload-filename" data-uploader-filename="IbanRefundDocument"></p>
                                <p>
                                    <button class="button button--text button--remove hidden" data-uploader-remove="IbanRefundDocument">@Translate.Text("Remove")</button>
                                </p>
                            </div>
                        </div>
                        <div id="description-for-IbanRefundDocument" class="form-field__messages">
                            <div id="errors-for-IbanRefundDocument">
                                @Html.ValidationMessageFor(x => x.RefundDocument, "", new { @class = "parsley-errors-list" })
                            </div>
                            <p class="form-field__description">
                                @Translate.Text("SetVAT.MaxSizeCopy")
                            </p>
                        </div>
                    </div>

                    <div class="form-field form-field--toggles inline-terms" id="divTermsConditions">
                        <div class="form-field__checkbox  last">
                            <label>
                                <input class="form-field__input form-field__input--checkbox" id="form-field-checkbox_1_1_terms" name="AgreedToPayment" type="checkbox" value="true" aria-describedby="description-for-accept-terms" required="" data-parsley-error-message="@Translate.Text("Error Terms Agreement")" data-parsley-errors-container="#description-for-accept-terms" data-parsley-multiple="form-field-checkbox_1_1_terms" data-parsley-id="23">
                                <span class="form-field__fakecheckbox focus-enabled tnc_cbox">&nbsp;</span>
                            </label>
                        </div>
                        <fieldset class="fieldset m39-modal__tnc">
                            <legend class="legend-color">.</legend>
                            <span class="text">@Translate.Text("updateiban.Iagree")</span>
                            @Html.Sitecore().Placeholder("j26/m39-modal-overlay")
                        </fieldset>
                        @*<fieldset class="fieldset ">

                        </fieldset>
                        <div id="description-for-accept-terms" class="form-field__messages"></div>
                        <input type="hidden" name="AgreedToPayment" value="false" />
                    </div>


                </fieldset>
            }*@
            <div class="form-field__button">
                <button type="submit" id="moveoutdetailssubmitbutton" class="button button--primary button--next" data-submission-text="@Translate.Text("Submitting")...">@Translate.Text("moveto.detailssubmit")</button>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    docReady(function () {
        var $samedisconnectdate = jQuery('#samedisconnectdate');
        var $samenorefund = jQuery("#samenorefund");
        var $sametransferaccount = jQuery('#sametransferaccount');
        var $sametransfercheque = jQuery('#sametransfercheque');
        var $sametransferiban = jQuery('#sametransferiban');
        var $sametransferwesternunion = jQuery('#sametransferwesternunion');
        if ($("#IsAttachmentMandatorycheck").val() == "true")
            $(".upload-required").show();

        jQuery("input:radio[name='transferAccount']:first").attr('checked', true);
        $('.accountmodalconfirm').each(function () {

            if ($(this).attr('id') == "accountmodalconfirm") {
                $(this).on('click', function () {
                    var _this = this;
                    setTimeout(function () {
                        var id = $(_this).attr("data-account-count"),
                            parent = $(_this).closest('.m43-accountsel').find('.m43-accountsel__selected');
                        $(parent).find('.m43-accountsel__details').find('span').each(function () {
                            if ($(this).attr('data-acc-detail') == "acc_number") {
                                jQuery('input[name="lstdetails[' + id + '].transferaccount"]')[0].value = $(this).html();
                            };
                        });
                    }, 500);
                });
            }
        });
        
        $('#form-field-checkbox_1_1').change(function () {
            require(['parsley'], function () {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
                var thisvar = $(this);
                if ($('#form-field-checkbox_1_1').is(":checked")) {
                    var validate = jQuery("#form-field-movedate-0").parsley().validate();
                    if (validate[0] == undefined && validate == true) {
                        $samedisconnectdate[0].value = true;
                        for (var counter = 1; counter < selectedaccountcount ; counter++) {
                            var $movedate = jQuery('#form-field-movedate-' + counter);
                            var $movedate2 = jQuery('input[name="lstdetails[' + counter + '].DisconnectDate_submit"]');
                            $movedate2[0].value = jQuery("#form-field-movedate-0").val();
                            $('input[name="lstdetails[' + counter + '].DisconnectDate_submit"]')[0].value = jQuery("#form-field-movedate-0").val();
                            //$('input[name="lstdetails[' + counter + '].DisconnectDate"]').attr("disabled", true);
                            $movedate[0].value = jQuery("#form-field-movedate-0").val();
                            $movedate.attr("disabled", true);
                            $movedate.addClass('disabled');
                            jQuery('#form-field-movedate-' + counter).parsley().validate();
                        }

                    }
                    else if (!validate[0].errorMessage) {
                        $samedisconnectdate[0].value = false;
                        $('#form-field-checkbox_1_1').removeAttr("checked")
                    }
                }
                else {
                    $samedisconnectdate[0].value = false;
                    for (var counter = 1; counter < selectedaccountcount ; counter++) {
                        $("#form-field-movedate-" + counter).val("");
                        $("#form-field-movedate-" + counter).removeAttr("disabled");
                        $("#form-field-movedate-" + counter).removeClass("disabled");
                    }
                }
            });
        });
        $('#form-field-checkbox_1_1_transfer').off('click.check').on('click.check', function (e) {
            if ($('#form-field-checkbox_1_1_transfer').is(":checked")) {
                var $button = jQuery('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-0"]').find('span[data-acc-detail="acc_number"]'),
                    $error = jQuery('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-0"]').closest('.m43-accountsel').find('.transferaccounts-error');
                if ($button.html() == undefined || $button.html() == '0') {
                    e.preventDefault();
                    $error.removeClass('hidden');
                    $error.html("@Translate.Text("moveout.selectaccount")");
                }
            }
        });
        $('#form-field-checkbox_1_1_transfer').on('change', function () {
            require(['parsley'], function () {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
                if ($('#form-field-checkbox_1_1_transfer').is(":checked")) {
                    var validate = true;
                    if (validate[0] == undefined && validate == true) {
                        $sametransferaccount[0].value = true;

                        jQuery('.m43-accounttransfer').removeAttr('style');

                        var selected = jQuery('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-0"]').html();

                        jQuery('.m43-accounttransfer').html(selected);

                        for (var counter = 1; counter < selectedaccountcount ; counter++) {
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "T";
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');
                            jQuery('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-' + counter + '"]').hide();
                            //jQuery('#transfer_details-' + counter).hide();
                            jQuery('#iban_details-list-' + counter).hide();
                            jQuery('#WesternUniondiv-' + counter).hide();
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').attr("disabled", true);
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').addClass("disabled");
                        }
                    }
                    else if (!validate[0].errorMessage) {
                        $sametransferaccount[0].value = false;
                        $('#form-field-checkbox_1_1_transfer').removeAttr("checked");
                        jQuery('.m43-accounttransfer').html('');
                    }
                }
                else {
                    $sametransferaccount[0].value = false;

                    jQuery('.m43-accounttransfer').css('display', 'none');

                    jQuery('.m43-accounttransfer').html('');

                    for (var counter = 1; counter < selectedaccountcount ; counter++) {
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "";
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeAttr("disabled");
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeClass("disabled");

                        jQuery('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-' + counter + '"]').show();
                    }
                }
            });
        });
        $('#form-field-checkbox_1_1_westernunion').on('change', function () {
            require(['parsley'], function () {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
                if ($('#form-field-checkbox_1_1_westernunion').is(":checked")) {
                    var validate = true;
                    if (jQuery('#western_union_selectcountry-0').is(":visible")) {
                        jQuery('#form-field-countrylist-0').each(function (index, el) {
                            validate = jQuery(el).parsley().validate();
                        })
                    }
                    if (jQuery('#western_union_selectstate-0').is(":visible")) {
                        jQuery('#form-field-statelist-0').each(function (index, el) {
                            validate = jQuery(el).parsley().validate();
                        })
                    }
                    if (jQuery('#western_union_selectcity-0').is(":visible")) {
                        jQuery('#form-field-citylist-0').each(function (index, el) {
                            validate = jQuery(el).parsley().validate();
                        })
                    }
                    if (jQuery('#western_union_selectcurrency-0').is(":visible")) {
                        jQuery('#form-field-currencylist-0').each(function (index, el) {
                            validate = jQuery(el).parsley().validate();
                        })
                    }

                    if (validate[0] == undefined && validate == true) {
                        $sametransferwesternunion[0].value = true;
                        for (var counter = 1; counter < selectedaccountcount ; counter++) {
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "Q";
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');
                            jQuery('#transfer_details-' + counter).hide();
                            jQuery('#iban_details-list-' + counter).hide();
                            jQuery('#WesternUniondiv-' + counter).hide();
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').attr("disabled", true);
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').addClass("disabled");
                        }
                    }
                    else if (!validate[0].errorMessage) {
                        $sametransferwesternunion[0].value = false;
                        $('#form-field-checkbox_1_1_westernunion').removeAttr("checked")
                    }
                }
                else {
                    $sametransferwesternunion[0].value = false;

                    for (var counter = 1; counter < selectedaccountcount ; counter++) {
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "";
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeAttr("disabled");
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeClass("disabled");
                    }
                }
            });
        });

        $('#form-field-checkbox_1_1_iban').on('change', function () {
            require(['parsley'], function () {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
                if ($('#form-field-checkbox_1_1_iban').is(":checked")) {
                    var validate;
                    jQuery('#form-field-confirm-iban-number-0,#form-field-ibannumber-0').each(function (index, el) {
                        validate = jQuery(el).parsley().validate();
                    })
                    if (validate[0] == undefined && validate == true) {
                        $sametransferiban[0].value = true;

                        var isSelectedIban;
                        var isOtherIban;
                        var isEnteredIban;

                        var ibanList = jQuery('select[name="lstdetails[0].SelectedIban"]');
                        var ibanInput = jQuery('input[name="lstdetails[0].IbanAccountNumber"]');
                        var ibanConfirmInput = jQuery('input[name="lstdetails[0].ConfirmIbanAccountNumber"]');

                        if (ibanList && ibanList.length > 0) {
                            if (ibanList.val() && ibanList.val() == "others")
                                isOtherIban = true;
                            else if (ibanList.val())
                                isSelectedIban = true;
                        }

                        for (var counter = 1; counter < selectedaccountcount ; counter++) {
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "I";
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');

                            if (isSelectedIban) {
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]')[0].value = ibanList.val();
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').trigger('change');
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').attr("disabled", true);
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').addClass("disabled");

                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').val(ibanConfirmInput.val());
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').attr("disabled", true);
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').addClass("disabled");
                            }
                            else if (isOtherIban) {
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]')[0].value = ibanList.val();
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').trigger('change');
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').attr("disabled", true);
                                jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]').addClass("disabled");

                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').val(ibanInput.val());
                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').attr("disabled", true);
                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').addClass("disabled");

                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').val(ibanConfirmInput.val());
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').attr("disabled", true);
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').addClass("disabled");
                            }
                            else {
                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').val(ibanInput.val());
                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').attr("disabled", true);
                                jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').addClass("disabled");

                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').val(ibanConfirmInput.val());
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').attr("disabled", true);
                                jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').addClass("disabled");
                            }
                            //jQuery('#iban_details-list-' + counter).hide();
                            jQuery('#transfer_details-' + counter).hide();
                            jQuery('#WesternUniondiv-' + counter).hide();
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').attr("disabled", true);
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').addClass("disabled");
                        }

                    }
                    else if (!validate[0].errorMessage) {
                        $sametransferiban[0].value = false;
                        $('#form-field-checkbox_1_1_iban').removeAttr("checked")
                    }
                }
                else {
                    $sametransferiban[0].value = false;
                    for (var counter = 1; counter < selectedaccountcount ; counter++) {
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "";
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger('change');
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeAttr("disabled");
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeClass("disabled");

                        var selectedIban = jQuery('select[name="lstdetails[' + counter + '].SelectedIban"]');

                        if (selectedIban && selectedIban.length) {
                            selectedIban[0].value = "";
                            selectedIban.trigger('change');
                            selectedIban.removeAttr("disabled", true);
                            selectedIban.removeClass("disabled");
                        }

                        jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').val("");
                        jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').removeAttr("disabled", true);
                        jQuery('input[name="lstdetails[' + counter + '].IbanAccountNumber"]').removeClass("disabled");

                        jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').val("");
                        jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').removeAttr("disabled", true);
                        jQuery('input[name="lstdetails[' + counter + '].ConfirmIbanAccountNumber"]').removeClass("disabled");
                    }
                }
            });
        });

        $('#form-field-checkbox_1_1_cheque').change(function () {
            require(['parsley'], function () {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
                if ($('#form-field-checkbox_1_1_cheque').is(":checked")) {
                    var validate = true;
                    if (validate[0] == undefined && validate == true) {
                        $sametransfercheque[0].value = true;
                        for (var counter = 1; counter < selectedaccountcount ; counter++) {
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "C";
                            jQuery('#transfer_details-' + counter).hide();
                            jQuery('#iban_details-list-' + counter).hide();
                            jQuery('#WesternUniondiv-' + counter).hide();
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').attr("disabled", true);
                            jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').addClass("disabled");
                        }
                    }
                    else if (!validate[0].errorMessage) {
                        $sametransfercheque[0].value = false;
                        $('#form-field-checkbox_1_1_cheque').removeAttr("checked")
                    }
                }
                else {
                    $sametransfercheque[0].value = false;
                    for (var counter = 1; counter < selectedaccountcount ; counter++) {
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "";
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeAttr("disabled");
                        jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeClass("disabled");
                    }
                }
            });
        });

        $('#form-field-checkbox_1_1_norefund').on('change', function () {
            var selectedaccountcount = parseInt('@Model.lstdetails.Count()');
            if ($('#form-field-checkbox_1_1_norefund').is(":checked")) {
                $samenorefund[0].value = true;
                for (var counter = 1; counter < selectedaccountcount; counter++) {
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "N";
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger("change");
                    jQuery('#transfer_details-' + counter).hide();
                    jQuery('#iban_details-list-' + counter).hide();
                    jQuery('#WesternUniondiv-' + counter).hide();
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').attr("disabled", true);
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').addClass("disabled");
                    jQuery("#norefund_details-0").show();
                }
            } else {
                $samenorefund[0].value = false;
                for (var counter = 1; counter < selectedaccountcount; counter++) {
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]')[0].value = "";
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').trigger("change");
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeAttr("disabled");
                    jQuery('select[name="lstdetails[' + counter + '].SelectedRefundOption"]').removeClass("disabled");
                    jQuery("#norefund_details-0").show();
                }
            }
        });

        $(".form-field-TransferTo").change(function () {
            var index = $(this).attr("data-index");
            //  $("#attachment_details").show();
            var selectedFundOption = jQuery('#form-field-TransferTo-' + index).val();
            if (selectedFundOption == "N") {
                jQuery("#oknorefundnote_" + index).show();
            }
            else {
                jQuery("#oknorefundnote_" + index).hide();
            }
            if (selectedFundOption == "N" && index == 0) {
                jQuery("#norefund_details-0").show();
            }
            else {
                jQuery("#norefund_details-0").hide();
            }
            if (index == 0 && $(this).val() != "T" && $('#form-field-checkbox_1_1_transfer').prop('checked')) {

                $('#form-field-checkbox_1_1_transfer').closest('label').find('.form-field__fakecheckbox').click();
                //$('#form-field-checkbox_1_1_transfer').trigger('change');
            }

            if (index == 0 && $(this).val() != "C" && $('#form-field-checkbox_1_1_cheque').prop('checked')) {

                $('#form-field-checkbox_1_1_cheque').closest('label').find('.form-field__fakecheckbox').click();
                //$('#form-field-checkbox_1_1_transfer').trigger('change');
            }

            if (index == 0 && $(this).val() != "I" && $('#form-field-checkbox_1_1_iban').prop('checked')) {

                $('#form-field-checkbox_1_1_iban').closest('label').find('.form-field__fakecheckbox').click();
                //$('#form-field-checkbox_1_1_transfer').trigger('change');
            }
            if (index == 0 && $(this).val() != "Q" && $('#form-field-checkbox_1_1_westernunion').prop('checked')) {

                $('#form-field-checkbox_1_1_westernunion').closest('label').find('.form-field__fakecheckbox').click();
                //$('#form-field-checkbox_1_1_transfer').trigger('change');
            }

            if ($(this).val() == "I") {

                var mySelect = $('select[name="lstdetails[' + index + '].SelectedIban"]');

                if (mySelect && mySelect.length > 0) {
                    $("#iban_details-list-" + index).show();
                    $("#form-field-selectIban-" + index).val($("#form-field-selectIban-" + index + " option").eq(0).val());
                    $('#divIban-' + index).hide();
                }
                else {
                    $("#iban_details-" + index).show();
                }

                if ($("#IsAttachmentMandatorycheck").val() == "false" && $("#businessPartnerCategory").val() == "2") {
                    $("#form-field-IbanRefundDocument").attr("required", "");
                    $(".upload-required").show();
                }
                //$("#cheque_details-" + index).hide();
                $("#cheque_details-" + index).hide();
                $("#transfer_details-" + index).hide();
                jQuery('#WesternUniondiv-' + index).hide();
                jQuery("#form-field-address-" + index).val('');
                @*if (jQuery('#form-field-IbanRefundDocument-'+index).attr("required") == undefined)
                {
                    $('#documentname-'+index).html("@Translate.Text("moveout.updateibandocument")");
                }
                else
                {
                     $('#documentname-'+index).html("@Translate.Text("moveout.updateibandocumentmandatory")");
                 }*@
                $("#ChequeModal-" + index).hide();
                $("#western_union_selectcountry-" + index).hide();
                $("#western_union_selectstate-" + index).hide();
                $("#western_union_selectcity-" + index).hide();
                $("#western_union_selectcurrency-" + index).hide();
                //$("#checkboxwesterndiv").hide();
                $("#IBANModal-" + index).show();
                $("#description-for-westernlocation-"+index).hide();
            }
            else if ($(this).val() == "C") {
                $("#transfer_details-" + index).hide();
                $("#cheque_details-" + index).show();
                $("#iban_details-" + index).hide();
                $("#iban_details-list-" + index).hide();
                jQuery('#WesternUniondiv-' + index).hide();
                $("#western_union_selectcountry-" + index).hide();
                $("#western_union_selectstate-" + index).hide();
                $("#western_union_selectcity-" + index).hide();
                $("#western_union_selectcurrency-" + index).hide();
                //$("#checkboxwesterndiv").hide();
                $("#description-for-westernlocation-" + index).hide();
                jQuery("#form-field-ibannumber-" + index).val('');
                jQuery("#form-field-confirm-iban-number-" + index).val('');
                $('#documentname-' + index).html("@Translate.Text("moveout.updatechequedocument")");
                $("#ChequeModal-" + index).show();
                $("#IBANModal-" + index).hide();
                if ($("#IsAttachmentMandatorycheck").val() == "false") {
                    $("#form-field-IbanRefundDocument").removeAttr("required");
                    $(".upload-required").hide();
                }
            }
            else if ($(this).val() == "Q") {
                jQuery('#WesternUniondiv-' + index).show();
                $("#cheque_details-" + index).hide();
                $("#iban_details-" + index).hide();
                $("#iban_details-list-" + index).hide();
                $("#transfer_details-" + index).hide();
                $("#description-for-westernlocation-" + index).show();
                jQuery("#form-field-ibannumber-" + index).val('');
                jQuery("#form-field-confirm-iban-number-" + index).val('');
                $("#western_union_selectcountry-" + index).show();
               // $("#checkboxwesterndiv").show();
                $("#form-field-countrylist-" + index).find('option:not(:first)').remove();

                var url = "/api/IBANList/GetMasterDataWUlist";
                $.ajax({
                    url: url,
                   beforeSend: function () {
                    jQuery('.j105-drrg--loader').show();
                    jQuery('.j105-drrg--loader').css('top', $(window).scrollTop());
                    $('body').removeClass('unscrollable').addClass('unscrollable');
                },
                complete: function () {
                    jQuery('.j105-drrg--loader').hide();
                    $('body').removeClass('unscrollable');
                },
                    success: function (response) {
                        if (response != undefined || response != null) {
                            $.each(response, function (i, item) {
                                $("#form-field-countrylist-" + index).append($('<option>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                            });
                        }
                    },
                    error: function (error) {
                        console.log('GetMasterDataWUlist ' + error);
                    }
                });
            }
            else if ($(this).val() == "T") {
                $("#cheque_details-" + index).hide();
                $("#iban_details-" + index).hide();
                $("#iban_details-list-" + index).hide();
                jQuery('#WesternUniondiv-' + index).hide();
                $("#western_union_selectcountry-" + index).hide();
                $("#western_union_selectstate-" + index).hide();
                $("#western_union_selectcity-" + index).hide();
                $("#western_union_selectcurrency-" + index).hide();
                //$("#checkboxwesterndiv").hide();
                $("#description-for-westernlocation-" + index).hide();
                $("#transfer_details-" + index).show();
                jQuery("#form-field-ibannumber-" + index).val('');
                jQuery("#form-field-confirm-iban-number-" + index).val('');

                //if (!$('#form-field-checkbox_1_1_transfer').is(":checked")) {
                //    jQuery('.m43-accounttransfer').css('display', 'none');
                //}

                if ($("#IsAttachmentMandatorycheck").val() == "false") {
                    $("#form-field-IbanRefundDocument").removeAttr("required");
                    $(".upload-required").hide();
                }

            }
            else {
                // $("#attachment_details").hide();
                $("#cheque_details-" + index).hide();
                $("#iban_details-" + index).hide();
                $("#iban_details-list-" + index).hide();
                jQuery('#WesternUniondiv-' + index).hide();
                $("#western_union_selectcountry-" + index).hide();
                $("#western_union_selectstate-" + index).hide();
                $("#western_union_selectcity-" + index).hide();
                $("#western_union_selectcurrency-" + index).hide();
                //$("#checkboxwesterndiv").hide();
                $("#transfer_details-" + index).hide();
                $("#description-for-westernlocation-" + index).hide();
                jQuery("#form-field-ibannumber-" + index).val('');
                jQuery("#form-field-confirm-iban-number-" + index).val('');
                jQuery("#form-field-address-" + index).val('');
                $("#ChequeModal-" + index).hide();
                $("#IBANModal-" + index).hide();
                if ($("#IsAttachmentMandatorycheck").val() == "false") {
                    $("#form-field-IbanRefundDocument").removeAttr("required");
                    $(".upload-required").hide();
                }
            }
        });

        //western union state
        $(".form-field-countrylist").change(function () {
            var index = $(this).attr("data-index");
            var selectedvalue = $('#form-field-countrylist-' + index + ' option:selected').val();
            $('#form-field-statelist-' + index).find('option:not(:first)').remove();
            $('#form-field-currencylist-' + index).find('option:not(:first)').remove();

            var url = "/api/IBANList/GetWUStateList";
            $.ajax({
                url: url,
                type: "GET",
                data: {
                    SelectedCountry: selectedvalue
                },
                beforeSend: function () {
                    jQuery('.j105-drrg--loader').show();
                    jQuery('.j105-drrg--loader').css('top', $(window).scrollTop());
                    $('body').removeClass('unscrollable').addClass('unscrollable');
                    $('#western_union_selectstate-' + index).hide();
                    $('#western_union_selectcity-' + index).hide();
                    $('#western_union_selectcurrency-' + index).hide();
                },
                complete: function () {
                    jQuery('#form-field-countrylisttext-' + index).val($('#form-field-countrylist-' + index + ' option:selected').text());
                    jQuery('#form-field-statelisttext-' + index).val("");
                    jQuery('.j105-drrg--loader').hide();
                    $('body').removeClass('unscrollable');
                },
                success: function (response) {
                    if (response != undefined || response != null) {
                        if (response.stateflag) {
                            $("#western_union_selectstate-" + index).show();
                            $.each(response.statelst, function (i, item) {
                                $("#form-field-statelist-" + index).append($('<option>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                            });
                        }
                        else if (response.cityflag) {
                            $("#western_union_selectcity-" + index).show();
                            $.each(response.citylst, function (i, item) {
                                $("#form-field-citylist-" + index).append($('<option>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                            });
                        }
                        if (response.currencylst != null || response.currencylst != undefined) {
                            $("#western_union_selectcurrency-" + index).show();
                            $.each(response.currencylst, function (i, item) {
                                $("#form-field-currencylist-" + index).append($('<option>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                                if (response.currencylst.length == 1) {
                                    $("#form-field-currencylist-" + index).val(response.currencylst[0].Value);
                                }
                            });
                        }
                    }
                },
                error: function (error) {
                    console.log('WUStateList ' + error);
                }
            });
        });

        //western union city
        $(".form-field-statelist").change(function () {
            var index = $(this).attr("data-index");
            var selectedvalue = $('#form-field-statelist-' + index + ' option:selected').val();
            $('#form-field-citylist-' + index).find('option:not(:first)').remove();

            var url = "/api/IBANList/GetWUCityList";
            $.ajax({
                url: url,
                type: "GET",
                data: {
                    SelectedState: selectedvalue
                },
                beforeSend: function () {
                   jQuery('.j105-drrg--loader').show();
                    jQuery('.j105-drrg--loader').css('top', $(window).scrollTop());
                    $('body').removeClass('unscrollable').addClass('unscrollable');
                    $('#western_union_selectcity-' + index).hide();
                },
                complete: function () {
                    jQuery('#form-field-statelisttext-' + index).val($('#form-field-statelist-' + index + ' option:selected').text());
                    jQuery('.j105-drrg--loader').hide();
                    $('body').removeClass('unscrollable');
                },
                success: function (response) {
                    if (response != undefined || response != null) {
                        if (response.cityflag) {
                            $("#western_union_selectcity-" + index).show();
                            $.each(response.citylst, function (i, item) {
                                $("#form-field-citylist-" + index).append($('<option>', {
                                    value: item.Value,
                                    text: item.Text
                                }));
                            });
                        }
                    }
                },
                error: function (error) {
                    console.log('WUStateList ' + error);
                }
            });
        });

        $('.form-field-selectiban').on('change', function () {
            var index = $(this).attr("data-index");

            if (index == 0 && $('#form-field-checkbox_1_1_iban').prop('checked')) {

                $('#form-field-checkbox_1_1_iban').closest('label').find('.form-field__fakecheckbox').click();
                //$('#form-field-checkbox_1_1_transfer').trigger('change');
            }

            if ($(this).val() == "others") {
                //if ($('#divIban-' + index).hasClass('hidden'))
                //    $('#divIban-' + index).removeClass('hidden');
                $('#divIban-' + index).show();
                $("#form-field-confirm-iban-number-" + index).attr('data-parsley-equalto', '#form-field-ibannumber-' + index);
            }
            else if ($(this).val() != "") {
                console.log("IBAN Selected " + $(this).val());
                $('#divIban-' + index).hide();
                $("#form-field-ibannumber-" + index).val('' + $(this).val());
                $("#form-field-confirm-iban-number-" + index).attr('data-parsley-equalto', '#form-field-selectIban-' + index);
            }
            else {
                console.log("iban hidden");
                $('#divIban-' + index).hide();
                $("#form-field-confirm-iban-number-" + index).attr('data-parsley-equalto', '#form-field-selectIban-' + index);
            }

            $("#form-field-ibannumber-" + index).val('');
            $("#form-field-confirm-iban-number-" + index).val('');
        });

        jQuery(".form-field__input--datepicker").on('change', function () {
            var index = $(this).attr("data-index");

            if (index == 0 && $('#form-field-checkbox_1_1').is(":checked")) {
                var selectedaccountcount = parseInt('@Model.lstdetails.Count()');

                var disconnectionDate = jQuery('#form-field-movedate-0').val();
                for (var counter = 1; counter < selectedaccountcount ; counter++) {
                    //var $movedate = jQuery('#form-field-movedate-' + counter);
                    jQuery('#form-field-movedate-' + counter).val(disconnectionDate);
                    var $movedate2 = jQuery('input[name="lstdetails[' + counter + '].DisconnectDate_submit"]');
                    $movedate2[0].value = disconnectionDate;
                }
            }
        }); 

        jQuery('.accountmodalconfirm').each(function() {
            jQuery(this).on('click', function () {
                var _this = this;
                setTimeout(function () {
                    var selected = $(_this).closest('.m43-accountsel').find('.m43-accountsel__selected--dropdown').html();

                    $(_this).closest('.m43-accountsel').find('.m43-accounttransfer').html(selected);

                }, 100)
            });
        });

        jQuery('.accountmodalconfirm[data-account-count="0"]').on('click', function () {
            if ($('#form-field-checkbox_1_1_transfer').is(":checked")) {
                setTimeout(function () {
                var selected = $('.m43-accountsel__selected--dropdown[data-accountselector="acc-sel-ctrl-0"]').html();
                $('.m43-accounttransfer').html(selected);
                }, 100)
            };
        });

        $(".accountmodalconfirm").on('click', function () {
            $(".transferaccounts-error").addClass('hidden');
        });

        $('#moveoutdetailssubmitbutton').on('click', function (e) {
            // $('#move-out-details').submit(function (e) {
            jQuery('#move-out-details').parsley().validate();
           // if (validate) {
            var flag = true;
            var count = 0;

                jQuery('.form-field-TransferTo').each(function () {
                    if ($(this).val() == "T") {
                        if (count == 0) {
                            var closestaccount = $(this).closest('.evaccountwrapper').find('[data-transferacc="m43-transfer-account-selector"]').find(".m43-accountsel__selected--button").find('.m43-accountsel__details').find('span[data-acc-detail="acc_number"]');
                        } else {
                            var closestaccount = $(this).closest('.evaccountwrapper').find('[data-transferacc="m43-transfer-account-selector"]').find(".m43-accounttransfer").find('.m43-accountsel__details').find('span[data-acc-detail="acc_number"]');
                        }
                        var buttonaccount = $(this).closest('.evaccountwrapper').find('[data-transferacc="m43-transfer-account-selector"]');
                        
                        //  var testaccount = $(this).parent().parent().parent().find('[data-component="m43-account-selector"]').find(".m43-accountsel__details").closest('span').find('span');
                        if (closestaccount.html() == undefined || closestaccount.html() == "0") {
                            buttonaccount.closest('div').find(".transferaccounts-error").removeClass('hidden');
                            buttonaccount.closest('div').find(".transferaccounts-error").html("@Translate.Text("moveout.selectaccount")");
                            flag = false;
                        }
                        else {
                            buttonaccount.closest('div').find(".transferaccounts-error").addClass('hidden');
                        }
                    }
                    count += 1;
                });
                if (flag == false) {
                    e.preventDefault();
                    return false;
                }
           // }
        });
    });
</script>
<script src="~/scripts/External/nml/form-submit-validate.js"></script>