@using Sitecore.Globalization
@using Sitecore.Mvc
@using DEWAXP.Foundation.Helpers
@using DEWAXP.Feature.EV.Models.EVCharger
@using DEWAXP.Foundation.Content
@model DEWAXP.Feature.EV.Models.EVCharger.EVAccountSetup

@{
    var direction = Sitecore.Context.Language.CultureInfo.TextInfo.IsRightToLeft ? "ltr" : "rtl";
}
@Html.Sitecore().Placeholder("j18/m26-page-title")
<div class="grid__row">
    <div class="grid__column grid__column--12 grid__column--form">
        @Html.Sitecore().Placeholder("j18/m14-formatted-text")
        @Html.Sitecore().Placeholder("j18/m38-step-tracker")
        @Html.Partial("~/Views/Feature/CommonComponents/Shared/_SubmissionError.cshtml")
    </div>
</div>
<div class="grid">
    <div class="grid__row">
        <div class="grid__column grid__column--12 grid__column--form j104_1-move-out" id="evBPAccountSetup">

            @using (Html.BeginRouteForm(Sitecore.Mvc.Configuration.MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form update-details-form", @id = "applyEVCardForm", data_form = "true", data_parsley_focus = "none", @data_submit_validate = "enabled", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" value="@Model.AccountType" id="hdnAccountType" />
                <div class="form-field">

                    <p class="form-field__radio" style="width: 50%;float: left;margin-top: 0px;">
                        <label for="rdbPersonal">
                            @Html.RadioButtonFor(m => m.AccountType, (int)AccountType.Personal, new
                       {
                           @class = "form-field__input form-field__input--radio",
                           @aria_describedby = "description-for-radio_1_1",
                           @id = "rdbPersonal",

                       })
                            <span class="form-field__fakeradio focus-enabled">
                                <span class="verification--key">@Translate.Text("EV.Personal Account")</span>
                            </span>
                        </label>
                    </p>
                    <p class="form-field__radio" style="width: 50%;float: right;margin-top: 0px;">
                        <label for="rdbBusiness">
                            @Html.RadioButtonFor(m => m.AccountType, (int)AccountType.Business, new
                       {
                           @class = "form-field__input form-field__input--radio",
                           @aria_describedby = "description-for-radio_1_2",
                           @id = "rdbBusiness",
                       })
                            <span class="form-field__fakeradio focus-enabled">
                                <span class="verification--key">@Translate.Text("EV.Business Account")</span>
                            </span>
                        </label>
                    </p>
                    <div id="description-for-pwl28lhdv" class="form-field__messages"></div>
                </div>
                <div class="form-field" id="personal-details-placeholder">
                    <div class="form-field" id="divIdTypes">
                        <div class="form-field__checkbox ">
                            <label for="form-field-IdType">
                                <input class="form-field__input form-field__input--checkbox" id="form-field-IdType" name="chkIdType" type="checkbox" value="false" aria-describedby="description-for-IdTypes" checked="checked">
                                <span class="form-field__fakecheckbox focus-enabled">@Translate.Text("EV.UAE_NonUAE_Residents")</span>
                            </label>
                        </div>
                        <div id="description-for-IdTypes" class="form-field__messages">
                        </div>
                    </div>

                    <div class="form-field form-field--select form-field--select-single">
                        <label for="form-field-idtype" class="form-field__label">
                            <span id="spEmirate"> @Translate.Text("EV ID Type")</span>
                            <span class="form-field__label-required aria-only">(required)</span>
                        </label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                            @Html.DropDownListFor(model => model.IdType, Model.SupportingDocTypes, Translate.Text("EV Select Emirate"), new
                       {
                           @class = "form-field__input form-field__input--select form-field__input--select-full",
                           @id = "form-field-idtype",
                           @required = "required",
                           @data_parsley_required_message = Translate.Text("EV Select Id Type "),
                           @data_parsley_errors_container = "#description-for-idtype",
                           @aria_describedby = "description-for-w1mfbetd3",
                       })

                        </span>
                        <div id="description-for-idtype" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.IdType, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>


                    <div class="form-field form-field--text" id="divIdTypeNumber">
                        <label for="form-field-IdNumber" id="lblIdTypeNumber" class="form-field__label">
                            <span id="spanIdNumber">
                                @Translate.Text("EV.EmiratesNumber")
                            </span>
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.IdNumber,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "IdNumber",
                             @id = "form-field-IdNumber",
                             @placeholder = Translate.Text("EV.EmiratesNumberPlaceHolder"),
                             @required = "",
                             @data_parsley_emiratesid_message = @Translate.Text(DictionaryKeys.MoveIn.InvalidEmiratesId),
                             @data_parsley_required_message = Translate.Text("EV.errorMessage_EmirateNumber"),
                             @data_parsley_errors_container = "#description-for-IdNumber",
                             @aria_describedby = "description-for-IdNumber",
                             @data_parsley_emiratesid = ""
                         })
                        </span>
                        <div id="description-for-IdNumber" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.IdNumber, "", new { @class = "parsley-errors-list" })
                        </div>
                        <div id="evregistration-error" dir="@direction" class="form-field__messages hidden" style="color:#ff0000;cursor:pointer;padding-bottom:15px;">
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divEmailAddress">
                        <label for="form-field-EmailAddress" id="lblEmailAddress" class="form-field__label">
                            @Translate.Text("EV.Email Address")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.EmailAddress,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "EmailAddress",
                             @type = "email",
                             @id = "form-field-EmailAddress",
                             @placeholder = Translate.Text("EV.Email Address"),
                             @required = "",
                             @data_parsley_error_message = Translate.Text("EV.errorMessage_EmailAddress"),
                             @data_parsley_errors_container = "#description-for-EmailAddress",
                             @aria_describedby = "description-for-EmailAddress",
                         })
                        </span>
                        <div id="description-for-EmailAddress" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.EmailAddress, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divMobileNumber">
                        <label for="form-field-MobileNumber" id="lblMobileNumber" class="form-field__label">
                            @Translate.Text("EV.Mobile Number")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--prefixed form-field__input-wrapper--mobile-number">
                            @*@Html.TextBoxFor(x => x.MobileNumber,
            new
            {
                @class = "form-field__input form-field__input--text form-field__input--prefixed keep-ltr",
                @name = "MobileNumber",
                @id = "form-field-MobileNumber",
                @type = "tel",
                @placeholder = @Translate.Text("EV.Mobile Number"),
                @required = "",
                @data_parsley_error_message = Translate.Text("EV.errorMessage_MobileNumber"),
                @data_parsley_errors_container = "#description-for-MobileNumber",
                @aria_describedby = "description-for-MobileNumber",
                @data_parsley_type = "digits",
            })*@
                            <input class="form-field__input form-field__input--text form-field__input--prefixed keep-ltr"
                                   id="form-field-MobileNumber"
                                   name="MobileNumber"
                                   type="tel"
                                   placeholder="@Translate.Text("EV.Mobile Number")"
                                   aria-describedby="description-for-MobileNumber"
                                   required=""
                                   value="@Model.MobileNumber"
                                   data-parsley-error-message="@Translate.Text("EV.errorMessage_MobileNumber")"
                                   data-parsley-errors-container="#description-for-MobileNumber"
                                   data-parsley-mobile_number=""
                                   data-parsley-type="digits" />
                        </span>                        
                        <div id="description-for-MobileNumber" class="form-field__messages">
                            <p class="form-field__description form-field__description-icon-wrapper">
                                <span class="form-field__description-icon icon-new-announcement rot180 line-h0"></span>@Translate.Text("EV Mobile Info")
                            </p>
                            @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "parsley-errors-list" })
                        </div>

                    </div>


                    <div class="form-field form-field--text ">
                        <label for="form-field-setusername" class="form-field__label">
                            @Translate.Text("username label")
                            <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            <input type="text"
                                   name="Username"
                                   id="form-field-setusername"
                                   class="form-field__input form-field__input--text"
                                   @*aria-required="true"*@
                                   aria-describedby="description-for-setusername"
                                   required="required"
                                   autocomplete="off"
                                   data-parsley-dewausername = ""
                                   maxlength="20"
                                   placeholder="@Translate.Text("username label")"
                                   value="@Model.Username"
                                   data-parsley-error-message="@Translate.Text("register username validation message")"
                                   data-parsley-errors-container="#description-for-setusername" />
                        </span>
                        <div id="description-for-setusername" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.Username)
                        </div>
                    </div>
                    <div class="form-field form-field--text ">
                        <label for="form-field-password" class="form-field__label">
                            @Translate.Text("password label")
                            <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            <input type="password"
                                   name="Password"
                                   id="form-field-password"
                                   class="form-field__input form-field__input--text"
                                   @*aria-required="true"*@
                                   aria-describedby="description-for-set-password"
                                   autocomplete="off"
                                   required="required"
                                   placeholder="@Translate.Text("password label")"
                                   data-parsley-password=""
                                   data-parsley-error-message="@Translate.Text("login password validation message")"
                                   data-parsley-password-message="@Translate.Text("login password validation message")"
                                   data-parsley-errors-container="#description-for-set-password"
                                   data-parsley-trigger="focusout" />
                        </span>
                        <div id="description-for-set-password" class="form-field__messages">
                            <p class="form-field__description">@Translate.Text("password description text")</p>
                            @Html.ValidationMessageFor(x => x.Password)
                        </div>
                    </div>
                    <div class="form-field form-field--text ">
                        <label for="form-field-set-confirm-password" class="form-field__label">
                            @Translate.Text("confirm password label")
                            <span class="form-field__label-required aria-only">@Translate.Text("required")</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            <input type="password"
                                   name="ConfirmPassword"
                                   id="form-field-set-confirm-password"
                                   class="form-field__input form-field__input--text"
                                   aria-required="true"
                                   aria-describedby="description-for-set-confirm-password"
                                   autocomplete="off"
                                   placeholder="@Translate.Text("confirm password label")"
                                   data-parsley-equalto="#form-field-password"
                                   data-parsley-error-message="@Translate.Text("Password mismatch error")"
                                   data-parsley-errors-container="#description-for-set-confirm-password"
                                   data-parsley-trigger="focusout" />
                        </span>
                        <div id="description-for-set-confirm-password" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.ConfirmPassword)
                        </div>
                    </div>

                    <div class="form-field form-field--select form-field--select-single" id="divTitle">
                        <label for="form-field-EVTitle" class="form-field__label">@Translate.Text("EV.Title") <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span></label>
                        <label class="form-field__input-wrapper form-field__input-wrapper--select">
                            @Html.DropDownListFor(x => x.Title, (IEnumerable<SelectListItem>)ViewBag.Title,
                 Sitecore.Globalization.Translate.Text("EV.Select"),
                 new
                 {
                     @class = "form-field__input form-field__input--select form-field__input--select-full",
                     @id = "form-field-EVTitle",
                     @name = "select_EVTitle",
                     @aria_describedby = "description-for-EVTitle",
                     @required = "",
                     @data_parsley_error_message = @Translate.Text("EV.TitleErrorMessage"),
                     @data_parsley_errors_container = "#description-for-EVTitle",
                     @data_parsley_id = "15"
                 })
                        </label>
                        <div id="description-for-EVTitle" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.Title, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divCompanyName" style="display:none;">
                        <label for="form-field-companyName" id="lblCompanyName" class="form-field__label">
                            @Translate.Text("EV.CompanyName")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.CompanyName,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "CompanyName",
                             @id = "form-field-companyName",
                             @placeholder = Translate.Text("EV.CompanyName"),
                             @required = "",
                             @data_parsley_error_message = Translate.Text("EV.errorMessage_companyName"),
                             @data_parsley_errors_container = "#description-for-companyName",
                             @aria_describedby = "description-for-companyName",
                         })
                        </span>
                        <div id="description-for-companyName" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.CompanyName, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divFirstName">
                        <label for="form-field-vatnumber" id="lblFirstName" class="form-field__label">
                            @Translate.Text("EV.First Name")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.FirstName,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "FirstName",
                             @id = "form-field-FirstName",
                             @placeholder = Translate.Text("EV.First Name"),
                             @required = "",
                             @data_parsley_error_message = Translate.Text("EV.errorMessage_FirstName"),
                             @data_parsley_errors_container = "#description-for-FirstName",
                             @aria_describedby = "description-for-FirstName",
                         })
                        </span>
                        <div id="description-for-FirstName" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divLastName">
                        <label for="form-field-LastName" id="lblLastName" class="form-field__label">
                            @Translate.Text("EV.Last Name")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.LastName,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "LastName",
                             @id = "form-field-LastName",
                             @placeholder = Translate.Text("EV.Last Name"),
                             @required = "",
                             @data_parsley_error_message = Translate.Text("EV.errorMessage_LastName"),
                             @data_parsley_errors_container = "#description-for-LastName",
                             @aria_describedby = "description-for-LastName",
                         })
                        </span>
                        <div id="description-for-LastName" class="form-field__messages">
                            @*@Html.ValidationMessageFor(x => x.LastName, "", new { @class = "parsley-errors-list" })*@
                        </div>
                    </div>


                    <div class="form-field form-field--select form-field--select-single" id="divNationality">
                        <label for="form-field-Nationality" class="form-field__label">@Translate.Text("EV.Nationality") <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span></label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                            @Html.DropDownListFor(x => x.Nationality, (IEnumerable<SelectListItem>)ViewBag.Nationalities,
                 Sitecore.Globalization.Translate.Text("EV.Select"),
                 new
                 {
                     @class = "form-field__input form-field__input--select form-field__input--select-full",
                     @id = "form-field-Nationality",
                     @name = "select_EVNationality",
                     @aria_describedby = "description-for-EVNationality",
                     @required = "",
                     @data_parsley_error_message = @Translate.Text("EV.NationalityErrorMessage"),
                     @data_parsley_errors_container = "#description-for-EVNationality",
                     @data_parsley_id = "15"
                 })
                        </span>
                        <div id="description-for-EVNationality" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.Nationality, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--select form-field--select-single" id="divEmirate">
                        <label for="form-field-EVEmirate" class="form-field__label">@Translate.Text("EV.Emirate") <span class="form-field__label-required aria-only">(@Translate.Text("required"))</span></label>
                        <span class="form-field__input-wrapper form-field__input-wrapper--select">
                            @Html.DropDownListFor(x => x.Emirate, (IEnumerable<SelectListItem>)ViewBag.Emirates,
                 Sitecore.Globalization.Translate.Text("EV.Select"),
                 new
                 {
                     @class = "form-field__input form-field__input--select form-field__input--select-full",
                     @id = "form-field-EVEmirate",
                     @name = "select_EVEmirate",
                     @aria_describedby = "description-for-EVEmirate",
                     @required = "",
                     @data_parsley_error_message = @Translate.Text("EV.EmirateErrorMessage"),
                     @data_parsley_errors_container = "#description-for-EVEmirate",
                     @data_parsley_id = "15"
                 })
                        </span>
                        <div id="description-for-EVEmirate" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.Emirate, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>

                    <div class="form-field form-field--text" id="divPOBox">
                        <label for="form-field-POBox" id="lblPOBox" class="form-field__label">
                            @Translate.Text("EV.POBox")
                            <span class="form-field__label-required aria-only">(@Sitecore.Globalization.Translate.Text("optional"))</span>
                        </label>
                        <span class="form-field__input-wrapper">
                            @Html.TextBoxFor(x => x.POBox,
                         new
                         {
                             @class = "form-field__input form-field__input--text",
                             @name = "POBox",
                             @type = "number",
                             @id = "form-field-POBox",
                             @placeholder = Translate.Text("EV.POBox"),
                             @required = "",
                             @data_parsley_error_message = Translate.Text("EV.errorMessage_POBox"),
                             @data_parsley_errors_container = "#description-for-POBox",
                             @aria_describedby = "description-for-POBox",
                             @lang = "en",
                             @minlengh = 6,
                             @maxlength = 6,
                             @data_parsley_pobox = "",
                             @step = "any"
                         })
                        </span>
                        <div id="description-for-POBox" class="form-field__messages">
                            @Html.ValidationMessageFor(x => x.POBox, "", new { @class = "parsley-errors-list" })
                        </div>
                    </div>



                    <fieldset class="fieldset" id="divIdDocument">
                        <legend class="legend" id="legendDocument">@Translate.Text("EV.EmiratesAttachment")</legend>
                        <div class="form-field form-field--upload">
                            <div class="form-field__input-wrapper">
                                <div class="form-field__preview-wrapper">
                                    <img src="/images/preview@2x.png" data-src="/images/preview@2x.png" class="form-field__preview" aria-hidden="true" role="presentation" alt="" data-uploader-image="AttachedDocument">
                                </div>
                                <div class="form-field__uploader-details">
                                    <label for="form-field-AttachedDocument" class="form-field__label">
                                        <strong class="form-field__label-description" id="uploadfiletext">@Translate.Text("EV.EmirateUploadFile")</strong>
                                    </label>
                                    <div>
                                        <label>
                                            @Html.TextBoxFor(m => m.AttachedDocument,
                                        new
                                        {
                                            type = "file",
                                            @class = "form-field__input form-field__input--upload",
                                            @id = "form-field-AttachedDocument",
                                            @name = @Translate.Text("upload"),
                                            @aria_describedby = "description-for-AttachedDocument",
                                            @required = "",
                                            @data_parsley_error_message = @Translate.Text("Please select a file"),
                                            @data_parsley_required_message = @Translate.Text("EV.AttachedDocumentrequiredmessage"),
                                            @data_parsley_errors_container = "#errors-for-AttachedDocument",
                                            @data_uploader_field = "AttachedDocument",
                                            @accept = "image/png,image/x-png,image/jpeg,image/jpg,image/bmp,image/gif,application/pdf,text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                            @data_parsley_id = "16"
                                        })

                                            <span class="button button--primary button--next button--small focus-enabled">@Translate.Text("Choose")</span>
                                        </label>
                                    </div>
                                    <p class="form-field__input--upload-filename" data-uploader-filename="AttachedDocument"></p>
                                    <p>
                                        <button class="button button--text button--remove hidden" data-uploader-remove="AttachedDocument">@Translate.Text("Remove")</button>
                                    </p>
                                </div>
                            </div>
                            <div id="description-for-AttachedDocument" class="form-field__messages">
                                <div id="errors-for-AttachedDocument">
                                    @Html.ValidationMessageFor(x => x.AttachedDocument, "", new { @class = "parsley-errors-list" })
                                </div>
                                <p class="form-field__description">@Translate.Text(DictionaryKeys.MoveIn.MaxFileSize)</p>
                            </div>
                        </div>
                    </fieldset>

                    @*<div class="form-field form-field--toggles" id="divTermsConditions">
                            <div class="form-field__checkbox  last">
                                <label>
                                    <input class="form-field__input form-field__input--checkbox" id="form-field-checkbox_1_1" name="AgreedToPayment" type="checkbox" value="true" aria-describedby="description-for-accept-terms" required="" data-parsley-error-message="@Translate.Text("Error Terms Agreement")" data-parsley-errors-container="#description-for-accept-terms" data-parsley-multiple="checkbox_1_1" data-parsley-id="23">
                                    <span class="form-field__fakecheckbox focus-enabled">@Translate.Text("Terms Agreement")</span>
                                </label>
                            </div>
                            <fieldset class="fieldset ">
                                @Html.Sitecore().Placeholder("j26/m39-modal-overlay")
                            </fieldset>
                            <div id="description-for-accept-terms" class="form-field__messages"></div>
                            <input type="hidden" name="AgreedToPayment" value="false" />
                        </div>*@

                    <div class="form-field__button">
                        <button type="submit" id="evsubmitbutton" class="button button--primary button--next" data-submission-text="@Translate.Text("Submitting")...">@Translate.Text("Submit")</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    docReady(function () {
        // $('input[name="IdType"]').val("Z00002");
        //jQuery("input[name='MobileNumber']").attr('data-parsley-mobile_number', "");
        //var Idtype = $('input[name="IdType"]').val();
        //var Idnumber = $('#form-field-IdNumber').val();
        //var category = $("#rdbPersonal").val();
        //if ($("#rdbBusiness").is(':checked')) {
        //    category = $("#rdbBusiness").val();
        //}
        //if (Idnumber != "")
        //{
        //    validateIDnumber(Idnumber, Idtype, category);
        //}
        if ($("#form-field-MobileNumber").val() != "" && $("#form-field-MobileNumber").val().indexOf('*') != -1)
        {
            $("#form-field-MobileNumber").attr("type", "text");
            $("#form-field-MobileNumber").removeAttr("data-parsley-type");
            $("#form-field-MobileNumber").removeAttr('data-parsley-mobile_number');
            $("#form-field-AttachedDocument").removeAttr("required");
        }

        if ($("#hdnAccountType").val() == "2") {
            $("#rdbPersonal").removeAttr('checked');
            $("#rdbBusiness").attr('checked', 'checked');
            BusinessType();
        }
        else {
            $("#rdbBusiness").removeAttr('checked');
            $("#rdbPersonal").attr('checked', 'checked');
            personType();
        }


        $('#form-field-IdType').change(function () {
            $("#form-field-FirstName,#form-field-LastName,#form-field-EmailAddress,#form-field-MobileNumber,#form-field-POBox").val('');
            $("#form-field-FirstName,#form-field-LastName,#form-field-POBox").attr("readonly", false);
            $('#form-field-Nationality option:not(:selected)').prop('disabled', false);
            $('#form-field-EVEmirate option:not(:selected)').prop('disabled', false);
            $("#description-for-IdNumber").html('');
            $("#evregistration-error").html('');
            if ($(this).is(":checked")) {
                EmirateUser();
            }
            else {
                passportUser();
            }
        });
        $("#form-field-MobileNumber").on("keyup", function (e) {
            if ((e.keyCode == 8 || e.keyCode == 46) && ($("#form-field-MobileNumber").val().length < 9) && !($("#form-field-MobileNumber").attr("type") == "tel")) {
                $("#form-field-MobileNumber").attr("type", "tel");
                $("#form-field-MobileNumber").attr("data-parsley-type", "digits");
                $("#form-field-MobileNumber").attr('data-parsley-mobile_number', "");
            }
        });

        $("#form-field-IdNumber").on("keyup", function (e)
        {
            if ($("#form-field-IdNumber").val() == "");
            {
                $("#evregistration-error").hide();
            }
        });
        jQuery('#form-field-IdNumber').on('change', function (e) {
        //$(document).on('blur', '#form-field-IdNumber', function (e)
        //{
            e.preventDefault();
            $("#evregistration-error").hide();
            var Idtype = $('input[name="IdType"]').val();
            var Idnumber = $('#form-field-IdNumber').val();
            var category = $("#rdbPersonal").val();
            if ($("#rdbBusiness").is(':checked')) {
                category = $("#rdbBusiness").val();
            }

            if (Idnumber != "" && Idtype == "Z00002" && $('#form-field-IdNumber').val().length == 15 && $('#form-field-IdNumber').val().indexOf('784') == 0)
            {
                validateIDnumber(Idnumber, Idtype, category);
            }
            else if (Idnumber != "" && (Idtype == "Z00001" || Idtype == "Z00005"))
            {
                validateIDnumber(Idnumber, Idtype, category);
            }
        });

        $('input[name="AccountType"]').change(function () {

            $("#form-field-FirstName,#form-field-LastName,#form-field-EmailAddress,#form-field-MobileNumber,#form-field-POBox").val('');
            $("#form-field-FirstName,#form-field-LastName,#form-field-POBox").attr("readonly", false);
            $('#form-field-Nationality option:not(:selected)').prop('disabled', false);
            $('#form-field-EVEmirate option:not(:selected)').prop('disabled', false);
            $("#form-field-MobileNumber").attr("type", "tel");
            $("#form-field-MobileNumber").attr("data-parsley-type", "digits");
            $("#form-field-MobileNumber").attr('data-parsley-mobile_number', "");
            $("#description-for-IdNumber").html('');
            $("#evregistration-error").html('');
            if ($(this).val() == "1") {
                $("#divCompanyName").hide();
                $("#divTitle,#divFirstName,#divLastName,#divNationality,#divIdTypes").show();
                $('#form-field-IdType').attr('checked', true);
                $("#form-field-companyName").removeAttr("required");
                $("#form-field-EVTitle,#form-field-FirstName,#form-field-LastName,#form-field-Nationality").attr("required", "");

                if ($('#form-field-IdType').is(":checked")) {
                    EmirateUser();
                }
                else {
                    passportUser();
                }
            }
            else {
                BusinessType();
            }
        });
    });

    function validateIDnumber(Idnumber, Idtype, category)
    {
        var url = "/api/sitecore/evcharger/getEVPersonalDetails";
        jQuery.ajax({
            url: url,
            traditional: true,
            type: "POST",
            data: AddForgeryToken({
                idnumber: Idnumber,
                idtype: Idtype,
                category: category
            }, "applyEVCardForm"),
            beforeSend: function () {
                window.attachSpinner('#personal-details-placeholder', { zIndex: 1, bgColor: "#fff", bgPosition: "top center" });
                jQuery('#evsubmitbutton').removeAttr("disabled");
                jQuery('#evsubmitbutton').show();
            },
            complete: function (response) {
                window.detachSpinner('#personal-details-placeholder', { zIndex: 1, bgColor: "#fff", bgPosition: "top center" });
            },
            success: function (response) {
                if (response != null && response.status == true && response.Data != null) {
                    $("#form-field-FirstName,#form-field-LastName,#form-field-POBox,#form-field-EVEmirate,#form-field-companyName").val('');
                    var result = JSON.parse(response.Data);
                    if (result.FirstName != null) {
                        //$("#form-field-FirstName").val(result.FirstName);
                        //$("#form-field-FirstName").attr("readonly", true);
                        $("#divFirstName").hide();
                        $("#divTitle").hide();
                    }
                    else {
                        $("#form-field-FirstName").attr("readonly", false);
                    }
                    if (result.LastName != null) {
                        //$("#form-field-LastName").val(result.LastName);
                        //$("#form-field-LastName").attr("readonly", true);
                        $("#divLastName").hide();
                    }
                    else {
                        $("#form-field-LastName").attr("readonly", false);
                    }

                    //if (result.EmailAddress != null) {
                    //    $("#form-field-EmailAddress").val(result.EmailAddress);
                    //}


                    //if (result.MobileNumber != null) {
                    //    //if ($("#form-field-MobileNumber").val() == "") {
                    //        $("#form-field-MobileNumber").val(result.MobileNumber);
                    //        $("#form-field-MobileNumber").attr("type", "text");
                    //        $("#form-field-MobileNumber").removeAttr("data-parsley-type");
                    //        $("#form-field-MobileNumber").removeAttr('data-parsley-mobile_number');
                    //        $("#form-field-AttachedDocument").removeAttr("required");
                    //   // }
                    //}
                    //else {
                    //    // $("#form-field-MobileNumber").attr("readonly", false);
                    //    $("#form-field-MobileNumber").attr("type", "tel");
                    //    $("#form-field-MobileNumber").attr("data-parsley-type", "digits");
                    //    $("#form-field-MobileNumber").attr('data-parsley-mobile_number', "");
                    //    $("#form-field-AttachedDocument").attr("required", "");
                    //}

                    //if (result.POBox != null) {
                    //    $("#form-field-POBox").val(result.POBox);
                    //    //$("#form-field-POBox").attr("readonly", true);
                    //}
                    //else {
                    //    //$("#form-field-POBox").attr("readonly", false);
                    //}

                    //if (result.Nationality != null) {
                    //    $("#form-field-Nationality").val(result.Nationality);
                    //    $('#form-field-Nationality option:not(:selected)').prop('disabled', true);
                    //}
                    //else {
                    //    $('#form-field-Nationality option:not(:selected)').prop('disabled', false);
                    //}

                    //if (result.Emirate != null) {
                    //    $("#form-field-EVEmirate").val(result.Emirate);
                    //  //  $('#form-field-EVEmirate option:not(:selected)').prop('disabled', true);
                    //}
                    //else {
                    //   // $('#form-field-EVEmirate option:not(:selected)').prop('disabled', false);
                    //}

                    //$("#form-field-EVEmirate").val(result.Emirate);
                    if ($("#rdbBusiness").is(':checked')) {
                        $("#divCompanyName").show();
                        if (result.FirstName != null) {
                           // $("#form-field-companyName").val(result.FirstName);
                            //$("#form-field-companyName").attr("readonly", true);
                            $("#divCompanyName").hide();
                        }
                        else {
                            $("#form-field-companyName").attr("readonly", false);
                        }
                    }
                    else {
                        if (result.FirstName != null) {
                            //$("#form-field-FirstName").val(result.FirstName);
                            //$("#form-field-FirstName").attr("readonly", true);
                            $("#divFirstName").hide();
                        }
                        else {
                            $("#form-field-FirstName").attr("readonly", false);
                        }
                    }
                }
                else {
                    if (response.Message != null) {
                        $("#evregistration-error").html(response.Message);
                        $("#evregistration-error").show();
                    }

                    $("#form-field-Nationality").val('AE');
                    $("#form-field-FirstName,#form-field-LastName,#form-field-EmailAddress,#form-field-MobileNumber,#form-field-POBox,#form-field-EVEmirate,#form-field-companyName").val('');
                    $("#form-field-FirstName,#form-field-LastName").attr("readonly", false);
                    $('#form-field-Nationality option:not(:selected)').prop('disabled', false);
                    // $('#form-field-EVEmirate option:not(:selected)').prop('disabled', false);
                    $("#form-field-MobileNumber").attr("type", "tel");
                    $("#form-field-MobileNumber").attr("data-parsley-type", "digits");
                    $("#form-field-MobileNumber").attr('data-parsley-mobile_number', "");
                    $("#form-field-AttachedDocument").attr("required", "");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.status == 429) {
                    $("#evregistration-error").html(jqXHR.statusText);
                    $("#evregistration-error").show();
                    jQuery('#evsubmitbutton').attr("disabled", true);
                    jQuery('#evsubmitbutton').hide();
                }
            }
        });
    }

    function EmirateUser() {
        $('input[name="IdType"]').val("Z00002");
        $("#spanIdNumber").text("@Translate.Text("EV.EmiratesNumber")");
        $("#legendDocument").text("@Translate.Text("EV.EmiratesAttachment")");
        $("#uploadfiletext").text("@Translate.Text("EV.EmirateUploadFile")");
        $('#form-field-IdNumber').removeAttr("type", "");
        $('#form-field-IdNumber').removeAttr("data-parsley-passportid", "");
        $('#form-field-IdNumber').attr("type", "number");
        $('#form-field-IdNumber').attr("data-parsley-emiratesid", "");
        $("#form-field-IdNumber").attr("data-parsley-error-message", "@Translate.Text("EV.errorMessage_EmirateNumber")");
        $("#form-field-IdNumber").attr("placeholder", "@Translate.Text("EV.EmiratesNumberPlaceHolder")");
        $('#form-field-IdType').attr('checked', 'checked');
        //$('#form-field-IdNumber').val("");
        //$('#form-field-EmailAddress').val("");
        //$('#form-field-MobileNumber').val("");
    }
    function passportUser() {
        $('input[name="IdType"]').val("Z00001");
        $('#form-field-IdType').prop('checked', false);
        $("#spanIdNumber").text("@Translate.Text("EV.PassportNumber")");
        $("#legendDocument").text("@Translate.Text("EV.PassportAttachment")");
        $("#uploadfiletext").text("@Translate.Text("EV.PassportUploadFile")");
        $('#form-field-IdNumber').removeAttr("data-parsley-emiratesid", "");
        $('#form-field-IdNumber').removeAttr("type", "");
        $('#form-field-IdNumber').attr("type", "text");
        $('#form-field-IdNumber').attr("data-parsley-passportid", "");
        $("#form-field-IdNumber").attr("data-parsley-error-message", "@Translate.Text("EV.errorMessage_PassportNumber")");
        $("#form-field-IdNumber").attr("placeholder", "@Translate.Text("EV.PassportNumberPlaceHolder")");
        //$('#form-field-IdNumber').val("");
        //$('#form-field-EmailAddress').val("");
        //$('#form-field-MobileNumber').val("");
    }

    function personType() {
        $("#divCompanyName").hide();
        $("#divTitle,#divFirstName,#divLastName,#divNationality,#divIdTypes").show();
        $("#form-field-companyName").removeAttr("required");
        $("#form-field-EVTitle,#form-field-FirstName,#form-field-LastName,#form-field-Nationality").attr("required", "");
        $("#form-field-companyName").val("");

        if (jQuery('input[name="IdType"]').val() == "Z00001") // Passport Number = Z00001 , Emirate = Z00002
        {
            passportUser();
        }
        else
        {
            EmirateUser(); // Passport Number = Z00001 , Emirate = Z00002
        }
    }

    function BusinessType() {
        $("#form-field-EVTitle,#form-field-FirstName,#form-field-LastName,#form-field-Nationality").removeAttr("required");
        $("#form-field-FirstName,#form-field-LastName").val("");
        $("#divTitle,#divFirstName,#divLastName,#divNationality,#divIdTypes").hide();
        $("#form-field-companyName").attr("required", "");
        $("#divCompanyName").show();
        $("#form-field-Nationality").val("");
        $('input[name="IdType"]').val("Z00005"); // Trade Licence Number
        $("#spanIdNumber").text("@Translate.Text("EV.TradeLicenceNumber")");
        $("#legendDocument").text("@Translate.Text("EV.TradeLicenceAttachment")");
        $("#uploadfiletext").text("@Translate.Text("EV.TradeLicenceUploadFile")");
        $('#form-field-IdNumber').removeAttr("data-parsley-emiratesid", "");
        $('#form-field-IdNumber').removeAttr("type", "");
        $('#form-field-IdNumber').attr("data-parsley-passportid", "");
        $('#form-field-IdNumber').attr("type", "text");
        $("#form-field-IdNumber").attr("data-parsley-error-message", "@Translate.Text("EV.errorMessage_TrandeLicence")");
        $("#form-field-IdNumber").attr("placeholder", "@Translate.Text("EV.TradeLicenceNumberPlaceHolder")");
        //$('#form-field-IdNumber').val("");
        //$('#form-field-EmailAddress').val("");
        //$('#form-field-MobileNumber').val("");
    }

</script>
<script src="~/scripts/External/nml/form-submit-validate.js"></script>