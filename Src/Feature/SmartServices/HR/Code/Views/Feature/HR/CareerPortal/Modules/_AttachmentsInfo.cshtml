@model DEWAXP.Feature.HR.Models.CareerPortal.CandidateProfile
@using DEWAXP.Foundation.Helpers
@using Glass.Mapper.Sc.Fields
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Globalization
@using DEWAXP.Feature.HR.Models.CareerPortal
@using _scPageItemId = DEWAXP.Foundation.Content.ScPageItemId
@using DEWAXP.Foundation.Content

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, new { }, FormMethod.Post, new { @id = "candidateprofile" + Model.Section, @name = "j126-career-portal-profile", @data_parsley_focus = "true", @data_form = "true", @data_submit_validate = "enabled", enctype = "multipart/form-data", @novalidate = string.Empty, @autocomplete = "off" }))
{
    @Html.Sitecore().FormHandler("CareerPortal", "AttachmentInfo")
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Section)
    @Html.HiddenFor(x => x.JobId)
    @Html.HiddenFor(x => x.ExperienceType)
    <p>@Translate.Text("attachment notes")</p>
    <p><label id="attachmentError" class="parsley-errors-list"></label></p>
    <div class="form-field--group form-field--upload--group mb0">

        <div id="attachmentList">
            @{ Html.RenderPartial("~/Views/Feature/HR/CareerPortal/Modules/_AttachmentList.cshtml", Model); }
        </div>
        <div class="form-field form-field--upload">
            <div class="form-field__input-wrapper">
                <div class="form-field__preview-wrapper">
                    <img src="../../images/preview_pdf@2x.png"
                         id="previewImage"
                         data-src="../../images/preview_pdf@2x.png"
                         data-success="../../images/upload_success@2x.png"
                         class="form-field__preview"
                         aria-hidden="true"
                         role="presentation"
                         data-row-replace=""
                         alt=""
                         data-uploader-image="attachment" />
                </div>
                <div class="form-field__uploader-details">
                    <span class="form-field__input-wrapper form-field__input-wrapper--select">
                        <select class="form-field__input form-field__input--select form-field__input--select-full "
                                id="form-field-attchmentTypes"
                                name="AttachementTypes"
                                aria-describedby="description-for-attchmentTypes"
                                data-parsley-errors-container="#description-for-attchmentTypes"
                                required=""
                                data-parsley-required-message="@Translate.Text("J106.FieldRequired")"
                                data-parsley-trigger="change"
                                data-parsley-id="6">
                            <option value="0" data-val="000" selected="">@Translate.Text("select text") @Translate.Text("attachment type label")</option>
                            @foreach (var item in Model.AttachementTypes)
                            {
                                <option value="@item.Value" data-option-value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </span>
                    <div class="form-field__upload-choose">
                        <label>
                            <input class="form-field__input form-field__input--upload parsley-success"
                                   id="form-field-attachment"
                                   name="attachment"
                                   type="file"
                                   aria-describedby="description-for-attachment"
                                   data-parsley-errors-container="#description-for-attachment"
                                   required="" data-parsley-required-message="@Translate.Text("J106.FieldRequired")"
                                   data-uploader-field="attachment"
                                   accept="application/pdf, image/*"
                                   data-accepts="&quot;jpg&quot;,&quot;png&quot;,&quot;jpeg&quot;,&quot;pdf&quot;"
                                   data-size="2048000"
                                   data-parsley-trigger="focusout"
                                   data-parsley-id="6"
                                   aria-invalid="false">
                            <span class="button button--primary button--next button--small focus-enabled" data-uploader-button="upload-choose">@Translate.Text("Choose")</span>
                        </label>
                    </div>
                    <button class="button button--quaternary hidden" id="uploadFile" type="button" style="margin-top: 8px;">@Translate.Text("add text")</button>
                    <p class="form-field__input--upload-format-error-message" data-uploader-format-error="error-message" style="display: none;">@Translate.Text("file upload format validation")</p>
                    <p class="form-field__input--upload-size-error-message" data-uploader-size-error="error-message" style="display: none;">@Translate.Text("File Upload Size Validation")</p>
                    <p class="form-field__input--upload-empty-message red" data-uploader-empty-error="error-message" style="display: none;">@Translate.Text("upload file require")</p>
                    <p class="form-field__input--upload-type-message red" data-uploader-empty-error="error-message" style="display: none;">@Translate.Text("attachment type validation")</p>
                    <p class="form-field__input--upload-filename" data-uploader-filename="fmzs8snvo" style="display: none;margin-bottom: 0px;"></p>
                    <p><button class="button button--text button--remove hidden" data-uploader-remove="fmzs8snvo" style="display: none;">@Translate.Text("remove button text")</button></p>
                </div>
            </div>
            <div id="description-for-attachment" class="form-field__messages">
                <p class="form-field__description">
                    <br>@Translate.Text("file size notes")
                    @*@Html.Raw(Translate.Text("emirate id note"))*@
                    @*<strong>@Translate.Text("note label")</strong>*@
                </p>
            </div>
        </div>
    </div>
    <div class="form-field__button save-continue-btns form-field--12">
        @Html.HiddenFor(x => x.SaveandContinueButtonClicked, new { id = "saveandcontinuebuttonclicked" })
        <button id="btnAttachmentContinue" type="submit" data-text="False" class="button button--quaternary">@Translate.Text("exit text")</button>
        <button id="btnAttachmentSave" type="submit" data-text="True" class="button button--primary">@Translate.Text("continue text")</button>
    </div>
}


<script type="text/javascript">
    $('.m21-avatar__name').html('@ViewBag.FullName');
    setTimeout(function () {
        jQuery(window).trigger('proprogress', [@Model.ProfileProgress]);
    }, 500);
    var $saveandcontinuebuttonclicked = jQuery('#saveandcontinuebuttonclicked');
    $("#form-field-attachment").change(function (e) {
        if ($(this)[0].files[0].size < 2048000)
            jQuery("#uploadFile").show();
    });
    $("form button[type=submit]").click(function (e) {
        var id = "#candidateprofile" + @Model.Section;
        jQuery(id).parsley().destroy();
        if ($(this).attr("data-text") == "True") {
            $saveandcontinuebuttonclicked[0].value = true;
        }
        else {
            $saveandcontinuebuttonclicked[0].value = false;
        }
        //handleQualificationSelection1(e);
    });
    $("#uploadFile").click(function (e) {
        // Checking whether FormData is available in browser
        if (window.FormData !== undefined) {

            var fileUpload = $("#form-field-attachment").get(0);
            var files = fileUpload.files,
                $filetype = $('#form-field-attchmentTypes');

            //console.log($filetype.val())

            if (files.length > 0 && $filetype.val() != '0') {
                // Create FormData object
                var fileData = new FormData();

                jQuery('.form-field__input--upload-empty-message').hide();
                jQuery('.form-field__input--upload-type-message').hide();

                // Looping over all files and add it to FormData object
                for (var i = 0; i < files.length; i++) {
                    fileData.append(files[i].name, files[i]);
                }


                var url = "/api/sitecore/CareerPortal/AjaxUploadFiles";
                fileData.append("attachmentHeader", $("#form-field-attchmentTypes").val());
                fileData.append("attachmentType", $("#form-field-attchmentTypes option:selected").attr("data-option-value"));
                fileData.append("updateParameter", $("#previewImage").attr("data-row-replace"));
                $.ajax({
                    url: url,
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData, //{ attachmentData: fileData, attachmentType: attchmentType, modelParameter: dataModel },
                    beforeSend: function () {
                        jQuery('.j105-drrg--loader').show();
                        jQuery('.j105-drrg--loader').css('top', $(window).scrollTop());
                        $('body').removeClass('unscrollable').addClass('unscrollable');
                        $("#attachmentError").html('');
                    },
                    complete: function () {
                        jQuery('.j105-drrg--loader').hide();
                        $('body').removeClass('unscrollable');
                    }
                }).done(function (response) {
                    if (response != null && response.strMessage != undefined && response.strMessage != "") {
                        $("#attachmentError").html('');
                        $("#attachmentError").html(response.strMessage);
                    }
                    else {
                        $("#attachmentList").html('');
                        $("#attachmentList").html(response);
                        $("#form-field-attchmentTypes").val('0');
                        $("#previewImage").attr("data-row-replace", "");
                        jQuery('#form-field-attachment').val('');
                        jQuery(".m21-avatar__image").css("background-image", "url('')");
                        if (jQuery("#PP").val() != undefined) {
                            jQuery(".m21-avatar__image").css("background-image", "url(" + jQuery("#PP").val() + ")");
                        }
                        else {
                            jQuery(".m21-avatar__image").css("background-image", "url(../../images/no-image.png)");
                        }

                        jQuery("#previewImage").attr("src", "../../images/preview_pdf@2x.png");
                        var sec = '@Model.Section';
                        require(['parsley'], function () {
                            jQuery('#candidateprofile' + sec).parsley();
                        });
                        jQuery(window).trigger('reinitremoveFile');
                    }
                });
            } else if ($filetype.val() != '0') {
                jQuery('.form-field__input--upload-empty-message').show();
                jQuery('.form-field__input--upload-type-message').hide();
            } else if (files.length > 0) {
                jQuery('.form-field__input--upload-type-message').show();
                jQuery('.form-field__input--upload-empty-message').hide();
            } else {
                jQuery('.form-field__input--upload-empty-message').show();
                jQuery('.form-field__input--upload-type-message').show();
            }

        } else {

        }
    });
</script>