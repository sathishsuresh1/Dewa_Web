@model DEWAXP.Foundation.Integration.APIHandler.Models.Response.SmartSurvey.Questiontypeslist
@{
    string groupnumber = ViewData["group"].ToString();
    bool email = ViewData["email"] != null && !string.IsNullOrWhiteSpace(ViewData["email"].ToString());
    string status = ViewData["status"] != null ? ViewData["status"].ToString() : string.Empty;
    bool displayonly = ((!string.IsNullOrWhiteSpace(Model.Displayonly) && Model.Displayonly.Equals("X")) || (!string.IsNullOrWhiteSpace(status) && status.Equals("D")));
}
<div class="form-field form-field--text">
    @if (!string.IsNullOrWhiteSpace(Model.Asheading) && Model.Asheading.Equals("X")) { }
    else
    {
        <label for="form-field-group@(groupnumber)_question@(Model.Questionnumber)" class="form-field__label @(displayonly?" form-field__label--readonly":string.Empty)">
            @Model.Question
            <span class="form-field__label-required aria-only">(@(!string.IsNullOrWhiteSpace(Model.Mandatory) && Model.Mandatory.Equals("X") ? "required" : "optional"))</span>
        </label>
    }
    <span class="form-field__input-wrapper @(displayonly?"form-field__input-wrapper--readonly":string.Empty)">
        <input class="form-field__input form-field__input--text @(displayonly?"form-field__input--readonly":string.Empty)  @(displayonly ? "disabled" : string.Empty)"
               id="form-field-group@(groupnumber)_question@(Model.Questionnumber)"
               name="form-field-group@(groupnumber)_question@(Model.Questionnumber)"
               type="@(email?"email":"text")" placeholder="@Model.Questionplaceholder"
                 @(displayonly ? "disabled" : string.Empty)
               value="@(displayonly||(!string.IsNullOrWhiteSpace(Model.Backendvalue)&& Model.Backendvalue.Equals("X"))?Model.Surveyfeedback:string.Empty)"
               aria-describedby="description-for-group@(groupnumber)_question@(Model.Questionnumber)"
               data-parsley-errors-container="#description-for-group@(groupnumber)_question@(Model.Questionnumber)"
               @(!string.IsNullOrWhiteSpace(Model.Mandatory) && Model.Mandatory.Equals("X") ? "required" : string.Empty)
               data-parsley-required-message="@Model.Questionplaceholder"
               data-parsley-error-message="@Model.Questionplaceholder"
               data-parsley-trigger="focusout"
               data-parsley-id="6">
    </span>
    <div id="description-for-group@(groupnumber)_question@(Model.Questionnumber)" class="form-field__messages">
    </div>
</div>
